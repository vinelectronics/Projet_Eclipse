   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"lpc17xx_uart.c"
  21              	.Ltext0:
  22              		.section	.text.getUartNum,"ax",%progbits
  23              		.align	2
  24              		.global	getUartNum
  25              		.thumb
  26              		.thumb_func
  28              	getUartNum:
  29              	.LFB31:
  30              		.file 1 "Libraries/NXP/Drivers/source/lpc17xx_uart.c"
   1:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
   2:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @file	: lpc17xx_uart.c
   3:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief	: Contains all functions support for UART firmware library on LPC17xx
   4:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @version	: 1.0
   5:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @date	: 18. Mar. 2009
   6:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @author	: HieuNguyen
   7:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **************************************************************************
   8:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Software that is described herein is for illustrative purposes only
   9:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * which provides customers with programming information regarding the
  10:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * products. This software is supplied "AS IS" without any warranties.
  11:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * NXP Semiconductors assumes no responsibility or liability for the
  12:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * use of the software, conveys no license or title under any patent,
  13:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * copyright, or mask work right to the product. NXP Semiconductors
  14:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * reserves the right to make changes in the software without
  15:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * notification. NXP Semiconductors also make no representation or
  16:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * warranty that such application will be suitable for the specified
  17:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * use without further testing or modification.
  18:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
  19:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  20:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Peripheral group ----------------------------------------------------------- */
  21:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** @addtogroup UART
  22:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @{
  23:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  24:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  25:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Includes ------------------------------------------------------------------- */
  26:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #include "lpc17xx_uart.h"
  27:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #include "lpc17xx_clkpwr.h"
  28:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  29:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* If this source file built with example, the LPC17xx FW library configuration
  30:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * file in each example directory ("lpc17xx_libcfg.h") must be included,
  31:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * otherwise the default FW library configuration file must be included instead
  32:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  33:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef __BUILD_WITH_EXAMPLE__
  34:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #include "lpc17xx_libcfg.h"
  35:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #else
  36:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #include "lpc17xx_libcfg_default.h"
  37:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif /* __BUILD_WITH_EXAMPLE__ */
  38:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  39:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  40:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART
  41:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  42:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Private Types -------------------------------------------------------------- */
  43:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** @defgroup UART_Private_Types
  44:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @{
  45:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  46:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  47:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
  48:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief UART call-back function type definitions
  49:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  50:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** typedef struct {
  51:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	fnTxCbs_Type *pfnTxCbs; 	// Transmit callback
  52:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	fnRxCbs_Type *pfnRxCbs;		// Receive callback
  53:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	fnABCbs_Type *pfnABCbs;		// Auto-Baudrate callback
  54:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	fnErrCbs_Type *pfnErrCbs;	// Error callback
  55:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** } UART_CBS_Type;
  56:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  57:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
  58:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @}
  59:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  60:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  61:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  62:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Private Variables ---------------------------------------------------------- */
  63:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** @defgroup UART_Private_Variables
  64:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @{
  65:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  66:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  67:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  68:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** Call-back function pointer data */
  69:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** UART_CBS_Type uartCbsDat[4] = {
  70:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{NULL, NULL, NULL, NULL},
  71:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{NULL, NULL, NULL, NULL},
  72:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{NULL, NULL, NULL, NULL},
  73:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{NULL, NULL, NULL, NULL},
  74:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** };
  75:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  76:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** UART1 modem status interrupt callback pointer data */
  77:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** fnModemCbs_Type *pfnModemCbs = NULL;
  78:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  79:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
  80:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @}
  81:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  82:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  83:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  84:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Private Functions ---------------------------------------------------------- */
  85:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** @defgroup UART_Private_Functions
  86:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @{
  87:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  88:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
  89:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
  90:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Get UART number due to UART peripheral pointer
  91:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART pointer
  92:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		UART number
  93:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
  94:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint8_t getUartNum(LPC_UART_TypeDef *UARTx) {
  31              	end = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              		.loc 1 95 0
  95:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART0) return (0);
  36              	r3, .L10
  37 0000 074B     		.loc 1 94 0
  38              		@ lr needed for prologue
  39              		.loc 1 95 0
  40              		cmp	r0, r3
  41 0002 9842     		bne	.L2
  42 0004 01D1     		movs	r0, #0
  43 0006 0020     	.LVL1:
  44              		b	.L4
  45 0008 09E0     	.LVL2:
  46              	.L2:
  47              		.loc 1 96 0
  96:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else if (UARTx == (LPC_UART_TypeDef *)LPC_UART1) return (1);
  48              	0+4
  49 000a 064B     		cmp	r0, r3
  50 000c 9842     		bne	.L5
  51 000e 01D1     		movs	r0, #1
  52 0010 0120     	.LVL3:
  53              		b	.L4
  54 0012 04E0     	.LVL4:
  55              	.L5:
  56              		.loc 1 97 0
  97:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else if (UARTx == LPC_UART2) return (2);
  57              	.L10+8
  58 0014 044B     		cmp	r0, r3
  59 0016 9842     		ite	ne
  60 0018 14BF     		movne	r0, #3
  61 001a 0320     		moveq	r0, #2
  62 001c 0220     	.LVL5:
  63              	.L4:
  64              		.loc 1 99 0
  98:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else return (3);
  99:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
  65              	L11:
  66 001e 7047     		.align	2
  67              	.L10:
  68              		.word	1073790976
  69              		.word	1073807360
  70 0020 00C00040 		.word	1074364416
  71 0024 00000140 	.LFE31:
  73              		.section	.text.UART_GenIntHandler,"ax",%progbits
  74              		.align	2
  75              		.global	UART_GenIntHandler
  76              		.thumb
  77              		.thumb_func
  79              	UART_GenIntHandler:
  80              	.LFB33:
  81              		.loc 1 236 0
  82              		@ args = 0, pretend = 0, frame = 0
 100:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 101:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 102:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Determines best dividers to get a target clock rate
 103:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	Pointer to selected UART peripheral, should be
 104:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART0, UART1, UART2 or UART3.
 105:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	baudrate Desired UART baud rate.
 106:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		Error status.
 107:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 108:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 109:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** Status uart_set_divisors(LPC_UART_TypeDef *UARTx, uint32_t baudrate)
 110:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 111:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	Status errorStatus = ERROR;
 112:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 113:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t uClk;
 114:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t calcBaudrate = 0;
 115:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t temp = 0;
 116:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 117:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t mulFracDiv, dividerAddFracDiv;
 118:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t diviser = 0 ;
 119:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t mulFracDivOptimal = 1;
 120:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t dividerAddOptimal = 0;
 121:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t diviserOptimal = 0;
 122:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 123:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t relativeError = 0;
 124:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t relativeOptimalError = 100000;
 125:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 126:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	/* get UART block clock */
 127:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART0)
 128:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 129:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART0);
 130:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 131:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else if (UARTx == (LPC_UART_TypeDef *)LPC_UART1)
 132:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 133:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART1);
 134:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 135:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else if (UARTx == LPC_UART2)
 136:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 137:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART2);
 138:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 139:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else /*mthomas, avoid warning: if (UARTx == LPC_UART3) */
 140:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 141:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART3);
 142:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 143:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 144:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 145:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uClk = uClk >> 4; /* div by 16 */
 146:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	/* In the Uart IP block, baud rate is calculated using FDR and DLL-DLM registers
 147:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	* The formula is :
 148:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	* BaudRate= uClk * (mulFracDiv/(mulFracDiv+dividerAddFracDiv) / (16 * (DLL)
 149:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	* It involves floating point calculations. That's the reason the formulae are adjusted with
 150:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	* Multiply and divide method.*/
 151:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	/* The value of mulFracDiv and dividerAddFracDiv should comply to the following expressions:
 152:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	* 0 < mulFracDiv <= 15, 0 <= dividerAddFracDiv <= 15 */
 153:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	for (mulFracDiv = 1 ; mulFracDiv <= 15 ;mulFracDiv++)
 154:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 155:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	for (dividerAddFracDiv = 0 ; dividerAddFracDiv <= 15 ;dividerAddFracDiv++)
 156:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 157:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  temp = (mulFracDiv * uClk) / ((mulFracDiv + dividerAddFracDiv));
 158:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 159:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  diviser = temp / baudrate;
 160:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  if ((temp % baudrate) > (baudrate / 2))
 161:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		diviser++;
 162:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 163:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  if (diviser > 2 && diviser < 65536)
 164:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  {
 165:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		calcBaudrate = temp / diviser;
 166:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 167:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (calcBaudrate <= baudrate)
 168:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  relativeError = baudrate - calcBaudrate;
 169:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
 170:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  relativeError = calcBaudrate - baudrate;
 171:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 172:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if ((relativeError < relativeOptimalError))
 173:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 174:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  mulFracDivOptimal = mulFracDiv ;
 175:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  dividerAddOptimal = dividerAddFracDiv;
 176:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  diviserOptimal = diviser;
 177:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  relativeOptimalError = relativeError;
 178:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		  if (relativeError == 0)
 179:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 180:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 181:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  } /* End of if */
 182:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} /* end of inner for loop */
 183:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (relativeError == 0)
 184:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	  break;
 185:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} /* end of outer for loop  */
 186:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 187:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (relativeOptimalError < ((baudrate * UART_ACCEPTED_BAUDRATE_ERROR)/100))
 188:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 189:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 190:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 191:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 192:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/DLM = UART_LOAD_DLM(diviserOptimal);
 193:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/DLL = UART_LOAD_DLL(diviserOptimal);
 194:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			/* Then reset DLAB bit */
 195:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 196:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->FDR = (UART_FDR_MULVAL(mulFracDivOptimal) \
 197:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 					| UART_FDR_DIVADDVAL(dividerAddOptimal)) & UART_FDR_BITMASK;
 198:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 199:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
 200:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 201:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->LCR |= UART_LCR_DLAB_EN;
 202:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->/*DLIER.*/DLM = UART_LOAD_DLM(diviserOptimal);
 203:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->/*RBTHDLR.*/DLL = UART_LOAD_DLL(diviserOptimal);
 204:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			/* Then reset DLAB bit */
 205:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 206:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->FDR = (UART_FDR_MULVAL(mulFracDivOptimal) \
 207:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 					| UART_FDR_DIVADDVAL(dividerAddOptimal)) & UART_FDR_BITMASK;
 208:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 209:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		errorStatus = SUCCESS;
 210:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 211:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 212:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return errorStatus;
 213:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 214:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 215:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 216:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		General UART interrupt handler and router
 217:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral, should be UART0..3
 218:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
 219:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *
 220:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note:
 221:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * - Handles transmit, receive, and status interrupts for the UART.
 222:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Based on the interrupt status, routes the interrupt to the
 223:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * respective call-back to be handled by the user application using
 224:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * this driver.
 225:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * - If callback is not installed, corresponding interrupt will be disabled
 226:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * - All these interrupt source below will be checked:
 227:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *   		- Transmit Holding Register Empty.
 228:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- Received Data Available and Character Time Out.
 229:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- Receive Line Status (not implemented)
 230:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- End of auto-baud interrupt (not implemented)
 231:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- Auto-Baudrate Time-Out interrupt (not implemented)
 232:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- Modem Status interrupt (UART0 Modem functionality)
 233:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			- CTS signal transition interrupt (UART0 Modem functionality)
 234:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 235:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_GenIntHandler(LPC_UART_TypeDef *UARTx)
 236:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
  83              	0, uses_anonymous_args = 0
  84              	.LVL6:
  85              		push	{r4, r5, r6, r7, r8, lr}
  86              	.LCFI0:
  87 0000 2DE9F041 		.loc 1 236 0
  88              		mov	r5, r0
  89              		.loc 1 240 0
  90 0004 0546     		bl	getUartNum
 237:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t pUart, modemsts;
 238:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t intsrc, tmp, tmp1;
 239:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 240:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	pUart = getUartNum(UARTx);
  91              	.loc 1 243 0
  92 0006 FFF7FEFF 		ldr	r7, [r5, #8]
  93              	.LVL8:
 241:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 242:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	/* Determine the interrupt source */
 243:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	intsrc = UARTx->IIR;
  94              	oc 1 250 0
  95 000a AF68     		cmp	r0, #1
  96              	.LVL9:
 244:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp = intsrc & UART_IIR_INTID_MASK;
 245:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 246:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	/*
 247:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	 * In case of using UART1 with full modem,
 248:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	 * interrupt ID = 0 that means modem status interrupt has been detected
 249:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	 */
 250:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (pUart == 1) {
  97              	oc 1 240 0
  98 000c 0128     		mov	r6, r0
  99              	.LVL10:
 100              		.loc 1 244 0
 101 000e 0646     		and	r4, r7, #14
 102              	.LVL11:
 103              		.loc 1 250 0
 104 0010 07F00E04 		bne	.L13
 105              		.loc 1 251 0
 106              		cbnz	r4, .L13
 107 0014 0BD1     		.loc 1 253 0
 251:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (tmp == 0){
 108              	40
 109 0016 54B9     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 252:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Check Modem status
 253:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			modemsts = LPC_UART1->MSR & UART1_MSR_BITMASK;
 110              	ov	r0, r3
 111 0018 254A     	.LVL12:
 112 001a 137E     		.loc 1 255 0
 113 001c 1846     		ldr	r3, .L40+4
 114              		ldr	r3, [r3, #0]
 254:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Call modem status call-back
 255:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if (pfnModemCbs != NULL){
 115              		r3, .L39
 116 001e 254B     		.loc 1 261 0
 117 0020 1B68     		ldr	r3, [r2, #4]
 118 0022 7BB9     		bic	r3, r3, #136
 256:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				pfnModemCbs(modemsts);
 257:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
 258:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// disable modem status interrupt and CTS status change interrupt
 259:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// if its callback is not installed
 260:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			else {
 261:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				LPC_UART1->IER &= ~(UART1_IER_MSINT_EN | UART1_IER_CTSINT_EN);
 119              		r3, [r2, #4]
 120 0024 5368     		b	.L21
 121 0026 23F08803 	.LVL13:
 122 002a 5360     	.L13:
 123 002c 2BE0     		.loc 1 267 0
 124              		cmp	r4, #6
 125              		bne	.L19
 262:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
 263:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 264:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 265:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 266:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Receive Line Status
 267:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_RLS){
 126              	 269 0
 127 002e 062C     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 128 0030 0ED1     		.loc 1 274 0
 268:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Check line status
 269:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp1 = UARTx->LSR;
 129              	ds	r0, r3, #158
 130 0032 2B7D     	.LVL14:
 270:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Mask out the Receive Ready and Transmit Holding empty status
 271:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp1 &= (UART_LSR_OE | UART_LSR_PE | UART_LSR_FE \
 272:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				| UART_LSR_BI | UART_LSR_RXFE);
 273:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// If any error exist
 274:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (tmp1) {
 131              	eq	.L21
 132 0034 13F09E00 		.loc 1 276 0
 133              		ldr	r3, .L40+8
 134 0038 25D0     		add	r3, r3, r6, lsl #4
 275:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Call Call-back function with error input value
 276:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if (uartCbsDat[pUart].pfnErrCbs != NULL) {
 135              		r3, [r3, #12]
 136 003a 1F4B     		cbz	r3, .L23
 137 003c 03EB0613 	.LVL15:
 138 0040 DB68     	.L39:
 139 0042 0BB1     		.loc 1 277 0
 140              		blx	r3
 141              	.LVL16:
 277:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				uartCbsDat[pUart].pfnErrCbs(tmp1);
 142              	
 143 0044 9847     	.LVL17:
 144              	.L23:
 145 0046 1EE0     		.loc 1 281 0
 146              		ldr	r3, [r5, #4]
 147              		bic	r3, r3, #4
 278:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
 279:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Disable interrupt if its call-back is not install
 280:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			else {
 281:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				UARTx->IER &= ~(UART_IER_RLSINT_EN);
 148              	38
 149 0048 6B68     	.LVL18:
 150 004a 23F00403 	.L19:
 151 004e 19E0     		.loc 1 287 0
 152              		cmp	r4, #4
 153              		beq	.L25
 282:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
 283:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 284:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 285:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 286:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Receive Data Available or Character time-out
 287:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if ((tmp == UART_IIR_INTID_RDA) || (tmp == UART_IIR_INTID_CTI)){
 154              	4, #12
 155 0050 042C     		bne	.L18
 156 0052 01D0     	.L25:
 157 0054 0C2C     		.loc 1 289 0
 158 0056 0AD1     		ldr	r3, .L40+8
 159              		add	r3, r3, r6, lsl #4
 288:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Call Rx call back function
 289:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (uartCbsDat[pUart].pfnRxCbs != NULL) {
 160              	3, [r3, #4]
 161 0058 174B     		cbz	r3, .L27
 162 005a 03EB0613 		.loc 1 290 0
 163 005e 5B68     		blx	r3
 164 0060 0BB1     		b	.L18
 290:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			uartCbsDat[pUart].pfnRxCbs();
 165              	
 166 0062 9847     		.loc 1 294 0
 167 0064 03E0     		ldr	r3, [r5, #4]
 168              		bic	r3, r3, #1
 291:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 292:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable interrupt if its call-back is not install
 293:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else {
 294:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->IER &= ~(UART_IER_RBRINT_EN);
 169              	r	r3, [r5, #4]
 170 0066 6B68     	.L18:
 171 0068 23F00103 		.loc 1 299 0
 172 006c 6B60     		cmp	r4, #2
 173              		bne	.L21
 295:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 296:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 297:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 298:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Transmit Holding Empty
 299:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_THRE){
 174              	 1 301 0
 175 006e 022C     		ldr	r3, .L40+8
 176 0070 09D1     		lsls	r2, r6, #4
 300:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Call Tx call back function
 301:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (uartCbsDat[pUart].pfnTxCbs != NULL) {
 177              	r	r3, [r2, r3]
 178 0072 114B     		cbz	r3, .L30
 179 0074 3201     		.loc 1 302 0
 180 0076 D358     		blx	r3
 181 0078 0BB1     		b	.L21
 302:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			uartCbsDat[pUart].pfnTxCbs();
 182              	
 183 007a 9847     		.loc 1 306 0
 184 007c 03E0     		ldr	r3, [r5, #4]
 185              		bic	r3, r3, #2
 303:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 304:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable interrupt if its call-back is not install
 305:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else {
 306:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->IER &= ~(UART_IER_THREINT_EN);
 186              	L19:
 187 007e 6B68     	.L38:
 188 0080 23F00203 		str	r3, [r5, #4]
 189              	.LVL20:
 190              	.L21:
 191 0084 6B60     		.loc 1 312 0
 192              		ands	r0, r7, #768
 193              	.LVL21:
 307:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 308:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 309:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 310:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	intsrc &= (UART_IIR_ABEO_INT | UART_IIR_ABTO_INT);
 311:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Check if End of auto-baudrate interrupt or Auto baudrate time out
 312:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (intsrc){
 194              	6
 195 0086 17F44070 		.loc 1 314 0
 196              		ldr	r3, [r5, #32]
 197 008a 0ED0     		orr	r3, r0, r3
 313:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Clear interrupt pending
 314:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ACR |= ((intsrc & UART_IIR_ABEO_INT) ? UART_ACR_ABEOINT_CLR : 0) \
 198              		r3, [r5, #32]
 199 008c 2B6A     		.loc 1 316 0
 200 008e 40EA0303 		ldr	r3, .L40+8
 201 0092 2B62     		add	r3, r3, r6, lsl #4
 315:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 						| ((intsrc & UART_IIR_ABTO_INT) ? UART_ACR_ABTOINT_CLR : 0);
 316:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (uartCbsDat[pUart].pfnABCbs != NULL) {
 202              		r2, [r3, #8]
 203 0094 084B     		cbz	r2, .L34
 204 0096 03EB0613 		.loc 1 317 0
 205 009a 9A68     		blx	r2
 206 009c 0AB1     	.LVL22:
 317:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			uartCbsDat[pUart].pfnABCbs(intsrc);
 207              	36
 208 009e 9047     	.LVL23:
 209              	.L34:
 210 00a0 03E0     		.loc 1 320 0
 211              		ldr	r3, [r5, #4]
 212              		bic	r3, r3, #768
 318:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		} else {
 319:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Disable End of AB interrupt
 320:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->IER &= ~(UART_IER_ABEOINT_EN | UART_IER_ABTOINT_EN);
 213              	3, [r5, #4]
 214 00a2 6B68     	.L36:
 215 00a4 23F44073 		.loc 1 323 0
 216 00a8 6B60     		pop	{r4, r5, r6, r7, r8, pc}
 217              	.L41:
 321:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 322:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 323:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 218              	gn	2
 219 00aa BDE8F081 	.L40:
 220              		.word	1073807360
 221 00ae C046     		.word	.LANCHOR0
 222              		.word	.LANCHOR1
 223 00b0 00000140 	.LFE33:
 225 00b8 00000000 		.section	.text.UART_ConfigStructInit,"ax",%progbits
 226              		.align	2
 227              		.global	UART_ConfigStructInit
 228              		.thumb
 229              		.thumb_func
 231              	UART_ConfigStructInit:
 232              	.LFB36:
 233              		.loc 1 600 0
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 324:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 325:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
 326:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @}
 327:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
 328:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 329:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 330:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Public Functions ----------------------------------------------------------- */
 331:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /** @addtogroup UART_Public_Functions
 332:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @{
 333:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
 334:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 335:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 336:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		De-initializes the UARTx peripheral registers to their
 337:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                  default reset values.
 338:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 339:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 340:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		None
 341:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 342:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_DeInit(LPC_UART_TypeDef* UARTx)
 343:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 344:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// For debug mode
 345:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 346:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 347:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_TxCmd(UARTx, DISABLE);
 348:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 349:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART0
 350:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART0)
 351:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 352:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 353:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART0, DISABLE);
 354:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 355:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 356:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 357:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART1
 358:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 359:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 360:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 361:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART1, DISABLE);
 362:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 363:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 364:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 365:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART2
 366:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART2)
 367:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 368:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 369:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART2, DISABLE);
 370:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 371:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 372:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 373:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART3
 374:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART3)
 375:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 376:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 377:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART3, DISABLE);
 378:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 379:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 380:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 381:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 382:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /********************************************************************//**
 383:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Initializes the UARTx peripheral according to the specified
 384:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *               parameters in the UART_ConfigStruct.
 385:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 386:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 387:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UART_ConfigStruct Pointer to a UART_CFG_Type structure
 388:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    that contains the configuration information for the
 389:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    specified UART peripheral.
 390:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		None
 391:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *********************************************************************/
 392:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_Init(LPC_UART_TypeDef *UARTx, UART_CFG_Type *UART_ConfigStruct)
 393:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 394:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t tmp;
 395:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 396:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// For debug mode
 397:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 398:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_DATABIT(UART_ConfigStruct->Databits));
 399:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_STOPBIT(UART_ConfigStruct->Stopbits));
 400:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_PARITY(UART_ConfigStruct->Parity));
 401:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 402:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART0
 403:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if(UARTx == LPC_UART0)
 404:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 405:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 406:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART0, ENABLE);
 407:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 408:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 409:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 410:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART1
 411:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if(((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 412:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 413:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 414:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART1, ENABLE);
 415:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 416:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 417:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 418:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART2
 419:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if(UARTx == LPC_UART2)
 420:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 421:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 422:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART2, ENABLE);
 423:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 424:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 425:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 426:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART3
 427:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if(UARTx == LPC_UART3)
 428:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 429:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 430:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART3, ENABLE);
 431:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 432:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 433:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 434:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 435:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 436:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* FIFOs are empty */
 437:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = ( UART_FCR_FIFO_EN \
 438:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				| UART_FCR_RX_RS | UART_FCR_TX_RS);
 439:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable FIFO
 440:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = 0;
 441:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 442:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Dummy reading
 443:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (((LPC_UART1_TypeDef *)UARTx)->LSR & UART_LSR_RDR)
 444:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 445:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = ((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/RBR;
 446:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 447:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 448:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->TER = UART_TER_TXEN;
 449:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Wait for current transmit complete
 450:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (!(((LPC_UART1_TypeDef *)UARTx)->LSR & UART_LSR_THRE));
 451:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable Tx
 452:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->TER = 0;
 453:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 454:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable interrupt
 455:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER = 0;
 456:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set LCR to default state
 457:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR = 0;
 458:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set ACR to default state
 459:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->ACR = 0;
 460:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set Modem Control to default state
 461:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->MCR = 0;
 462:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set RS485 control to default state
 463:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->RS485CTRL = 0;
 464:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set RS485 delay timer to default state
 465:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->RS485DLY = 0;
 466:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set RS485 addr match to default state
 467:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->ADRMATCH = 0;
 468:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		//Dummy Reading to Clear Status
 469:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = ((LPC_UART1_TypeDef *)UARTx)->MSR;
 470:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = ((LPC_UART1_TypeDef *)UARTx)->LSR;
 471:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 472:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 473:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 474:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		/* FIFOs are empty */
 475:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = ( UART_FCR_FIFO_EN | UART_FCR_RX_RS | UART_FCR_TX_RS);
 476:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable FIFO
 477:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = 0;
 478:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 479:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Dummy reading
 480:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (UARTx->LSR & UART_LSR_RDR)
 481:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 482:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UARTx->/*RBTHDLR.*/RBR;
 483:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 484:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 485:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->TER = UART_TER_TXEN;
 486:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Wait for current transmit complete
 487:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_THRE));
 488:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable Tx
 489:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->TER = 0;
 490:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 491:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Disable interrupt
 492:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->/*DLIER.*/IER = 0;
 493:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set LCR to default state
 494:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->LCR = 0;
 495:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set ACR to default state
 496:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ACR = 0;
 497:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Dummy reading
 498:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UARTx->LSR;
 499:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 500:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 501:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx == LPC_UART3)
 502:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 503:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set IrDA to default state
 504:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ICR = 0;
 505:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 506:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 507:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Set Line Control register ----------------------------
 508:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 509:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uart_set_divisors(UARTx, (UART_ConfigStruct->Baud_rate));
 510:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 511:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 512:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 513:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = (((LPC_UART1_TypeDef *)UARTx)->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) \
 514:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				& UART_LCR_BITMASK;
 515:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 516:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 517:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 518:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = (UARTx->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) & UART_LCR_BITMASK;
 519:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 520:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 521:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch (UART_ConfigStruct->Databits){
 522:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_DATABIT_5:
 523:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN5;
 524:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 525:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_DATABIT_6:
 526:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN6;
 527:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 528:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_DATABIT_7:
 529:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN7;
 530:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 531:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_DATABIT_8:
 532:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
 533:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN8;
 534:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 535:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 536:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 537:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UART_ConfigStruct->Parity == UART_PARITY_NONE)
 538:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 539:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Do nothing...
 540:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 541:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 542:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 543:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_PARITY_EN;
 544:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		switch (UART_ConfigStruct->Parity)
 545:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 546:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_PARITY_ODD:
 547:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_ODD;
 548:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 549:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 550:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_PARITY_EVEN:
 551:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_EVEN;
 552:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 553:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 554:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_PARITY_SP_1:
 555:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_F_1;
 556:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 557:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 558:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_PARITY_SP_0:
 559:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_F_0;
 560:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 561:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		default:
 562:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 563:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 564:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 565:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 566:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch (UART_ConfigStruct->Stopbits){
 567:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_STOPBIT_2:
 568:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_LCR_STOPBIT_SEL;
 569:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 570:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_STOPBIT_1:
 571:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
 572:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Do no thing
 573:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 574:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 575:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 576:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 577:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Write back to LCR, configure FIFO and Disable Tx
 578:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) ==  LPC_UART1)
 579:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 580:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR = (uint8_t)(tmp & UART_LCR_BITMASK);
 581:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 582:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 583:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 584:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->LCR = (uint8_t)(tmp & UART_LCR_BITMASK);
 585:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 586:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 587:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 588:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 589:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*****************************************************************************//**
 590:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @brief		Fills each UART_InitStruct member with its default value:
 591:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				9600 bps
 592:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				8-bit data
 593:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				1 Stopbit
 594:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				None Parity
 595:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @param[in]	UART_InitStruct Pointer to a UART_CFG_Type structure
 596:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    which will be initialized.
 597:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @return		None
 598:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *******************************************************************************/
 599:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_ConfigStructInit(UART_CFG_Type *UART_InitStruct)
 600:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 236              	ave eliminated.
 237              	.LVL24:
 238              		.loc 1 601 0
 239              		mov	r3, #9600
 240              		str	r3, [r0, #0]
 601:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_InitStruct->Baud_rate = 9600;
 241              	 1 602 0
 242 0000 4FF41653 		movs	r3, #3
 243 0004 0360     		strb	r3, [r0, #5]
 602:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_InitStruct->Databits = UART_DATABIT_8;
 244              	oc 1 603 0
 245 0006 0323     		movs	r3, #0
 246 0008 4371     		.loc 1 600 0
 603:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_InitStruct->Parity = UART_PARITY_NONE;
 247              	lr needed for prologue
 248 000a 0023     		.loc 1 603 0
 249              		strb	r3, [r0, #4]
 250              		.loc 1 604 0
 251              		strb	r3, [r0, #6]
 252 000c 0371     		.loc 1 605 0
 604:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_InitStruct->Stopbits = UART_STOPBIT_1;
 253              	
 254 000e 8371     	.LFE36:
 605:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 256 0010 7047     		.section	.text.UART_SendData,"ax",%progbits
 257              		.align	2
 258              		.global	UART_SendData
 259 0012 C046     		.thumb
 260              		.thumb_func
 262              	UART_SendData:
 263              	.LFB37:
 264              		.loc 1 616 0
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 606:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 607:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 608:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 609:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Transmit a single data through UART peripheral
 610:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 611:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 612:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	Data	Data to transmit (must be 8-bit long)
 613:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
 614:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 615:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_SendData(LPC_UART_TypeDef* UARTx, uint8_t Data)
 616:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 267              	ster save eliminated.
 268              	.LVL25:
 269              		@ lr needed for prologue
 270              		.loc 1 625 0
 271              		strb	r1, [r0, #0]
 272              		.loc 1 628 0
 617:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 618:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 619:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 620:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 621:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/THR = Data & UART_THR_MASKBIT;
 622:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 623:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 624:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 625:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->/*RBTHDLR.*/THR = Data & UART_THR_MASKBIT;
 273              	
 274 0000 0170     	.LFE37:
 626:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 627:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 628:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 276 0002 7047     		.section	.text.UART_ReceiveData,"ax",%progbits
 277              		.align	2
 278              		.global	UART_ReceiveData
 279              		.thumb
 280              		.thumb_func
 282              	UART_ReceiveData:
 283              	.LFB38:
 284              		.loc 1 638 0
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 629:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 630:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 631:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 632:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Receive a single data from UART peripheral
 633:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 634:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 635:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		Data received
 636:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 637:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint8_t UART_ReceiveData(LPC_UART_TypeDef* UARTx)
 638:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 287              	ster save eliminated.
 288              	.LVL26:
 289              		.loc 1 647 0
 290              		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 291              		.loc 1 638 0
 639:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 640:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 641:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 642:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 643:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return (((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/RBR & UART_RBR_MASKBIT);
 644:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 645:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 646:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 647:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return (UARTx->/*RBTHDLR.*/RBR & UART_RBR_MASKBIT);
 292              	 needed for prologue
 293 0000 0378     		.loc 1 647 0
 294              		mov	r0, r3
 295              	.LVL27:
 296              		.loc 1 649 0
 297 0002 1846     		bx	lr
 298              	.LFE38:
 648:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 649:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 299              	UART_ReceiveData, .-UART_ReceiveData
 300 0004 7047     		.section	.text.UART_ForceBreak,"ax",%progbits
 301              		.align	2
 302              		.global	UART_ForceBreak
 303 0006 C046     		.thumb
 304              		.thumb_func
 306              	UART_ForceBreak:
 307              	.LFB39:
 308              		.loc 1 660 0
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 650:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 651:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 652:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 653:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Force BREAK character on UART line, output pin UARTx TXD is
 654:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				forced to logic 0.
 655:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 656:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 657:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
 658:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 659:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_ForceBreak(LPC_UART_TypeDef* UARTx)
 660:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 311              	ster save eliminated.
 312              	.LVL28:
 313              		.loc 1 669 0
 314              		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 315              		.loc 1 660 0
 661:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 662:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 663:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 664:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 665:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_BREAK_EN;
 666:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 667:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 668:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 669:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->LCR |= UART_LCR_BREAK_EN;
 316              	 needed for prologue
 317 0000 037B     		.loc 1 669 0
 318              		orr	r3, r3, #64
 319              		strb	r3, [r0, #12]
 320              		.loc 1 671 0
 321 0002 43F04003 		bx	lr
 322 0006 0373     	.LFE39:
 670:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 671:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 323              	UART_ForceBreak, .-UART_ForceBreak
 324 0008 7047     		.section	.text.UART_IrDAInvtInputCmd,"ax",%progbits
 325              		.align	2
 326              		.global	UART_IrDAInvtInputCmd
 327 000a C046     		.thumb
 328              		.thumb_func
 330              	UART_IrDAInvtInputCmd:
 331              	.LFB40:
 332              		.loc 1 686 0
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 672:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 673:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 674:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART3
 675:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 676:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 677:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Enable or disable inverting serial input function of IrDA
 678:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				on UART peripheral.
 679:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be UART3 (only)
 680:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New state of inverting serial input, should be:
 681:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function.
 682:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- DISABLE: Disable this function.
 683:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
 684:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 685:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_IrDAInvtInputCmd(LPC_UART_TypeDef* UARTx, FunctionalState NewState)
 686:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 335              	ster save eliminated.
 336              	.LVL29:
 337              		.loc 1 690 0
 338              		cmp	r1, #1
 339              		.loc 1 686 0
 687:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
 688:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
 689:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 690:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 340              	 needed for prologue
 341 0000 0129     		.loc 1 690 0
 342              		bne	.L60
 343              		.loc 1 692 0
 344              		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 345 0002 04D1     		orr	r3, r3, #2
 691:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 692:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ICR |= UART_ICR_IRDAINV;
 346              	5
 347 0004 90F82430 	.L60:
 348 0008 43F00203 		.loc 1 694 0
 349 000c 04E0     		cbnz	r1, .L64
 350              		.loc 1 696 0
 693:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 694:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else if (NewState == DISABLE)
 351              		r3, [r0, #36]	@ zero_extendqisi2
 352 000e 29B9     		and	r3, r3, #61
 695:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 696:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ICR &= (~UART_ICR_IRDAINV) & UART_ICR_BITMASK;
 353              	65:
 354 0010 90F82430 		strb	r3, [r0, #36]
 355 0014 03F03D03 	.L64:
 356              		.loc 1 698 0
 357 0018 80F82430 		bx	lr
 358              	.LFE40:
 697:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 698:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 359              		UART_IrDAInvtInputCmd, .-UART_IrDAInvtInputCmd
 360 001c 7047     		.section	.text.UART_IrDACmd,"ax",%progbits
 361              		.align	2
 362              		.global	UART_IrDACmd
 363 001e C046     		.thumb
 364              		.thumb_func
 366              	UART_IrDACmd:
 367              	.LFB41:
 368              		.loc 1 710 0
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 699:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 700:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 701:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 702:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Enable or disable IrDA function on UART peripheral.
 703:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be UART3 (only)
 704:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New state of IrDA function, should be:
 705:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function.
 706:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- DISABLE: Disable this function.
 707:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
 708:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 709:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_IrDACmd(LPC_UART_TypeDef* UARTx, FunctionalState NewState)
 710:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 371              	ster save eliminated.
 372              	.LVL30:
 373              		.loc 1 714 0
 374              		cmp	r1, #1
 375              		.loc 1 716 0
 711:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
 712:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
 713:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 714:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 376              	e	eq
 377 0000 0129     		ldrbeq	r3, [r0, #36]	@ zero_extendqisi2
 715:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 716:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ICR |= UART_ICR_IRDAEN;
 378              	loc 1 720 0
 379 0002 0BBF     		ldrbne	r3, [r0, #36]	@ zero_extendqisi2
 380 0004 90F82430 		.loc 1 716 0
 717:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 718:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 719:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 720:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ICR &= (~UART_ICR_IRDAEN) & UART_ICR_BITMASK;
 381              	req	r3, r3, #1
 382 0008 90F82430 		.loc 1 720 0
 383              		andne	r3, r3, #62
 384 000c 43F00103 		.loc 1 710 0
 385              		@ lr needed for prologue
 386 0010 03F03E03 		.loc 1 720 0
 387              		strb	r3, [r0, #36]
 388              		.loc 1 722 0
 389              		bx	lr
 390 0014 80F82430 	.LFE41:
 721:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 722:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 391              	T_IrDACmd, .-UART_IrDACmd
 392 0018 7047     		.section	.text.UART_IrDAPulseDivConfig,"ax",%progbits
 393              		.align	2
 394              		.global	UART_IrDAPulseDivConfig
 395 001a C046     		.thumb
 396              		.thumb_func
 398              	UART_IrDAPulseDivConfig:
 399              	.LFB42:
 400              		.loc 1 742 0
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 723:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 724:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 725:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 726:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Configure Pulse divider for IrDA function on UART peripheral.
 727:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be UART3 (only)
 728:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	PulseDiv Pulse Divider value from Peripheral clock,
 729:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				should be one of the following:
 730:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV2 	: Pulse width = 2 * Tpclk
 731:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV4 	: Pulse width = 4 * Tpclk
 732:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV8 	: Pulse width = 8 * Tpclk
 733:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV16 	: Pulse width = 16 * Tpclk
 734:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV32 	: Pulse width = 32 * Tpclk
 735:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV64 	: Pulse width = 64 * Tpclk
 736:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV128 : Pulse width = 128 * Tpclk
 737:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV256 : Pulse width = 256 * Tpclk
 738:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 739:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
 740:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 741:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_IrDAPulseDivConfig(LPC_UART_TypeDef *UARTx, UART_IrDA_PULSE_Type PulseDiv)
 742:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 403              	ster save eliminated.
 404              	.LVL31:
 405              		.loc 1 748 0
 406              		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 407              		.loc 1 750 0
 743:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t tmp, tmp1;
 744:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
 745:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA_PULSEDIV(PulseDiv));
 746:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 747:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp1 = UART_ICR_PULSEDIV(PulseDiv);
 748:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp = UARTx->ICR & (~UART_ICR_PULSEDIV(7));
 408              	r1, r1, #7
 409 0000 90F82430 	.LVL32:
 749:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp |= tmp1 | UART_ICR_FIXPULSE_EN;
 750:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UARTx->ICR = tmp & UART_ICR_BITMASK;
 410              	loc 1 749 0
 411 0004 01F00701 		and	r3, r3, #199
 412              		orr	r3, r3, #4
 413              		.loc 1 750 0
 414 0008 03F0C703 		orr	r3, r3, r1, lsl #3
 415 000c 43F00403 		and	r3, r3, #63
 416              		.loc 1 742 0
 417 0010 43EAC103 		@ lr needed for prologue
 418 0014 03F03F03 		.loc 1 750 0
 419              		strb	r3, [r0, #36]
 420              		.loc 1 751 0
 421              		bx	lr
 422 0018 80F82430 	.LFE42:
 751:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 423              	rDAPulseDivConfig, .-UART_IrDAPulseDivConfig
 424 001c 7047     		.section	.text.UART_IntConfig,"ax",%progbits
 425              		.align	2
 426              		.global	UART_IntConfig
 427 001e C046     		.thumb
 428              		.thumb_func
 430              	UART_IntConfig:
 431              	.LFB43:
 432              		.loc 1 776 0
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 752:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 753:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif
 754:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 755:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 756:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /********************************************************************//**
 757:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Enable or disable specified UART interrupt.
 758:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 759:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 760:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTIntCfg	Specifies the interrupt flag,
 761:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				should be one of the following:
 762:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_INTCFG_RBR 	:  RBR Interrupt enable
 763:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_INTCFG_THRE 	:  THR Interrupt enable
 764:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_INTCFG_RLS 	:  RX line status interrupt enable
 765:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART1_INTCFG_MS	:  Modem status interrupt enable (UART1 only)
 766:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART1_INTCFG_CTS	:  CTS1 signal transition interrupt enable (UART1 only)
 767:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_INTCFG_ABEO 	:  Enables the end of auto-baud interrupt
 768:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- UART_INTCFG_ABTO 	:  Enables the auto-baud time-out interrupt
 769:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New state of specified UART interrupt type,
 770:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				should be:
 771:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENALBE: Enable this UART interrupt type.
 772:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- DISALBE: Disable this UART interrupt type.
 773:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		None
 774:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *********************************************************************/
 775:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_IntConfig(LPC_UART_TypeDef *UARTx, UART_INT_Type UARTIntCfg, FunctionalState NewState)
 776:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 435              	ster save eliminated.
 436              	.LVL33:
 437              		.loc 1 782 0
 438              		subs	r1, r1, #1
 439              	.LVL34:
 777:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t tmp;
 778:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 779:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 780:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
 781:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 782:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch(UARTIntCfg){
 440              	 1 776 0
 441 0000 0139     		@ lr needed for prologue
 442              		.loc 1 782 0
 443              		cmp	r1, #5
 444              		bhi	.L75
 445              		tbb	[pc, r1]
 446 0002 0529     	.L82:
 447 0004 07D8     		.byte	(.L76-.L82)/2
 448 0006 DFE801F0 		.byte	(.L77-.L82)/2
 449              		.byte	(.L78-.L82)/2
 450 000a 08       		.byte	(.L79-.L82)/2
 451 000b 0A       		.byte	(.L80-.L82)/2
 452 000c 0C       		.byte	(.L81-.L82)/2
 453 000d 0E       		.align	1
 454 000e 10       	.L81:
 455 000f 03       		mov	r1, #512
 456              	.LVL35:
 457              		b	.L83
 458 0010 4FF40071 	.LVL36:
 459              	.L75:
 460 0014 0BE0     		movs	r1, #1
 461              	.LVL37:
 462              		b	.L83
 463 0016 0121     	.LVL38:
 464              	.L76:
 465 0018 09E0     		movs	r1, #2
 466              	.LVL39:
 467              		.loc 1 788 0
 468 001a 0221     		b	.L83
 469              	.LVL40:
 783:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_INTCFG_RBR:
 784:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_RBRINT_EN;
 785:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 786:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_INTCFG_THRE:
 787:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_THREINT_EN;
 788:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 470              	oc 1 791 0
 471 001c 07E0     		b	.L83
 472              	.LVL42:
 473              	.L78:
 474 001e 0421     		movs	r1, #8
 475              	.LVL43:
 789:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_INTCFG_RLS:
 790:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_RLSINT_EN;
 791:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 476              	1 794 0
 477 0020 05E0     		b	.L83
 478              	.LVL44:
 479              	.L79:
 480 0022 0821     		movs	r1, #128
 481              	.LVL45:
 792:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART1_INTCFG_MS:
 793:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART1_IER_MSINT_EN;
 794:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 482              	1 797 0
 483 0024 03E0     		b	.L83
 484              	.LVL46:
 485              	.L80:
 486 0026 8021     		mov	r1, #256
 487              	.LVL47:
 795:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART1_INTCFG_CTS:
 796:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART1_IER_CTSINT_EN;
 797:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 488              		.loc 1 819 0
 489 0028 01E0     		cmp	r2, #1
 490              		bne	.L84
 491              		.loc 1 827 0
 492 002a 4FF48071 		ldr	r3, [r0, #4]
 493              		orr	r3, r1, r3
 494              		b	.L92
 798:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_INTCFG_ABEO:
 799:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_ABEOINT_EN;
 800:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 801:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		case UART_INTCFG_ABTO:
 802:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_ABTOINT_EN;
 803:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 804:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// mthomas, avoid warning:
 805:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		default:
 806:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp = UART_IER_RBRINT_EN;
 807:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			break;
 808:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 809:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 810:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
 811:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 812:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CHECK_PARAM((PARAM_UART_INTCFG(UARTIntCfg)) || (PARAM_UART1_INTCFG(UARTIntCfg)));
 813:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 814:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 815:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 816:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		CHECK_PARAM(PARAM_UART_INTCFG(UARTIntCfg));
 817:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 818:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 819:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 495              	.loc 1 832 0
 496 002e 012A     		ldr	r3, .L94
 497 0030 03D1     		mvn	r1, r1
 820:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 821:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
 822:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 823:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER |= tmp;
 824:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 825:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
 826:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 827:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->/*DLIER.*/IER |= tmp;
 498              	L48:
 499 0032 4368     		cmp	r0, r3
 500 0034 41EA0303 		.loc 1 834 0
 501 0038 0DE0     		itete	eq
 502              		ldreq	r2, [r0, #4]
 828:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 829:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 830:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 831:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 832:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
 503              	9:
 504 003a 084B     		.loc 1 838 0
 505 003c 6FEA0101 		ldrne	r2, [r0, #4]
 506              		.loc 1 834 0
 507 0040 9842     		movweq	r3, #911
 833:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 834:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER &= (~tmp) & UART1_IER_BITMASK;
 508              	 1 838 0
 509 0042 0BBF     		movwne	r3, #775
 510 0044 4268     		and	r3, r2, r3
 511              		ands	r3, r3, r1
 835:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 836:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
 837:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
 838:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->/*DLIER.*/IER &= (~tmp) & UART_IER_BITMASK;
 512              	50:
 513 0046 4268     	.L92:
 514              		str	r3, [r0, #4]
 515 0048 40F28F33 		.loc 1 841 0
 516              		bx	lr
 517 004c 40F20733 	.L95:
 518 0050 02EA0303 		.align	2
 519 0054 0B40     	.L94:
 520              		.word	1073807360
 521              	.LFE43:
 839:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 840:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 841:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 523              	text.UART_GetLineStatus,"ax",%progbits
 524 0058 7047     		.align	2
 525              		.global	UART_GetLineStatus
 526 005a C046     		.thumb
 527              		.thumb_func
 529              	UART_GetLineStatus:
 530              	.LFB44:
 531              		.loc 1 858 0
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535              	.LVL51:
 536              		.loc 1 867 0
 537              		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 538              		.loc 1 858 0
 842:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 843:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 844:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /********************************************************************//**
 845:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Get current value of Line Status register in UART peripheral.
 846:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 847:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 848:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		Current value of Line Status register in UART peripheral.
 849:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note:	The return value of this function must be ANDed with each member in
 850:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			UART_LS_Type enumeration to determine current flag status
 851:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			corresponding to each Line status type. Because some flags in
 852:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			Line Status register will be cleared after reading, the next reading
 853:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			Line Status register could not be correct. So this function used to
 854:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			read Line status register in one time only, then the return value
 855:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			used to check all flags.
 856:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *********************************************************************/
 857:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint8_t UART_GetLineStatus(LPC_UART_TypeDef* UARTx)
 858:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 539              	 prologue
 540              		.loc 1 867 0
 541              		mov	r0, r3
 542              	.LVL52:
 543              		.loc 1 869 0
 859:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 860:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 861:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 862:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 863:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return ((((LPC_UART1_TypeDef *)LPC_UART1)->LSR) & UART_LSR_BITMASK);
 864:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 865:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 866:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 867:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return ((UARTx->LSR) & UART_LSR_BITMASK);
 544              	r
 545 0000 037D     	.LFE44:
 547              		.section	.text.UART_CheckBusy,"ax",%progbits
 548              		.align	2
 549 0002 1846     		.global	UART_CheckBusy
 550              		.thumb
 868:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 869:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 551              	_func
 553              	UART_CheckBusy:
 554              	.LFB45:
 555 0006 C046     		.loc 1 878 0
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              		@ link register save eliminated.
 559              	.LVL53:
 560              		.loc 1 879 0
 561              		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 562              	.LVL54:
 870:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 871:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 872:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Check whether if UART is busy or not
 873:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 874:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 875:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		RESET if UART is not busy, otherwise return SET.
 876:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 877:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** FlagStatus UART_CheckBusy(LPC_UART_TypeDef *UARTx)
 878:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 563              	0
 564              		@ lr needed for prologue
 565              		.loc 1 879 0
 566              		ubfx	r0, r0, #6, #1
 567              		.loc 1 884 0
 879:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (UARTx->LSR & UART_LSR_TEMT){
 568              	r0, r0, #1
 569 0000 007D     		bx	lr
 570              	.LFE45:
 572              		.section	.text.UART_FIFOConfig,"ax",%progbits
 573              		.align	2
 574 0002 C0F38010 		.global	UART_FIFOConfig
 880:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return RESET;
 881:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} else {
 882:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		return SET;
 883:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 884:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 575              	
 576 0006 80F00100 		.thumb_func
 578              	UART_FIFOConfig:
 579              	.LFB46:
 580              		.loc 1 896 0
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584              	.LVL55:
 585              		.loc 1 906 0
 586              		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 587              		.loc 1 896 0
 885:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 886:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 887:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 888:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Configure FIFO function on selected UART peripheral
 889:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 890:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 891:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	FIFOCfg	Pointer to a UART_FIFO_CFG_Type Structure that
 892:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						contains specified information about FIFO configuration
 893:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		none
 894:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 895:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_FIFOConfig(LPC_UART_TypeDef *UARTx, UART_FIFO_CFG_Type *FIFOCfg)
 896:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 588              	 for prologue
 589              		.loc 1 906 0
 590              		cmp	r3, #1
 591              		beq	.L106
 592              		bcc	.L105
 897:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t tmp = 0;
 898:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 899:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 900:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_FIFO_LEVEL(FIFOCfg->FIFO_Level));
 901:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_DMAMode));
 902:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_ResetRxBuf));
 903:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_ResetTxBuf));
 904:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 905:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp |= UART_FCR_FIFO_EN;
 906:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch (FIFOCfg->FIFO_Level){
 593              	r3, #2
 594 0000 CB78     		ite	ne
 595              		movne	r2, #193
 596              		moveq	r2, #129
 597              	.LVL56:
 598 0002 012B     		b	.L108
 599 0004 07D0     	.LVL57:
 600 0006 04D3     	.L105:
 601 0008 022B     		movs	r2, #1
 602 000a 14BF     	.LVL58:
 603 000c C122     		.loc 1 909 0
 604 000e 8122     		b	.L108
 605              	.LVL59:
 606 0010 02E0     	.L106:
 607              		movs	r2, #65
 608              	.LVL60:
 609 0012 0122     	.L108:
 610              		.loc 1 922 0
 907:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV0:
 908:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV0;
 909:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 611              		@ zero_extendqisi2
 612 0014 00E0     		cmp	r3, #1
 613              		.loc 1 926 0
 614              		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 615 0016 4122     		.loc 1 924 0
 616              		it	eq
 617              		orreq	r2, r2, #4
 910:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV1:
 911:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV1;
 912:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 913:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV2:
 914:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV2;
 915:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 916:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV3:
 917:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
 918:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV3;
 919:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 920:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 921:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 922:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_ResetTxBuf == ENABLE)
 618              	 926 0
 619 0018 4B78     		cmp	r3, #1
 620 001a 012B     		.loc 1 930 0
 923:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 924:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_TX_RS;
 925:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 926:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_ResetRxBuf == ENABLE)
 621              	rb	r3, [r1, #2]	@ zero_extendqisi2
 622 001c 0B78     		.loc 1 928 0
 623              		it	eq
 624 001e 08BF     		orreq	r2, r2, #2
 625 0020 42F00402 		.loc 1 930 0
 626              		cmp	r3, #1
 627 0024 012B     		.loc 1 932 0
 927:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 928:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_RX_RS;
 929:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 930:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_DMAMode == ENABLE)
 628              		orreq	r2, r2, #8
 629 0026 8B78     		and	r3, r2, #207
 630              		.loc 1 943 0
 631 0028 08BF     		strb	r3, [r0, #8]
 632 002a 42F00202 		.loc 1 946 0
 633              		bx	lr
 634 002e 012B     	.LFE46:
 931:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 932:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART_FCR_DMAMODE_SEL;
 635              	UART_FIFOConfig, .-UART_FIFOConfig
 636 0030 08BF     		.section	.text.UART_FIFOConfigStructInit,"ax",%progbits
 637 0032 42F00802 		.align	2
 638 0036 02F0CF03 		.global	UART_FIFOConfigStructInit
 933:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 934:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 935:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 936:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	//write to FIFO control register
 937:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 938:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 939:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = tmp & UART_FCR_BITMASK;
 940:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 941:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
 942:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
 943:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = tmp & UART_FCR_BITMASK;
 639              	umb
 640 003a 0372     		.thumb_func
 944:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
 945:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 946:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 641              	type	UART_FIFOConfigStructInit, %function
 642 003c 7047     	UART_FIFOConfigStructInit:
 643              	.LFB47:
 644              		.loc 1 962 0
 645 003e C046     		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648              	.LVL61:
 649              		.loc 1 963 0
 650              		movs	r3, #0
 651              		strb	r3, [r0, #2]
 652              		.loc 1 964 0
 947:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 948:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 949:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*****************************************************************************//**
 950:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @brief		Fills each UART_FIFOInitStruct member with its default value:
 951:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- FIFO_DMAMode = DISABLE
 952:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- FIFO_Level = UART_FIFO_TRGLEV0
 953:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- FIFO_ResetRxBuf = ENABLE
 954:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- FIFO_ResetTxBuf = ENABLE
 955:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * 				- FIFO_State = ENABLE
 956:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 957:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @param[in]	UART_FIFOInitStruct Pointer to a UART_FIFO_CFG_Type structure
 958:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    which will be initialized.
 959:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** * @return		None
 960:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *******************************************************************************/
 961:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_FIFOConfigStructInit(UART_FIFO_CFG_Type *UART_FIFOInitStruct)
 962:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 653              	0, #3]
 654              		.loc 1 965 0
 655              		adds	r3, r3, #1
 656              		.loc 1 962 0
 657              		@ lr needed for prologue
 963:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_DMAMode = DISABLE;
 658              	 1 965 0
 659 0000 0023     		strb	r3, [r0, #0]
 660 0002 8370     		.loc 1 966 0
 964:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_Level = UART_FIFO_TRGLEV0;
 661              	rb	r3, [r0, #1]
 662 0004 C370     		.loc 1 967 0
 965:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_ResetRxBuf = ENABLE;
 663              	x	lr
 664 0006 0133     	.LFE47:
 666              		.section	.text.UART_ABCmd,"ax",%progbits
 667              		.align	2
 668 0008 0370     		.global	UART_ABCmd
 966:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_ResetTxBuf = ENABLE;
 669              	b
 670 000a 4370     		.thumb_func
 967:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 671              	type	UART_ABCmd, %function
 672 000c 7047     	UART_ABCmd:
 673              	.LFB48:
 674              		.loc 1 986 0
 675 000e C046     		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              	.LVL62:
 678              		.loc 1 993 0
 679              		cmp	r2, #1
 680              		.loc 1 986 0
 681              		push	{lr}
 682              	.LCFI1:
 968:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 969:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 970:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
 971:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Start/Stop Auto Baudrate activity
 972:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
 973:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
 974:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	ABConfigStruct	A pointer to UART_AB_CFG_Type structure that
 975:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 								contains specified information about UART
 976:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 								auto baudrate configuration
 977:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New State of Auto baudrate activity, should be:
 978:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENABLE: Start this activity
 979:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *				- DISABLE: Stop this activity
 980:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note:		Auto-baudrate mode enable bit will be cleared once this mode
 981:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				completed.
 982:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		none
 983:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
 984:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_ABCmd(LPC_UART_TypeDef *UARTx, UART_AB_CFG_Type *ABConfigStruct, \
 985:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				FunctionalState NewState)
 986:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 683              	0
 684              		beq	.L122
 685              		mov	lr, #0
 686              	.LVL63:
 987:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t tmp;
 988:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 989:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 990:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
 991:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
 992:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp = 0;
 993:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE) {
 687              	L124
 688 0000 012A     	.LVL64:
 689              	.L122:
 690 0002 00B5     		.loc 1 994 0
 691              		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 692              		cmp	r3, #1
 693 0004 02D0     		ite	eq
 694 0006 4FF0000E 		moveq	lr, #2
 695              		movne	lr, #0
 696 000a 0BE0     	.LVL65:
 697              		.loc 1 997 0
 698              		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 994:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (ABConfigStruct->ABMode == UART_AUTOBAUD_MODE1){
 699              		.loc 1 998 0
 700 000c 0B78     		it	eq
 701 000e 012B     		orreq	lr, lr, #4
 702 0010 0CBF     	.L124:
 703 0012 4FF0020E 		.loc 1 1002 0
 704 0016 4FF0000E 		ldr	r3, .L139
 705              		cmp	r0, r3
 995:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_ACR_MODE;
 996:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
 997:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (ABConfigStruct->AutoRestart == ENABLE){
 706              	129
 707 001a 4B78     		.loc 1 1004 0
 708 001c 012B     		cmp	r2, #1
 998:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART_ACR_AUTO_RESTART;
 709              	e	.L134
 710 001e 08BF     		.loc 1 1007 0
 711 0020 4EF0040E 		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 712              		orr	r3, r3, #128
 999:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1000:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1001:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1002:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 713              	b	r3, [r0, #12]
 714 0024 144B     		.loc 1 1008 0
 715 0026 9842     		movs	r3, #0
 716 0028 0FD1     		strb	r3, [r0, #0]
1003:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1004:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (NewState == ENABLE)
 717              	c 1 1009 0
 718 002a 012A     		strb	r3, [r0, #4]
 719 002c 20D1     		.loc 1 1010 0
1005:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1006:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Clear DLL and DLM value
1007:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 720              	rb	r3, [r0, #12]	@ zero_extendqisi2
 721 002e 037B     		and	r3, r3, #127
 722 0030 43F08003 		strb	r3, [r0, #12]
 723 0034 0373     		.loc 1 1012 0
1008:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->DLL = 0;
 724              	s	r3, #16
 725 0036 0023     		str	r3, [r0, #40]
 726 0038 0370     		b	.L138
1009:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->DLM = 0;
 727              	29:
 728 003a 0371     		.loc 1 1022 0
1010:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR &= ~UART_LCR_DLAB_EN;
 729              	mp	r2, #1
 730 003c 037B     		bne	.L134
 731 003e 03F07F03 		.loc 1 1025 0
 732 0042 0373     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
1011:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// FDR value must be reset to default value
1012:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->FDR = 0x10;
 733              		r3, r3, #128
 734 0044 1023     		strb	r3, [r0, #12]
 735 0046 8362     		.loc 1 1026 0
 736 0048 0FE0     		movs	r3, #0
 737              		strb	r3, [r0, #0]
1013:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->ACR = UART_ACR_START | tmp;
1014:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1015:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
1016:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1017:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->ACR = 0;
1018:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1019:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1020:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
1021:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1022:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (NewState == ENABLE)
 738              	 1 1027 0
 739 004a 012A     		strb	r3, [r0, #4]
 740 004c 10D1     		.loc 1 1028 0
1023:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1024:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Clear DLL and DLM value
1025:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->LCR |= UART_LCR_DLAB_EN;
 741              	rb	r3, [r0, #12]	@ zero_extendqisi2
 742 004e 037B     		and	r3, r3, #127
 743 0050 43F08003 		strb	r3, [r0, #12]
 744 0054 0373     		.loc 1 1030 0
1026:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->DLL = 0;
 745              	s	r3, #16
 746 0056 0023     		strb	r3, [r0, #40]
 747 0058 0370     	.L138:
1027:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->DLM = 0;
 748              	oc 1 1031 0
 749 005a 0371     		orr	r3, lr, #1
1028:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->LCR &= ~UART_LCR_DLAB_EN;
 750              		.L137
 751 005c 037B     	.L134:
 752 005e 03F07F03 		.loc 1 1035 0
 753 0062 0373     		movs	r3, #0
1029:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// FDR value must be reset to default value
1030:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->FDR = 0x10;
 754              	7:
 755 0064 1023     		str	r3, [r0, #32]
 756 0066 80F82830 		.loc 1 1038 0
 757              		pop	{pc}
1031:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->ACR = UART_ACR_START | tmp;
 758              	0:
 759 006a 4EF00103 		.align	2
 760 006e 00E0     	.L139:
 761              		.word	1073807360
1032:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1033:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
1034:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1035:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->ACR = 0;
 762              	48:
 764              		.section	.text.UART_TxCmd,"ax",%progbits
 765 0072 0362     		.align	2
1036:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1037:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1038:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 766              	obal	UART_TxCmd
 767 0074 00BD     		.thumb
 768              		.thumb_func
 770              	UART_TxCmd:
 771 0078 00000140 	.LFB49:
 772              		.loc 1 1051 0
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 776              	.LVL66:
 777              		.loc 1 1055 0
 778              		cmp	r1, #1
 779              		.loc 1 1063 0
 780              		itete	eq
 781              		ldrbeq	r3, [r0, #48]	@ zero_extendqisi2
1039:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1040:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1041:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1042:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Enable/Disable transmission on UART TxD pin
1043:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be UART0, UART1,
1044:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						UART2 or UART3.
1045:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New State of Tx transmission function, should be:
1046:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function
1047:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- DISABLE: Disable this function
1048:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
1049:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1050:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_TxCmd(LPC_UART_TypeDef *UARTx, FunctionalState NewState)
1051:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 782              	ldrbne	r3, [r0, #48]	@ zero_extendqisi2
 783              		.loc 1 1063 0
 784              		orreq	r3, r3, #128
 785              		.loc 1 1074 0
 786              		movne	r3, #0
1052:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1053:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1054:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1055:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 787              	 1 1051 0
 788 0000 0129     		@ lr needed for prologue
1056:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1057:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1058:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1059:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->TER |= UART_TER_TXEN;
1060:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1061:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
1062:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1063:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->TER |= UART_TER_TXEN;
 789              	loc 1 1074 0
 790 0002 0BBF     		strb	r3, [r0, #48]
 791 0004 90F83030 		.loc 1 1077 0
1064:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1065:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1066:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
1067:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1068:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1069:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1070:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->TER &= (~UART_TER_TXEN) & UART_TER_BITMASK;
1071:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1072:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		else
1073:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1074:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			UARTx->TER &= (~UART_TER_TXEN) & UART_TER_BITMASK;
 792              		lr
 793 0008 90F83030 	.LFE49:
 795 000c 43F08003 		.section	.text.UART_FullModemForcePinState,"ax",%progbits
 796              		.align	2
 797 0010 0023     		.global	UART_FullModemForcePinState
 798              		.thumb
 799              		.thumb_func
 801 0012 80F83030 	UART_FullModemForcePinState:
1075:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1076:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1077:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 802              	loc 1 1094 0
 803 0016 7047     		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806              	.LVL67:
 807              		@ lr needed for prologue
 808              		.loc 1 1101 0
 809              		cbz	r1, .L153
 810              		cmp	r1, #1
 811              		ite	eq
 812              		moveq	r1, #2
 813              		movne	r1, #0
1078:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1079:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #ifdef _UART1
1080:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1081:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1082:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Force pin DTR/RTS corresponding to given state (Full modem mode)
1083:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART1 (only)
1084:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	Pin	Pin that NewState will be applied to, should be:
1085:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- UART1_MODEM_PIN_DTR: DTR pin.
1086:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- UART1_MODEM_PIN_RTS: RTS pin.
1087:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New State of DTR/RTS pin, should be:
1088:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- INACTIVE: Force the pin to inactive signal.
1089:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- ACTIVE: Force the pin to active signal.
1090:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
1091:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1092:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_FullModemForcePinState(LPC_UART1_TypeDef *UARTx, UART_MODEM_PIN_Type Pin, \
1093:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 							UART1_SignalState NewState)
1094:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 814              	L155
 815              	.LVL69:
 816              	.L153:
 817              		movs	r1, #1
 818              	.LVL70:
 819              	.L155:
1095:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t tmp = 0;
1096:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1097:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1098:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM_PIN(Pin));
1099:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_SIGNALSTATE(NewState));
1100:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1101:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch (Pin){
 820              	1 1112 0
 821 0000 21B1     		cmp	r2, #1
 822 0002 0129     		bne	.L156
 823 0004 0CBF     		.loc 1 1113 0
 824 0006 0221     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 825 0008 0021     		orr	r3, r1, r3
 826              		b	.L160
 827 000a 00E0     	.L156:
 828              		.loc 1 1115 0
 829              		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 830 000c 0121     		and	r3, r3, #243
 831              		bic	r3, r3, r1
 832              	.L160:
1102:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART1_MODEM_PIN_DTR:
1103:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_DTR_CTRL;
1104:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
1105:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART1_MODEM_PIN_RTS:
1106:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_RTS_CTRL;
1107:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
1108:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
1109:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
1110:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1111:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1112:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ACTIVE){
 833              	, #16]
 834 000e 012A     		.loc 1 1117 0
 835 0010 03D1     		bx	lr
1113:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->MCR |= tmp;
 836              	E50:
 838 0014 41EA0303 		.section	.text.UART_FullModemConfigMode,"ax",%progbits
 839 0018 04E0     		.align	2
 840              		.global	UART_FullModemConfigMode
1114:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} else {
1115:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->MCR &= (~tmp) & UART1_MCR_BITMASK;
 841              	mb
 842 001a 037C     		.thumb_func
 844 0020 23EA0103 	UART_FullModemConfigMode:
 845              	.LFB51:
 846 0024 0374     		.loc 1 1134 0
1116:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1117:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 847              	s = 0, pretend = 0, frame = 0
 848 0026 7047     		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850              	.LVL71:
 851              		.loc 1 1141 0
 852              		cmp	r1, #1
 853              		.loc 1 1134 0
 854              		@ lr needed for prologue
 855              		.loc 1 1141 0
 856              		beq	.L163
 857              		cmp	r1, #2
 858              		ite	ne
1118:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1119:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1120:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1121:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Configure Full Modem mode for UART peripheral
1122:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART1 (only)
1123:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	Mode Full Modem mode, should be:
1124:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_LOOPBACK: Loop back mode.
1125:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_AUTO_RTS: Auto-RTS mode.
1126:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_AUTO_CTS: Auto-CTS mode.
1127:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState New State of this mode, should be:
1128:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				- ENABLE: Enable this mode.
1129:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				- DISABLE: Disable this mode.
1130:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return none
1131:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1132:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_FullModemConfigMode(LPC_UART1_TypeDef *UARTx, UART_MODEM_MODE_Type Mode, \
1133:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 							FunctionalState NewState)
1134:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 859              	16
 860              		moveq	r1, #128
 861              	.LVL72:
 862              		b	.L165
 863              	.LVL73:
1135:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t tmp;
1136:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1137:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1138:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM_MODE(Mode));
1139:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1140:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1141:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch(Mode){
 864              	:
 865 0000 0129     		movs	r1, #64
 866              	.LVL74:
 867              	.L165:
 868              		.loc 1 1157 0
 869 0002 04D0     		cmp	r2, #1
 870 0004 0229     		bne	.L166
 871 0006 14BF     		.loc 1 1159 0
 872 0008 1021     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 873 000a 8021     		orr	r3, r1, r3
 874              		b	.L170
 875 000c 00E0     	.L166:
 876              		.loc 1 1163 0
 877              		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 878 000e 4021     		and	r3, r3, #243
 879              		bic	r3, r3, r1
 880              	.L170:
1142:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_LOOPBACK:
1143:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_LOOPB_EN;
1144:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
1145:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_AUTO_RTS:
1146:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_AUTO_RTS_EN;
1147:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
1148:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_AUTO_CTS:
1149:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_AUTO_CTS_EN;
1150:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
1151:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
1152:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// mthomas, avoid warning:
1153:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp = UART1_MCR_LOOPB_EN;
1154:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
1155:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1156:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1157:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 881              	6]
 882 0010 012A     		.loc 1 1165 0
 883 0012 03D1     		bx	lr
1158:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1159:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->MCR |= tmp;
 884              	E51:
 886 0016 41EA0303 		.section	.text.UART_FullModemGetStatus,"ax",%progbits
 887 001a 04E0     		.align	2
 888              		.global	UART_FullModemGetStatus
1160:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1161:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else
1162:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1163:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->MCR &= (~tmp) & UART1_MCR_BITMASK;
 889              	mb
 890 001c 037C     		.thumb_func
 892 0022 23EA0103 	UART_FullModemGetStatus:
 893              	.LFB52:
 894 0026 0374     		.loc 1 1181 0
1164:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1165:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 895              	s = 0, pretend = 0, frame = 0
 896 0028 7047     		@ frame_needed = 0, uses_anonymous_args = 0
 897              		@ link register save eliminated.
 898              	.LVL75:
 899 002a C046     		@ lr needed for prologue
 900              		.loc 1 1183 0
 901              		ldrb	r0, [r0, #24]	@ zero_extendqisi2
 902              	.LVL76:
 903              		.loc 1 1184 0
 904              		bx	lr
 905              	.LFE52:
1166:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1167:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1168:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1169:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Get current status of modem status register
1170:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART1 (only)
1171:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		Current value of modem status register
1172:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note:	The return value of this function must be ANDed with each member
1173:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			UART_MODEM_STAT_type enumeration to determine current flag status
1174:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			corresponding to each modem flag status. Because some flags in
1175:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			modem status register will be cleared after reading, the next reading
1176:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			modem register could not be correct. So this function used to
1177:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			read modem status register in one time only, then the return value
1178:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 			used to check all flags.
1179:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1180:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint8_t UART_FullModemGetStatus(LPC_UART1_TypeDef *UARTx)
1181:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 907              	ext.UART_RS485Config,"ax",%progbits
 908              		.align	2
 909              		.global	UART_RS485Config
 910              		.thumb
 911              		.thumb_func
1182:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1183:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return ((UARTx->MSR) & UART1_MSR_BITMASK);
 913              	S485Config:
 914 0000 007E     	.LFB53:
 915              		.loc 1 1197 0
1184:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 916              	args = 0, pretend = 0, frame = 0
 917 0002 7047     		@ frame_needed = 0, uses_anonymous_args = 0
 918              		@ link register save eliminated.
 919              	.LVL77:
 920              		.loc 1 1212 0
 921              		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 922              		.loc 1 1197 0
 923              		@ lr needed for prologue
 924              		.loc 1 1212 0
 925              		cmp	r3, #1
 926              		beq	.L174
 927              		movs	r2, #0
1185:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1186:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1187:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1188:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Configure UART peripheral in RS485 mode according to the specified
1189:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *               parameters in the RS485ConfigStruct.
1190:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	UART1 (only)
1191:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	RS485ConfigStruct Pointer to a UART1_RS485_CTRLCFG_Type structure
1192:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    that contains the configuration information for specified UART
1193:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** *                    in RS485 mode.
1194:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1195:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1196:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_RS485Config(LPC_UART1_TypeDef *UARTx, UART1_RS485_CTRLCFG_Type *RS485ConfigStruct)
1197:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 928              	L176
 929              	.LVL79:
 930              	.L174:
 931              		.loc 1 1217 0
 932              		ldrb	r3, [r1, #5]	@ zero_extendqisi2
1198:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t tmp;
1199:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1200:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1201:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->AutoAddrDetect_State));
1202:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->AutoDirCtrl_State));
1203:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_RS485_CFG_DELAYVALUE(RS485ConfigStruct->DelayValue));
1204:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_SETSTATE(RS485ConfigStruct->DirCtrlPol_Level));
1205:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_RS485_DIRCTRL_PIN(RS485ConfigStruct->DirCtrlPin));
1206:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_RS485_CFG_MATCHADDRVALUE(RS485ConfigStruct->MatchAddrValue));
1207:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->NormalMultiDropMode_State));
1208:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->Rx_State));
1209:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1210:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	tmp = 0;
1211:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// If Auto Direction Control is enabled -  This function is used in Master mode
1212:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (RS485ConfigStruct->AutoDirCtrl_State == ENABLE)
 933              	r3, #1
 934 0000 CB78     		ite	ne
 935              		movne	r2, #16
 936              		moveq	r2, #48
 937              	.LVL80:
 938 0002 012B     		.loc 1 1223 0
 939 0004 01D0     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 940 0006 0022     		cmp	r3, #1
 941              		.loc 1 1229 0
 942 0008 0CE0     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 943              		.loc 1 1225 0
 944              		it	eq
1213:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1214:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_DCTRL_EN;
1215:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1216:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set polar
1217:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (RS485ConfigStruct->DirCtrlPol_Level == SET)
 945              	2, #8
 946 000a 4B79     		.loc 1 1229 0
 947 000c 012B     		strb	r3, [r0, #84]
 948 000e 14BF     	.L176:
 949 0010 1022     		.loc 1 1233 0
 950 0012 3022     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 951              		cmp	r3, #1
1218:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1219:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART1_RS485CTRL_OINV_1;
1220:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1221:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1222:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Set pin according to
1223:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		if (RS485ConfigStruct->DirCtrlPin == UART1_RS485_DIRCTRL_DTR)
 952              	 1239 0
 953 0014 0B79     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 954 0016 012B     		.loc 1 1235 0
1224:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		{
1225:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			tmp |= UART1_RS485CTRL_SEL_DTR;
1226:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1227:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1228:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Fill delay time
1229:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->RS485DLY = RS485ConfigStruct->DelayValue & UART1_RS485DLY_BITMASK;
 955              		eq
 956 0018 CB79     		orreq	r2, r2, #1
 957              		.loc 1 1239 0
 958 001a 08BF     		cmp	r3, #1
 959 001c 42F00802 		bne	.L184
 960              		.loc 1 1243 0
 961 0020 80F85430 		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 962              		.loc 1 1241 0
1230:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1231:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1232:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// MultiDrop mode is enable
1233:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (RS485ConfigStruct->NormalMultiDropMode_State == ENABLE)
 963              	 r2, #4
 964 0024 0B78     		.loc 1 1243 0
 965 0026 012B     		strb	r3, [r0, #80]
1234:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1235:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_NMM_EN;
1236:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1237:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1238:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Auto Address Detect function
1239:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (RS485ConfigStruct->AutoAddrDetect_State == ENABLE)
 966              	84:
 967 0028 8B78     		.loc 1 1248 0
 968              		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 969 002a 08BF     		cbnz	r3, .L186
 970 002c 42F00102 		.loc 1 1250 0
 971              		orr	r2, r2, #2
 972 0030 012B     	.L186:
 973 0032 04D1     		.loc 1 1254 0
1240:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1241:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_AADEN;
1242:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		// Fill Match Address
1243:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->ADRMATCH = RS485ConfigStruct->MatchAddrValue & UART1_RS485ADRMATCH_BITMASK;
 974              	 r2, #63
 975 0034 8B79     		strb	r3, [r0, #76]
 976              		.loc 1 1257 0
 977 0036 42F00402 		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 978              		orr	r3, r3, #56
 979 003a 80F85030 		strb	r3, [r0, #12]
 980              		.loc 1 1258 0
1244:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1245:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1246:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1247:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Receiver is disable
1248:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (RS485ConfigStruct->Rx_State == DISABLE)
 981              	.LFE53:
 983 0040 0BB9     		.section	.text.UART_RS485ReceiverCmd,"ax",%progbits
1249:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	{
1250:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_RX_DIS;
 984              	lign	2
 985 0042 42F00202 		.global	UART_RS485ReceiverCmd
 986              		.thumb
1251:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1252:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1253:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// write back to RS485 control register
1254:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UARTx->RS485CTRL = tmp & UART1_RS485CTRL_BITMASK;
 987              	humb_func
 989 004a 80F84C30 	UART_RS485ReceiverCmd:
1255:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1256:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Enable Parity function and leave parity in stick '0' parity as default
1257:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UARTx->LCR |= (UART_LCR_PARITY_F_0 | UART_LCR_PARITY_EN);
 990              	B54:
 991 004e 037B     		.loc 1 1270 0
 992 0050 43F03803 		@ args = 0, pretend = 0, frame = 0
 993 0054 0373     		@ frame_needed = 0, uses_anonymous_args = 0
1258:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 994              	ink register save eliminated.
 995 0056 7047     	.LVL81:
 996              		.loc 1 1271 0
 997              		cmp	r1, #1
 998              		.loc 1 1272 0
 999              		itete	eq
 1000              		ldrbeq	r3, [r0, #76]	@ zero_extendqisi2
 1001              		.loc 1 1274 0
 1002              		ldrbne	r3, [r0, #76]	@ zero_extendqisi2
 1003              		.loc 1 1272 0
 1004              		andeq	r3, r3, #253
 1005              		.loc 1 1274 0
1259:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1260:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1261:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
1262:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Enable/Disable receiver in RS485 module in UART1
1263:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx 		UART1 only.
1264:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	NewState	New State of command, should be:
1265:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 							- ENABLE: Enable this function.
1266:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 							- DISABLE: Disable this function.
1267:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1268:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
1269:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_RS485ReceiverCmd(LPC_UART1_TypeDef *UARTx, FunctionalState NewState)
1270:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1006              	3, #2
 1007              		.loc 1 1270 0
 1008              		@ lr needed for prologue
 1009              		.loc 1 1274 0
 1010              		strb	r3, [r0, #76]
1271:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (NewState == ENABLE){
 1011              	 1 1276 0
 1012 0000 0129     		bx	lr
1272:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->RS485CTRL &= ~UART1_RS485CTRL_RX_DIS;
 1013              	FE54:
 1015 0004 90F84C30 		.section	.text.UART_Send,"ax",%progbits
1273:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} else {
1274:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->RS485CTRL |= UART1_RS485CTRL_RX_DIS;
 1016              	lign	2
 1017 0008 90F84C30 		.global	UART_Send
 1018              		.thumb
 1019 000c 03F0FD03 		.thumb_func
 1021 0010 43F00203 	UART_Send:
 1022              	.LFB58:
 1023              		.loc 1 1352 0
 1024              		@ args = 0, pretend = 0, frame = 0
 1025 0014 80F84C30 		@ frame_needed = 0, uses_anonymous_args = 0
1275:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1276:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1026              	loc 1 1359 0
 1027 0018 7047     		cmp	r3, #1
 1028              		.loc 1 1352 0
 1029              		push	{r4, r5, r6, r7, r8, lr}
 1030 001a C046     	.LCFI2:
 1031              		.loc 1 1352 0
 1032              		mov	r6, r0
 1033              		.loc 1 1359 0
 1034              		beq	.L196
 1035              	.LVL83:
 1036              		mov	r7, r1
 1037              	.LVL84:
1277:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1278:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1279:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
1280:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Send data on RS485 bus with specified parity stick value (9-bit mode).
1281:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx 		UART1 (only).
1282:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	pDatFrm 	Pointer to data frame.
1283:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	size		Size of data.
1284:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	ParityStick	Parity Stick value, should be 0 or 1.
1285:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None.
1286:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
1287:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint32_t UART_RS485Send(LPC_UART1_TypeDef *UARTx, uint8_t *pDatFrm, \
1288:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 					uint32_t size, uint8_t ParityStick)
1289:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
1290:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t tmp, save;
1291:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t cnt;
1292:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1293:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (ParityStick){
1294:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		save = tmp = UARTx->LCR & UART_LCR_BITMASK;
1295:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		tmp &= ~(UART_LCR_PARITY_EVEN);
1296:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->LCR = tmp;
1297:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
1298:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_TEMT));
1299:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		UARTx->LCR = save;
1300:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	} else {
1301:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
1302:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_TEMT));
1303:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1304:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return cnt;
1305:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
1306:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1307:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1308:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
1309:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Send Slave address frames on RS485 bus.
1310:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx UART1 (only).
1311:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	SlvAddr Slave Address.
1312:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None.
1313:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
1314:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_RS485SendSlvAddr(LPC_UART1_TypeDef *UARTx, uint8_t SlvAddr)
1315:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
1316:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_RS485Send(UARTx, &SlvAddr, 1, 1);
1317:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
1318:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1319:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1320:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /**
1321:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief 		Send Data frames on RS485 bus.
1322:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx UART1 (only).
1323:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	pData Pointer to data to be sent.
1324:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	size Size of data frame to be sent.
1325:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None.
1326:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  */
1327:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint32_t UART_RS485SendData(LPC_UART1_TypeDef *UARTx, uint8_t *pData, uint32_t size)
1328:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
1329:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return (UART_RS485Send(UARTx, pData, size, 0));
1330:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
1331:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1332:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** #endif /* _UART1 */
1333:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1334:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1335:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /* Additional driver APIs ----------------------------------------------------------------------- *
1336:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1337:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1338:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Send a block of data via UART peripheral
1339:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
1340:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				should be UART0, UART1, UART2 or UART3.
1341:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	txbuf 	Pointer to Transmit buffer
1342:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	buflen 	Length of Transmit buffer
1343:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in] 	flag 	Flag used in  UART transfer, should be
1344:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						NONE_BLOCKING or BLOCKING
1345:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		Number of bytes sent.
1346:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *
1347:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note: when using UART in BLOCKING mode, a time-out condition is used
1348:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * via defined symbol UART_BLOCKING_TIMEOUT.
1349:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1350:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint32_t UART_Send(LPC_UART_TypeDef *UARTx, uint8_t *txbuf,
1351:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uint32_t buflen, TRANSFER_BLOCK_Type flag)
1352:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1038              	.LVL85:
 1039              		mov	r8, #0
 1040              	.LVL86:
 1041              		b	.L198
1353:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t bToSend, bSent, timeOut, fifo_cnt;
1354:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t *pChar = txbuf;
1355:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1356:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	bToSend = buflen;
1357:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1358:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// blocking mode
1359:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (flag == BLOCKING) {
 1042              	87:
 1043 0000 012B     	.L196:
 1044              		mov	r7, r1
 1045 0002 2DE9F041 	.LVL88:
 1046              		mov	r4, r2
 1047              	.LVL89:
 1048 0006 0646     		mov	r8, #0
 1049              	.LVL90:
 1050 0008 04D0     		b	.L199
 1051              	.LVL91:
 1052 000a 0F46     	.L200:
 1053              		.loc 1 1365 0
 1054 000c 1446     		cbz	r2, .L201
 1055              		.loc 1 1366 0
 1056 000e 4FF00008 		subs	r2, r2, #1
 1057              	.LVL92:
 1058 0012 31E0     	.L203:
 1059              		.loc 1 1364 0
 1060              		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 1061 0014 0F46     	.LVL93:
 1062              		tst	r3, #32
 1063 0016 1446     		beq	.L200
 1064              		.loc 1 1369 0
 1065 0018 4FF00008 		cbz	r2, .L201
 1066              		movs	r5, #16
 1067 001c 15E0     	.L206:
 1068              		.loc 1 1372 0
 1069              		mov	r0, r6
1360:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		bSent = 0;
1361:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (bToSend){
1362:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
1363:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Wait for THR empty with timeout
1364:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			while (!(UARTx->LSR & UART_LSR_THRE)) {
1365:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 1070              	tendqisi2
 1071 001e 6AB3     	.LVL94:
1366:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				timeOut--;
 1072              	l	UART_SendData
 1073 0020 013A     	.LVL95:
 1074              		.loc 1 1374 0
 1075              		subs	r4, r4, #1
 1076              		.loc 1 1371 0
 1077 0022 337D     		adds	r5, r5, #-1
 1078              		.loc 1 1375 0
 1079 0024 13F0200F 		add	r8, r8, #1
 1080 0028 F9D0     		.loc 1 1371 0
1367:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1368:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Time out!
1369:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if(timeOut == 0) break;
 1081              	9
 1082 002a 3AB3     		cmp	r4, #0
 1083 002c 1025     		bne	.L206
 1084              		b	.L201
1370:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			fifo_cnt = UART_TX_FIFO_SIZE;
1371:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			while (fifo_cnt && bToSend){
1372:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				UART_SendData(UARTx, (*pChar++));
 1085              	96:
 1086 002e 3046     	.L199:
 1087 0030 17F8011B 		.loc 1 1361 0
 1088              		cbz	r4, .L201
 1089 0034 FFF7FEFF 		mov	r2, #-1
 1090              	.LVL97:
1373:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				fifo_cnt--;
1374:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bToSend--;
 1091              	03
 1092 0038 013C     	.LVL98:
 1093              	.L209:
 1094 003a 15F1FF35 		.loc 1 1383 0
1375:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bSent++;
 1095              	b	r3, [r6, #20]	@ zero_extendqisi2
 1096 003e 08F10108 	.LVL99:
 1097              		tst	r3, #32
 1098 0042 02D0     		beq	.L201
 1099 0044 002C     		.loc 1 1384 0
 1100 0046 F2D1     		movs	r5, #16
 1101 0048 18E0     	.L211:
 1102              		.loc 1 1388 0
 1103              		mov	r0, r6
 1104              		ldrb	r1, [r7], #1	@ zero_extendqisi2
 1105 004a BCB1     	.LVL100:
 1106 004c 4FF0FF32 		bl	UART_SendData
 1107              	.LVL101:
 1108 0050 E7E7     		.loc 1 1389 0
 1109              		subs	r4, r4, #1
 1110              		.loc 1 1387 0
1376:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1377:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1378:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1379:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// None blocking mode
1380:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else {
1381:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		bSent = 0;
1382:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (bToSend) {
1383:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if (!(UARTx->LSR & UART_LSR_THRE)){
 1111              	1
 1112 0052 337D     		.loc 1 1391 0
 1113              		add	r8, r8, #1
 1114 0054 13F0200F 		.loc 1 1387 0
 1115 0058 10D0     		beq	.L198
1384:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				break;
 1116              	r4, #0
 1117 005a 1025     		bne	.L211
 1118              		b	.L201
1385:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1386:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			fifo_cnt = UART_TX_FIFO_SIZE;
1387:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			while (fifo_cnt && bToSend) {
1388:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				UART_SendData(UARTx, (*pChar++));
 1119              	L102:
 1120 005c 3046     	.L198:
 1121 005e 17F8011B 		.loc 1 1382 0
 1122              		cmp	r4, #0
 1123 0062 FFF7FEFF 		bne	.L209
 1124              	.LVL103:
1389:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bToSend--;
 1125              	
 1126 0066 013C     		.loc 1 1396 0
 1127              		mov	r0, r8
 1128 0068 15F1FF35 		pop	{r4, r5, r6, r7, r8, pc}
1390:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				fifo_cnt--;
1391:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bSent++;
 1129              	E58:
 1131              		.section	.text.UART_RS485Send,"ax",%progbits
 1132 0070 02D0     		.align	2
 1133 0072 002C     		.global	UART_RS485Send
 1134 0074 F2D1     		.thumb
 1135 0076 01E0     		.thumb_func
 1137              	UART_RS485Send:
 1138              	.LFB55:
 1139 0078 002C     		.loc 1 1289 0
 1140 007a EAD1     		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142              	.LVL104:
1392:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1393:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1394:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1395:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return bSent;
1396:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1143              	 r6, lr}
 1144 007c 4046     	.LCFI3:
 1145 007e BDE8F081 		.loc 1 1289 0
 1146              		mov	r4, r0
 1147              		.loc 1 1293 0
 1148 0082 C046     		cbz	r3, .L215
 1149              	.LVL105:
 1150              		.loc 1 1294 0
 1151              		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 1152              	.LVL106:
 1153              		mov	r5, r3
 1154              	.LVL107:
 1155              		.loc 1 1295 0
 1156              		and	r3, r3, #239
 1157              	.LVL108:
 1158              		.loc 1 1296 0
 1159              		strb	r3, [r0, #12]
 1160 0000 70B5     		.loc 1 1297 0
 1161              		movs	r3, #1
 1162              	.LVL109:
 1163 0002 0446     		bl	UART_Send
 1164              	.LVL110:
 1165 0004 6BB1     	.L217:
 1166              		.loc 1 1298 0
 1167              		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1168 0006 037B     		tst	r3, #64
 1169              		beq	.L217
 1170 0008 1D46     		.loc 1 1299 0
 1171              		strb	r5, [r4, #12]
 1172              	.LVL111:
 1173 000a 03F0EF03 		b	.L219
 1174              	.LVL112:
 1175              	.L215:
 1176 000e 0373     		.loc 1 1301 0
 1177              		movs	r3, #1
 1178 0010 0123     	.LVL113:
 1179              		bl	UART_Send
 1180 0012 FFF7FEFF 	.LVL114:
 1181              	.L220:
 1182              		.loc 1 1302 0
 1183              		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1184 0016 237D     		tst	r3, #64
 1185 0018 13F0400F 		beq	.L220
 1186 001c FBD0     	.LVL115:
 1187              	.L219:
 1188 001e 2573     		.loc 1 1305 0
 1189              		pop	{r4, r5, r6, pc}
 1190 0020 06E0     	.LFE55:
 1192              		.section	.text.UART_RS485SendData,"ax",%progbits
 1193              		.align	2
 1194 0022 0123     		.global	UART_RS485SendData
 1195              		.thumb
 1196 0024 FFF7FEFF 		.thumb_func
 1198              	UART_RS485SendData:
 1199              	.LFB57:
 1200 0028 237D     		.loc 1 1328 0
 1201 002a 13F0400F 		@ args = 0, pretend = 0, frame = 0
 1202 002e FBD0     		@ frame_needed = 0, uses_anonymous_args = 0
 1203              	.LVL116:
 1204              		push	{r4, lr}
 1205              	.LCFI4:
 1206 0030 70BD     		.loc 1 1329 0
 1207              		movs	r3, #0
 1208              		bl	UART_RS485Send
 1209 0032 C046     	.LVL117:
 1210              		.loc 1 1330 0
 1211              		pop	{r4, pc}
 1212              	.LFE57:
 1214              		.section	.text.UART_RS485SendSlvAddr,"ax",%progbits
 1215              		.align	2
 1216              		.global	UART_RS485SendSlvAddr
 1217              		.thumb
 1218              		.thumb_func
 1220              	UART_RS485SendSlvAddr:
 1221 0000 10B5     	.LFB56:
 1222              		.loc 1 1315 0
 1223              		@ args = 0, pretend = 0, frame = 8
 1224 0002 0023     		@ frame_needed = 0, uses_anonymous_args = 0
 1225 0004 FFF7FEFF 	.LVL118:
 1226              		push	{r0, r1, r2, lr}
 1227              	.LCFI5:
 1228 0008 10BD     	.LVL119:
 1229              		.loc 1 1315 0
 1230              		add	r3, sp, #8
 1231 000a C046     		strb	r1, [r3, #-1]!
 1232              	.LVL120:
 1233              		.loc 1 1316 0
 1234              		movs	r2, #1
 1235              		mov	r1, r3
 1236              	.LVL121:
 1237              		mov	r3, r2
 1238              		bl	UART_RS485Send
 1239              		.loc 1 1317 0
 1240              		pop	{r1, r2, r3, pc}
 1241              	.LFE56:
 1243 0000 07B5     		.section	.text.UART_Receive,"ax",%progbits
 1244              		.align	2
 1245              		.global	UART_Receive
 1246              		.thumb
 1247 0002 02AB     		.thumb_func
 1249              	UART_Receive:
 1250              	.LFB59:
 1251 0008 0122     		.loc 1 1413 0
 1252 000a 1946     		@ args = 0, pretend = 0, frame = 0
 1253              		@ frame_needed = 0, uses_anonymous_args = 0
 1254 000c 1346     	.LVL122:
 1255 000e FFF7FEFF 		.loc 1 1420 0
 1256              		cmp	r3, #1
 1257 0012 0EBD     		.loc 1 1413 0
 1258              		push	{r4, r5, r6, r7, r8, lr}
 1259              	.LCFI6:
 1260              		.loc 1 1413 0
 1261              		mov	r4, r0
 1262              		mov	r7, r1
 1263              		mov	r6, r2
 1264              		.loc 1 1420 0
 1265              		beq	.L227
 1266              	.LVL123:
 1267              		movs	r5, #0
1397:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1398:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1399:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Receive a block of data via UART peripheral
1400:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
1401:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				should be UART0, UART1, UART2 or UART3.
1402:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[out]	rxbuf 	Pointer to Received buffer
1403:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	buflen 	Length of Received buffer
1404:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in] 	flag 	Flag mode, should be NONE_BLOCKING or BLOCKING
1405:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1406:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return 		Number of bytes received
1407:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  *
1408:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * Note: when using UART in BLOCKING mode, a time-out condition is used
1409:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * via defined symbol UART_BLOCKING_TIMEOUT.
1410:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1411:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** uint32_t UART_Receive(LPC_UART_TypeDef *UARTx, uint8_t *rxbuf, \
1412:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uint32_t buflen, TRANSFER_BLOCK_Type flag)
1413:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1268              	
 1269              		subs	r2, r2, #1
 1270              	.LVL128:
 1271              	.L234:
1414:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint32_t bToRecv, bRecv, timeOut;
1415:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t *pChar = rxbuf;
1416:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1417:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	bToRecv = buflen;
1418:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1419:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// Blocking mode
1420:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	if (flag == BLOCKING) {
 1272              	oc 1 1424 0
 1273 0000 012B     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1274              	.LVL129:
 1275 0002 2DE9F041 		tst	r3, #1
 1276              		beq	.L231
 1277              		.loc 1 1429 0
 1278 0006 0446     		cbz	r2, .L232
 1279 0008 0F46     		.loc 1 1431 0
 1280 000a 1646     		mov	r0, r4
 1281              		bl	UART_ReceiveData
 1282 000c 01D0     	.LVL130:
 1283              		strb	r0, [r5, r7]
 1284 000e 0025     		.loc 1 1433 0
 1285              		adds	r5, r5, #1
 1286 0010 1BE0     	.LVL131:
 1287              	.L230:
 1288              		.loc 1 1422 0
 1289 0012 0025     		cmp	r5, r6
 1290              		beq	.L237
 1291 0014 0BE0     		mov	r2, #-1
 1292              	.LVL132:
 1293              		b	.L234
1421:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		bRecv = 0;
1422:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (bToRecv){
1423:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
1424:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			while (!(UARTx->LSR & UART_LSR_RDR)){
1425:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 1294              	1 1440 0
 1295 0016 DAB1     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
1426:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				timeOut--;
 1296              	VL134:
 1297 0018 013A     		tst	r3, #1
 1298              		beq	.L232
 1299              		.loc 1 1443 0
 1300              		mov	r0, r4
 1301 001a 237D     		bl	UART_ReceiveData
 1302              		strb	r0, [r5, r7]
 1303 001c 13F0010F 		.loc 1 1444 0
 1304 0020 F9D0     		adds	r5, r5, #1
1427:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1428:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Time out!
1429:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if(timeOut == 0) break;
 1305              	.L229:
 1306 0022 AAB1     		.loc 1 1439 0
1430:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			// Get data from the buffer
1431:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			(*pChar++) = UART_ReceiveData(UARTx);
 1307              	mp	r5, r6
 1308 0024 2046     		bne	.L239
 1309 0026 FFF7FEFF 	.L237:
 1310              		mov	r5, r6
 1311 002a E855     	.LVL136:
1432:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			bToRecv--;
1433:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			bRecv++;
 1312              	:
 1313 002c 0135     		.loc 1 1450 0
 1314              		mov	r0, r5
 1315              		pop	{r4, r5, r6, r7, r8, pc}
 1316              	.LFE59:
 1318 0030 0DD0     		.section	.text.UART_SetupCbs,"ax",%progbits
 1319 0032 4FF0FF32 		.align	2
 1320              		.global	UART_SetupCbs
 1321 0036 F0E7     		.thumb
 1322              		.thumb_func
1434:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1435:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1436:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	// None blocking mode
1437:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	else {
1438:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		bRecv = 0;
1439:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		while (bToRecv) {
1440:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			if (!(UARTx->LSR & UART_LSR_RDR)) {
 1324              	s:
 1325 0038 237D     	.LFB60:
 1326              		.loc 1 1467 0
 1327 003a 13F0010F 		@ args = 0, pretend = 0, frame = 0
 1328 003e 07D0     		@ frame_needed = 0, uses_anonymous_args = 0
1441:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				break;
1442:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			} else {
1443:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				(*pChar++) = UART_ReceiveData(UARTx);
 1329              	37:
 1330 0040 2046     		push	{r4, r5, r6, lr}
 1331 0042 FFF7FEFF 	.LCFI7:
 1332 0046 E855     		.loc 1 1467 0
1444:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bRecv++;
 1333              		r4, r1
 1334 0048 0135     		mov	r5, r2
 1335              		.loc 1 1470 0
 1336              		bl	getUartNum
 1337              	.LVL138:
 1338 004a B542     		.loc 1 1471 0
 1339 004c F4D1     		cmp	r4, #4
 1340              		bhi	.L250
 1341 004e 3546     		tbb	[pc, r4]
 1342              	.L249:
 1343              		.byte	(.L244-.L249)/2
1445:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 				bToRecv--;
1446:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 			}
1447:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		}
1448:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1449:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	return bRecv;
1450:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1344              	45-.L249)/2
 1345 0050 2846     		.byte	(.L246-.L249)/2
 1346 0052 BDE8F081 		.byte	(.L247-.L249)/2
 1347              		.byte	(.L248-.L249)/2
 1348              		.align	1
 1349 0056 C046     	.L244:
 1350              		.loc 1 1473 0
 1351              		ldr	r3, .L251
 1352              		add	r3, r3, r0, lsl #4
 1353              	.LVL139:
 1354              		str	r5, [r3, #4]
 1355              		.loc 1 1474 0
 1356              		b	.L250
1451:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1452:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1453:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1454:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Setup call-back function for UART interrupt handler for each
1455:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 				UART peripheral
1456:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral, should be UART0..3
1457:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	CbType	Call-back type, should be:
1458:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						0 - Receive Call-back
1459:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						1 - Transmit Call-back
1460:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						2 - Auto Baudrate Callback
1461:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						3 - Error Call-back
1462:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * 						4 - Modem Status Call-back (UART1 only)
1463:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	pfnCbs	Pointer to Call-back function
1464:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1465:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1466:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART_SetupCbs(LPC_UART_TypeDef *UARTx, uint8_t CbType, void *pfnCbs)
1467:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1357              	5:
 1358              		.loc 1 1476 0
 1359              		ldr	r3, .L251
 1360              		lsls	r2, r0, #4
 1361 0000 70B5     	.LVL141:
 1362              		str	r5, [r2, r3]
 1363              		.loc 1 1477 0
 1364 0002 0C46     		b	.L250
 1365 0004 1546     	.LVL142:
1468:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	uint8_t pUartNum;
1469:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1470:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	pUartNum = getUartNum(UARTx);
 1366              	loc 1 1479 0
 1367 0006 FFF7FEFF 		ldr	r3, .L251
 1368              		add	r3, r3, r0, lsl #4
1471:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	switch(CbType){
 1369              	L143:
 1370 000a 042C     		str	r5, [r3, #8]
 1371 000c 19D8     		.loc 1 1480 0
 1372 000e DFE804F0 		b	.L250
 1373              	.LVL144:
 1374 0012 03       	.L247:
 1375 0013 08       		.loc 1 1482 0
 1376 0014 0C       		ldr	r3, .L251
 1377 0015 11       		add	r3, r3, r0, lsl #4
 1378 0016 16       	.LVL145:
 1379 0017 00       		str	r5, [r3, #12]
 1380              		.loc 1 1483 0
1472:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case 0:
1473:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uartCbsDat[pUartNum].pfnRxCbs = (fnTxCbs_Type *)pfnCbs;
 1381              	L146:
 1382 0018 0A4B     	.L248:
 1383 001a 03EB0013 		.loc 1 1485 0
 1384              		ldr	r3, .L251+4
 1385 001e 5D60     		str	r5, [r3, #0]
1474:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1386              	47:
 1387 0020 0FE0     	.L250:
 1388              		.loc 1 1490 0
 1389              		pop	{r4, r5, r6, pc}
1475:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case 1:
1476:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uartCbsDat[pUartNum].pfnTxCbs = (fnRxCbs_Type *)pfnCbs;
 1390              	2:
 1391 0022 084B     		.align	2
 1392 0024 0201     	.L251:
 1393              		.word	.LANCHOR1
 1394 0026 D550     		.word	.LANCHOR0
1477:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1395              	0:
 1397              		.section	.text.UART0_StdIntHandler,"ax",%progbits
 1398              		.align	2
1478:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case 2:
1479:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uartCbsDat[pUartNum].pfnABCbs = (fnABCbs_Type *)pfnCbs;
 1399              	obal	UART0_StdIntHandler
 1400 002a 064B     		.thumb
 1401 002c 03EB0013 		.thumb_func
 1403 0030 9D60     	UART0_StdIntHandler:
1480:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1404              	1:
 1405 0032 06E0     		.loc 1 1498 0
 1406              		@ args = 0, pretend = 0, frame = 0
 1407              		@ frame_needed = 0, uses_anonymous_args = 0
1481:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case 3:
1482:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		uartCbsDat[pUartNum].pfnErrCbs = (fnErrCbs_Type *)pfnCbs;
 1408              	h	{r4, lr}
 1409 0034 034B     	.LCFI8:
 1410 0036 03EB0013 		.loc 1 1499 0
 1411              		ldr	r0, .L255
 1412 003a DD60     		bl	UART_GenIntHandler
1483:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
 1413              	 1 1500 0
 1414 003c 01E0     		pop	{r4, pc}
 1415              	.L256:
 1416              		.align	2
1484:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	case 4:
1485:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		pfnModemCbs = (fnModemCbs_Type *)pfnCbs;
 1417              	5:
 1418 003e 024B     		.word	1073790976
 1419 0040 1D60     	.LFE61:
 1421              		.section	.text.UART1_StdIntHandler,"ax",%progbits
1486:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
1487:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	default:
1488:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 		break;
1489:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	}
1490:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1422              	gn	2
 1423 0042 70BD     		.global	UART1_StdIntHandler
 1424              		.thumb
 1425              		.thumb_func
 1427 0044 00000000 	UART1_StdIntHandler:
 1428 0048 00000000 	.LFB62:
 1429              		.loc 1 1508 0
 1430              		@ args = 0, pretend = 0, frame = 0
 1431              		@ frame_needed = 0, uses_anonymous_args = 0
 1432              		push	{r4, lr}
 1433              	.LCFI9:
 1434              		.loc 1 1509 0
 1435              		ldr	r0, .L259
 1436              		bl	UART_GenIntHandler
 1437              		.loc 1 1510 0
 1438              		pop	{r4, pc}
1491:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1492:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1493:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Standard UART0 interrupt handler
1494:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	None
1495:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1496:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1497:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART0_StdIntHandler(void)
1498:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1439              	.L259:
 1440              		.word	1073807360
 1441              	.LFE62:
 1443              		.section	.text.UART2_StdIntHandler,"ax",%progbits
1499:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_GenIntHandler(LPC_UART0);
 1444              	gn	2
 1445 0002 0248     		.global	UART2_StdIntHandler
 1446 0004 FFF7FEFF 		.thumb
1500:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1447              	humb_func
 1449              	UART2_StdIntHandler:
 1450 000a C046     	.LFB63:
 1451              		.loc 1 1518 0
 1452 000c 00C00040 		@ args = 0, pretend = 0, frame = 0
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454              		push	{r4, lr}
 1455              	.LCFI10:
 1456              		.loc 1 1519 0
 1457              		ldr	r0, .L263
 1458              		bl	UART_GenIntHandler
 1459              		.loc 1 1520 0
 1460              		pop	{r4, pc}
 1461              	.L264:
 1462              		.align	2
1501:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1502:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1503:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Standard UART1 interrupt handler
1504:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	None
1505:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1506:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1507:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART1_StdIntHandler(void)
1508:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1463              	74364416
 1464              	.LFE63:
 1466 0000 10B5     		.section	.text.UART3_StdIntHandler,"ax",%progbits
 1467              		.align	2
1509:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_GenIntHandler((LPC_UART_TypeDef *)LPC_UART1);
 1468              	bal	UART3_StdIntHandler
 1469 0002 0248     		.thumb
 1470 0004 FFF7FEFF 		.thumb_func
1510:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1471              	ype	UART3_StdIntHandler, %function
 1472 0008 10BD     	UART3_StdIntHandler:
 1473              	.LFB64:
 1474 000a C046     		.loc 1 1528 0
 1475              		@ args = 0, pretend = 0, frame = 0
 1476 000c 00000140 		@ frame_needed = 0, uses_anonymous_args = 0
 1477              		push	{r4, lr}
 1478              	.LCFI11:
 1479              		.loc 1 1529 0
 1480              		ldr	r0, .L267
 1481              		bl	UART_GenIntHandler
 1482              		.loc 1 1530 0
 1483              		pop	{r4, pc}
 1484              	.L268:
 1485              		.align	2
 1486              	.L267:
1511:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1512:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1513:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Standard UART2 interrupt handler
1514:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	None
1515:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return		None
1516:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1517:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART2_StdIntHandler(void)
1518:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1487              	0
 1488              	.LFE64:
 1490 0000 10B5     		.section	.text.UART_DeInit,"ax",%progbits
 1491              		.align	2
1519:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_GenIntHandler(LPC_UART2);
 1492              	bal	UART_DeInit
 1493 0002 0248     		.thumb
 1494 0004 FFF7FEFF 		.thumb_func
1520:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1495              	ype	UART_DeInit, %function
 1496 0008 10BD     	UART_DeInit:
 1497              	.LFB34:
 1498 000a C046     		.loc 1 343 0
 1499              		@ args = 0, pretend = 0, frame = 0
 1500 000c 00800940 		@ frame_needed = 0, uses_anonymous_args = 0
 1501              	.LVL148:
 1502              		push	{r4, lr}
 1503              	.LCFI12:
 1504              		.loc 1 347 0
 1505              		movs	r1, #0
 1506              		.loc 1 343 0
 1507              		mov	r4, r0
 1508              		.loc 1 347 0
 1509              		bl	UART_TxCmd
 1510              	.LVL149:
1521:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 
1522:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** /*********************************************************************//**
1523:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @brief		Standard UART3 interrupt handler
1524:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @param[in]	None
1525:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  * @return
1526:Libraries/NXP/Drivers/source/lpc17xx_uart.c ****  **********************************************************************/
1527:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** void UART3_StdIntHandler(void)
1528:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** {
 1511              	dr	r3, .L280
 1512              		cmp	r4, r3
 1513              		bne	.L270
 1514 0000 10B5     		.loc 1 353 0
 1515              		movs	r0, #8
1529:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** 	UART_GenIntHandler(LPC_UART3);
 1516              	279
 1517 0002 0248     	.L270:
 1518 0004 FFF7FEFF 		.loc 1 358 0
1530:Libraries/NXP/Drivers/source/lpc17xx_uart.c **** }
 1519              	r	r3, .L280+4
 1520 0008 10BD     		cmp	r4, r3
 1521              		bne	.L273
 1522 000a C046     		.loc 1 361 0
 1523              		movs	r0, #16
 1524 000c 00C00940 		b	.L279
 1525              	.L273:
 1526              		.loc 1 366 0
 1527              		ldr	r3, .L280+8
 1528              		cmp	r4, r3
 1529              		bne	.L275
 1530              		.loc 1 369 0
 1531              		mov	r0, #16777216
 1532              		b	.L279
 1533              	.L275:
 1534              		.loc 1 374 0
 1535              		ldr	r3, .L280+12
 1536              		cmp	r4, r3
 1537              		bne	.L278
 1538              		.loc 1 377 0
 1539 0000 10B5     		mov	r0, #33554432
 1540              	.L279:
 1541              		movs	r1, #0
 1542 0002 0021     		bl	CLKPWR_ConfigPPWR
 1543              	.L278:
 1544 0004 0446     		.loc 1 380 0
 1545              		pop	{r4, pc}
 1546 0006 FFF7FEFF 	.L281:
 1547              		.align	2
 1548              	.L280:
 1549 000a 0C4B     		.word	1073790976
 1550 000c 9C42     		.word	1073807360
 1551 000e 01D1     		.word	1074364416
 1552              		.word	1074380800
 1553 0010 0820     	.LFE34:
 1555              		.section	.text.uart_set_divisors,"ax",%progbits
 1556              		.align	2
 1557 0014 0A4B     		.global	uart_set_divisors
 1558 0016 9C42     		.thumb
 1559 0018 01D1     		.thumb_func
 1561 001a 1020     	uart_set_divisors:
 1562 001c 0AE0     	.LFB32:
 1563              		.loc 1 110 0
 1564              		@ args = 0, pretend = 0, frame = 8
 1565 001e 094B     		@ frame_needed = 0, uses_anonymous_args = 0
 1566 0020 9C42     	.LVL150:
 1567 0022 02D1     		.loc 1 127 0
 1568              		ldr	r3, .L313
 1569 0024 4FF08070 		.loc 1 110 0
 1570 0028 04E0     		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1571              	.LCFI13:
 1572              	.LVL151:
 1573 002a 074B     		.loc 1 127 0
 1574 002c 9C42     		cmp	r0, r3
 1575 002e 04D1     	.LVL152:
 1576              		.loc 1 110 0
 1577 0030 4FF00070 		mov	r4, r0
 1578              		mov	r5, r1
 1579 0034 0021     	.LVL153:
 1580 0036 FFF7FEFF 		.loc 1 127 0
 1581              		bne	.L283
 1582              	.LVL154:
 1583 003a 10BD     		.loc 1 129 0
 1584              		movs	r0, #6
 1585              		b	.L311
 1586              	.LVL155:
 1587 003c 00C00040 	.L283:
 1588 0040 00000140 		.loc 1 131 0
 1589 0044 00800940 		ldr	r3, .L313+4
 1590 0048 00C00940 		cmp	r0, r3
 1591              		bne	.L286
 1592              	.LVL156:
 1593              		.loc 1 133 0
 1594              		movs	r0, #8
 1595              	.LVL157:
 1596              		b	.L311
 1597              	.LVL158:
 1598              	.L286:
 1599              		.loc 1 135 0
 1600              		ldr	r3, .L313+8
 1601              		cmp	r0, r3
 1602              		bne	.L288
 1603              		.loc 1 137 0
 1604              		movs	r0, #48
 1605              	.LVL159:
 1606 0000 464B     		b	.L311
 1607              	.LVL160:
 1608 0002 2DE9F74F 	.L288:
 1609              		.loc 1 141 0
 1610              		movs	r0, #50
 1611              	.LVL161:
 1612 0006 9842     	.L311:
 1613              		bl	CLKPWR_GetPCLK
 1614              		.loc 1 145 0
 1615 0008 0446     		mov	r9, #0
 1616 000a 0D46     	.LVL162:
 1617              		lsrs	r0, r0, #4
 1618              	.LVL163:
 1619 000c 01D1     		mov	fp, #1
 1620              	.LVL164:
 1621              		str	r0, [sp, #4]
 1622 000e 0620     	.LVL165:
 1623 0010 0AE0     		mov	r6, r0
 1624              	.LVL166:
 1625              		mov	sl, r9
 1626              	.LVL167:
 1627 0012 434B     		mov	r0, r9
 1628 0014 9842     	.LVL168:
 1629 0016 01D1     		ldr	r8, .L313+12
 1630              	.LVL169:
 1631              		mov	r7, fp
 1632 0018 0820     	.LVL170:
 1633              		.loc 1 153 0
 1634 001a 05E0     		b	.L290
 1635              	.LVL171:
 1636              	.L291:
 1637              		.loc 1 157 0
 1638 001c 414B     		add	r3, ip, r7
 1639 001e 9842     	.LVL172:
 1640 0020 01D1     		udiv	lr, r6, r3
 1641              		.loc 1 159 0
 1642 0022 3020     		udiv	r1, lr, r5
 1643              		.loc 1 160 0
 1644 0024 00E0     		mls	r3, r5, r1, lr
 1645              		cmp	r3, r5, lsr #1
 1646              		.loc 1 161 0
 1647              		it	hi
 1648 0026 3220     		addhi	r1, r1, #1
 1649              		.loc 1 163 0
 1650              		subs	r2, r1, #3
 1651 0028 FFF7FEFF 		movw	r3, #65532
 1652              		cmp	r2, r3
 1653 002c 4FF00009 		bhi	.L294
 1654              		.loc 1 165 0
 1655 0030 0009     		udiv	r3, lr, r1
 1656              	.LVL173:
 1657 0032 4FF0010B 		.loc 1 167 0
 1658              		cmp	r3, r5
 1659 0036 0190     		bhi	.L296
 1660              		.loc 1 168 0
 1661 0038 0646     		subs	r0, r5, r3
 1662              		b	.L298
 1663 003a CA46     	.L296:
 1664              		.loc 1 170 0
 1665 003c 4846     		subs	r0, r3, r5
 1666              	.L298:
 1667 003e DFF8E880 		.loc 1 172 0
 1668              		cmp	r0, r8
 1669 0042 5F46     		bcs	.L294
 1670              		.loc 1 178 0
 1671              		cbnz	r0, .L300
 1672 0044 65E0     		mov	fp, r7
 1673              		mov	r9, ip
 1674              		mov	sl, r1
 1675              		mov	r8, r0
 1676 0046 0CEB0703 		b	.L302
 1677              	.L300:
 1678 004a B6FBF3FE 		mov	fp, r7
 1679              		mov	r9, ip
 1680 004e BEFBF5F1 		mov	sl, r1
 1681              		mov	r8, r0
 1682 0052 05FB11E3 	.L294:
 1683 0056 B3EB550F 		.loc 1 155 0
 1684              		add	ip, ip, #1
 1685 005a 88BF     		cmp	ip, #16
 1686 005c 0131     		bne	.L291
 1687              		.loc 1 183 0
 1688 005e CA1E     		cbz	r0, .L302
 1689 0060 4FF6FC73 		.loc 1 153 0
 1690 0064 9A42     		ldr	r3, [sp, #4]
 1691 0066 12D8     	.LVL174:
 1692              		adds	r7, r7, #1
 1693 0068 BEFBF1F3 		adds	r6, r6, r3
 1694              		cmp	r7, #16
 1695              		bne	.L290
 1696 006c AB42     	.LVL175:
 1697 006e 01D8     	.L302:
 1698              		.loc 1 187 0
 1699 0070 E81A     		movs	r3, #3
 1700 0072 00E0     	.LVL176:
 1701              		mul	r3, r5, r3
 1702              		movs	r2, #100
 1703 0074 581B     		udiv	r3, r3, r2
 1704              		cmp	r8, r3
 1705              		bcc	.L305
 1706 0076 4045     		movs	r0, #0
 1707 0078 09D2     	.LVL177:
 1708              		b	.L307
 1709 007a 20B9     	.LVL178:
 1710 007c BB46     	.L305:
 1711 007e E146     		.loc 1 189 0
 1712 0080 8A46     		ldr	r3, .L313+4
 1713 0082 8046     		lsr	r2, sl, #8
 1714 0084 0EE0     		cmp	r4, r3
 1715              		uxtb	r1, sl
 1716 0086 BB46     	.LVL179:
 1717 0088 E146     		lsl	r0, fp, #4
 1718 008a 8A46     	.LVL180:
 1719 008c 8046     		and	r5, r9, #15
 1720              	.LVL181:
 1721              		bne	.L308
 1722 008e 0CF1010C 		.loc 1 191 0
 1723 0092 BCF1100F 		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 1724 0096 D6D1     		orr	r3, r3, #128
 1725              		strb	r3, [r4, #12]
 1726 0098 20B1     		.loc 1 192 0
 1727              		uxtb	r3, r2
 1728 009a 019B     		strb	r3, [r4, #4]
 1729              		.loc 1 193 0
 1730 009c 0137     		strb	r1, [r4, #0]
 1731 009e F618     		.loc 1 195 0
 1732 00a0 102F     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 1733 00a2 36D1     		and	r3, r3, #127
 1734              		strb	r3, [r4, #12]
 1735              		.loc 1 196 0
 1736              		and	r3, r0, #240
 1737 00a4 0323     		orrs	r3, r3, r5
 1738              		str	r3, [r4, #40]
 1739 00a6 05FB03F3 		b	.L312
 1740 00aa 6422     	.L308:
 1741 00ac B3FBF2F3 		.loc 1 201 0
 1742 00b0 9845     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 1743 00b2 01D3     		orr	r3, r3, #128
 1744 00b4 0020     		strb	r3, [r4, #12]
 1745              		.loc 1 202 0
 1746 00b6 2FE0     		uxtb	r3, r2
 1747              		strb	r3, [r4, #4]
 1748              		.loc 1 203 0
 1749              		strb	r1, [r4, #0]
 1750 00b8 194B     		.loc 1 205 0
 1751 00ba 4FEA1A22 		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 1752 00be 9C42     		and	r3, r3, #127
 1753 00c0 5FFA8AF1 		strb	r3, [r4, #12]
 1754              		.loc 1 206 0
 1755 00c4 4FEA0B10 		orr	r3, r0, r5
 1756              		uxtb	r3, r3
 1757 00c8 09F00F05 		strb	r3, [r4, #40]
 1758              	.L312:
 1759 00cc 0FD1     		movs	r0, #1
 1760              	.LVL182:
 1761 00ce 237B     		b	.L307
 1762 00d0 43F08003 	.LVL183:
 1763 00d4 2373     	.L290:
 1764              		mov	ip, #0
 1765 00d6 D3B2     		b	.L291
 1766 00d8 2371     	.LVL184:
 1767              	.L307:
 1768 00da 2170     	.LVL185:
 1769              		.loc 1 213 0
 1770 00dc 237B     		pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1771 00de 03F07F03 	.L314:
 1772 00e2 2373     		.align	2
 1773              	.L313:
 1774 00e4 00F0F003 		.word	1073790976
 1775 00e8 2B43     		.word	1073807360
 1776 00ea A362     		.word	1074364416
 1777 00ec 0FE0     		.word	100000
 1778              	.LFE32:
 1780 00ee 237B     		.section	.text.UART_Init,"ax",%progbits
 1781 00f0 43F08003 		.align	2
 1782 00f4 2373     		.global	UART_Init
 1783              		.thumb
 1784 00f6 D3B2     		.thumb_func
 1786              	UART_Init:
 1787 00fa 2170     	.LFB35:
 1788              		.loc 1 393 0
 1789 00fc 237B     		@ args = 0, pretend = 0, frame = 0
 1790 00fe 03F07F03 		@ frame_needed = 0, uses_anonymous_args = 0
 1791 0102 2373     	.LVL186:
 1792              		.loc 1 403 0
 1793 0104 40EA0503 		ldr	r3, .L355
 1794 0108 DBB2     		.loc 1 393 0
 1795 010a 84F82830 		push	{r4, r5, r6, lr}
 1796              	.LCFI14:
 1797 010e 0120     		.loc 1 403 0
 1798              		cmp	r0, r3
 1799 0110 02E0     		.loc 1 393 0
 1800              		mov	r4, r0
 1801              		mov	r5, r1
 1802 0112 4FF0000C 		.loc 1 403 0
 1803 0116 96E7     		bne	.L316
 1804              	.LVL187:
 1805              		.loc 1 406 0
 1806              		movs	r0, #8
 1807              		movs	r1, #1
 1808 0118 BDE8FE8F 		bl	CLKPWR_ConfigPPWR
 1809              	.LVL188:
 1810              	.L316:
 1811              		.loc 1 411 0
 1812 011c 00C00040 		ldr	r3, .L355+4
 1813 0120 00000140 		cmp	r4, r3
 1814 0124 00800940 		bne	.L318
 1815 0128 A0860100 		.loc 1 414 0
 1816              		movs	r0, #16
 1817              		movs	r1, #1
 1818              		bl	CLKPWR_ConfigPPWR
 1819              		.loc 1 437 0
 1820              		movs	r3, #7
 1821              		strb	r3, [r4, #8]
 1822              		.loc 1 440 0
 1823              		movs	r3, #0
 1824              		strb	r3, [r4, #8]
 1825              		.loc 1 443 0
 1826              		b	.L320
 1827              	.LVL189:
 1828              	.L318:
 1829              		.loc 1 419 0
 1830              		ldr	r3, .L355+8
 1831 0000 474B     		cmp	r4, r3
 1832              		bne	.L321
 1833 0002 70B5     		.loc 1 422 0
 1834              		mov	r0, #16777216
 1835              		b	.L354
 1836 0004 9842     	.LVL190:
 1837              	.L321:
 1838 0006 0446     		.loc 1 427 0
 1839 0008 0D46     		ldr	r3, .L355+12
 1840              		cmp	r4, r3
 1841 000a 03D1     		bne	.L323
 1842              		.loc 1 430 0
 1843              		mov	r0, #33554432
 1844 000c 0820     	.L354:
 1845 000e 0121     		movs	r1, #1
 1846 0010 FFF7FEFF 		bl	CLKPWR_ConfigPPWR
 1847              		b	.L323
 1848              	.L325:
 1849              		.loc 1 445 0
 1850 0014 434B     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1851 0016 9C42     	.L320:
 1852 0018 08D1     		.loc 1 443 0
 1853              		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1854 001a 1020     		tst	r3, #1
 1855 001c 0121     		bne	.L325
 1856 001e FFF7FEFF 		.loc 1 448 0
 1857              		mvn	r3, #127
 1858 0022 0723     		strb	r3, [r4, #48]
 1859 0024 2372     	.L327:
 1860              		.loc 1 450 0
 1861 0026 0023     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1862 0028 2372     		tst	r3, #32
 1863              		beq	.L327
 1864 002a 0FE0     		.loc 1 452 0
 1865              		movs	r3, #0
 1866              		strb	r3, [r4, #48]
 1867              		.loc 1 455 0
 1868 002c 3E4B     		str	r3, [r4, #4]
 1869 002e 9C42     		.loc 1 457 0
 1870 0030 02D1     		strb	r3, [r4, #12]
 1871              		.loc 1 459 0
 1872 0032 4FF08070 		str	r3, [r4, #32]
 1873 0036 04E0     		.loc 1 461 0
 1874              		strb	r3, [r4, #16]
 1875              		.loc 1 463 0
 1876              		strb	r3, [r4, #76]
 1877 0038 3C4B     		.loc 1 465 0
 1878 003a 9C42     		strb	r3, [r4, #84]
 1879 003c 22D1     		.loc 1 467 0
 1880              		strb	r3, [r4, #80]
 1881 003e 4FF00070 		.loc 1 469 0
 1882              		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 1883 0042 0121     		.loc 1 470 0
 1884 0044 FFF7FEFF 		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1885 0048 1CE0     		b	.L329
 1886              	.LVL191:
 1887              	.L323:
 1888 004a 2378     		.loc 1 475 0
 1889              		movs	r3, #7
 1890              		strb	r3, [r4, #8]
 1891 004c 237D     		.loc 1 477 0
 1892 004e 13F0010F 		movs	r3, #0
 1893 0052 FAD1     		strb	r3, [r4, #8]
 1894              		.loc 1 480 0
 1895 0054 6FF07F03 		b	.L330
 1896 0058 84F83030 	.L331:
 1897              		.loc 1 482 0
 1898              		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1899 005c 237D     	.L330:
 1900 005e 13F0200F 		.loc 1 480 0
 1901 0062 FBD0     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1902              		tst	r3, #1
 1903 0064 0023     		bne	.L331
 1904 0066 84F83030 		.loc 1 485 0
 1905              		mvn	r3, #127
 1906 006a 6360     		strb	r3, [r4, #48]
 1907              	.L333:
 1908 006c 2373     		.loc 1 487 0
 1909              		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1910 006e 2362     		tst	r3, #32
 1911              		beq	.L333
 1912 0070 2374     		.loc 1 489 0
 1913              		movs	r2, #0
 1914 0072 84F84C30 		strb	r2, [r4, #48]
 1915              		.loc 1 492 0
 1916 0076 84F85430 		str	r2, [r4, #4]
 1917              		.loc 1 494 0
 1918 007a 84F85030 		strb	r2, [r4, #12]
 1919              		.loc 1 496 0
 1920 007e 237E     		str	r2, [r4, #32]
 1921              		.loc 1 498 0
 1922 0080 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1923 0082 1DE0     		.loc 1 501 0
 1924              		ldr	r3, .L355+12
 1925              		cmp	r4, r3
 1926              		.loc 1 504 0
 1927 0084 0723     		it	eq
 1928 0086 2372     		strbeq	r2, [r4, #36]
 1929              	.L329:
 1930 0088 0023     		.loc 1 509 0
 1931 008a 2372     		mov	r0, r4
 1932              		ldr	r1, [r5, #0]
 1933 008c 00E0     		bl	uart_set_divisors
 1934              		.loc 1 518 0
 1935              		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 1936 008e 2378     		and	r2, r3, #192
 1937              	.LVL192:
 1938              		.loc 1 521 0
 1939 0090 237D     		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 1940 0092 13F0010F 		cmp	r3, #1
 1941 0096 FAD1     		beq	.L341
 1942              		bcc	.L340
 1943 0098 6FF07F03 		cmp	r3, #2
 1944 009c 84F83030 		beq	.L342
 1945              		b	.L339
 1946              	.L341:
 1947 00a0 237D     		.loc 1 526 0
 1948 00a2 13F0200F 		orr	r2, r2, #1
 1949 00a6 FBD0     		.loc 1 527 0
 1950              		b	.L340
 1951 00a8 0022     	.L342:
 1952 00aa 84F83020 		.loc 1 529 0
 1953              		orr	r2, r2, #2
 1954 00ae 6260     		.loc 1 530 0
 1955              		b	.L340
 1956 00b0 2273     	.L339:
 1957              		.loc 1 533 0
 1958 00b2 2262     		orr	r2, r2, #3
 1959              	.L340:
 1960 00b4 237D     		.loc 1 537 0
 1961              		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 1962 00b6 1D4B     		cbz	r3, .L343
 1963 00b8 9C42     		.loc 1 544 0
 1964              		cmp	r3, #3
 1965 00ba 08BF     		.loc 1 543 0
 1966 00bc 84F82420 		orr	r2, r2, #8
 1967              		.loc 1 544 0
 1968              		beq	.L346
 1969 00c0 2046     		cmp	r3, #4
 1970 00c2 2968     		beq	.L347
 1971 00c4 FFF7FEFF 		cmp	r3, #2
 1972              		bne	.L343
 1973 00c8 237B     		.loc 1 551 0
 1974 00ca 03F0C002 		orr	r2, r2, #16
 1975              		.loc 1 552 0
 1976              		b	.L343
 1977 00ce 6B79     	.L346:
 1978 00d0 012B     		.loc 1 555 0
 1979 00d2 03D0     		orr	r2, r2, #32
 1980 00d4 0AD3     		.loc 1 556 0
 1981 00d6 022B     		b	.L343
 1982 00d8 03D0     	.L347:
 1983 00da 05E0     		.loc 1 559 0
 1984              		orr	r2, r2, #48
 1985              	.L343:
 1986 00dc 42F00102 		.loc 1 566 0
 1987              		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 1988 00e0 04E0     		cmp	r3, #1
 1989              		.loc 1 568 0
 1990              		it	eq
 1991 00e2 42F00202 		orreq	r2, r2, #4
 1992              		uxtb	r3, r2
 1993 00e6 01E0     	.LVL193:
 1994              		.loc 1 584 0
 1995              		strb	r3, [r4, #12]
 1996 00e8 42F00302 		.loc 1 586 0
 1997              		pop	{r4, r5, r6, pc}
 1998              	.L356:
 1999 00ec 2B79     		.align	2
 2000 00ee 7BB1     	.L355:
 2001              		.word	1073790976
 2002 00f0 032B     		.word	1073807360
 2003              		.word	1074364416
 2004 00f2 42F00802 		.word	1074380800
 2005              	.LFE35:
 2007 00f8 042B     		.global	uartCbsDat
 2008 00fa 07D0     		.global	pfnModemCbs
 2009 00fc 022B     		.section	.bss.pfnModemCbs,"aw",%nobits
 2010 00fe 07D1     		.align	2
 2011              		.set	.LANCHOR0,. + 0
 2014 0104 04E0     	pfnModemCbs:
 2015              		.space	4
 2016              		.section	.bss.uartCbsDat,"aw",%nobits
 2017 0106 42F02002 		.align	2
 2018              		.set	.LANCHOR1,. + 0
 2021              	uartCbsDat:
 2022 010c 42F03002 		.space	64
 2023              		.section	.debug_frame,"",%progbits
 2024              	.Lframe0:
 2025 0110 AB79     		.4byte	.LECIE0-.LSCIE0
 2026 0112 012B     	.LSCIE0:
 2027              		.4byte	0xffffffff
 2028 0114 08BF     		.byte	0x1
 2029 0116 42F00402 		.ascii	"\000"
 2030 011a D3B2     		.uleb128 0x1
 2031              		.sleb128 -4
 2032              		.byte	0xe
 2033 011c 2373     		.byte	0xc
 2034              		.uleb128 0xd
 2035 011e 70BD     		.uleb128 0x0
 2036              		.align	2
 2037              	.LECIE0:
 2038              	.LSFDE0:
 2039 0120 00C00040 		.4byte	.LEFDE0-.LASFDE0
 2040 0124 00000140 	.LASFDE0:
 2041 0128 00800940 		.4byte	.Lframe0
 2042 012c 00C00940 		.4byte	.LFB31
 2043              		.4byte	.LFE31-.LFB31
 2044              		.align	2
 2045              	.LEFDE0:
 2046              	.LSFDE2:
 2047              		.4byte	.LEFDE2-.LASFDE2
 2048              	.LASFDE2:
 2049              		.4byte	.Lframe0
 2050              		.4byte	.LFB33
 2051              		.4byte	.LFE33-.LFB33
 2052              		.byte	0x4
 2053 0000 00000000 		.4byte	.LCFI0-.LFB33
 2054              		.byte	0xe
 2055              		.uleb128 0x18
 2056              		.byte	0x8e
 2057              		.uleb128 0x1
 2058              		.byte	0x88
 2059              		.uleb128 0x2
 2060 0000 00000000 		.byte	0x87
 2060      00000000 
 2060      00000000 
 2060      00000000 
 2060      00000000 
 2527              		.byte	0x55
DEFINED SYMBOLS
                            *ABS*:00000000 lpc17xx_uart.c
                            .text:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:28     .text.getUartNum:00000000 getUartNum
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:25     .text.getUartNum:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:70     .text.getUartNum:00000020 $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:81     .text.UART_GenIntHandler:00000000 UART_GenIntHandler
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:78     .text.UART_GenIntHandler:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:223    .text.UART_GenIntHandler:000000b0 $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:234    .text.UART_ConfigStructInit:00000000 UART_ConfigStructInit
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:231    .text.UART_ConfigStructInit:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:265    .text.UART_SendData:00000000 UART_SendData
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:262    .text.UART_SendData:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:285    .text.UART_ReceiveData:00000000 UART_ReceiveData
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:282    .text.UART_ReceiveData:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:309    .text.UART_ForceBreak:00000000 UART_ForceBreak
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:306    .text.UART_ForceBreak:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:333    .text.UART_IrDAInvtInputCmd:00000000 UART_IrDAInvtInputCmd
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:330    .text.UART_IrDAInvtInputCmd:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:369    .text.UART_IrDACmd:00000000 UART_IrDACmd
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:366    .text.UART_IrDACmd:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:401    .text.UART_IrDAPulseDivConfig:00000000 UART_IrDAPulseDivConfig
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:398    .text.UART_IrDAPulseDivConfig:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:433    .text.UART_IntConfig:00000000 UART_IntConfig
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:430    .text.UART_IntConfig:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:450    .text.UART_IntConfig:0000000a $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:458    .text.UART_IntConfig:00000010 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:528    .text.UART_IntConfig:0000005c $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:537    .text.UART_GetLineStatus:00000000 UART_GetLineStatus
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:534    .text.UART_GetLineStatus:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:561    .text.UART_CheckBusy:00000000 UART_CheckBusy
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:558    .text.UART_CheckBusy:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:586    .text.UART_FIFOConfig:00000000 UART_FIFOConfig
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:583    .text.UART_FIFOConfig:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:651    .text.UART_FIFOConfigStructInit:00000000 UART_FIFOConfigStructInit
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:648    .text.UART_FIFOConfigStructInit:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:681    .text.UART_ABCmd:00000000 UART_ABCmd
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:678    .text.UART_ABCmd:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:771    .text.UART_ABCmd:00000078 $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:780    .text.UART_TxCmd:00000000 UART_TxCmd
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:777    .text.UART_TxCmd:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:812    .text.UART_FullModemForcePinState:00000000 UART_FullModemForcePinState
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:809    .text.UART_FullModemForcePinState:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:857    .text.UART_FullModemConfigMode:00000000 UART_FullModemConfigMode
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:854    .text.UART_FullModemConfigMode:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:905    .text.UART_FullModemGetStatus:00000000 UART_FullModemGetStatus
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:902    .text.UART_FullModemGetStatus:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:926    .text.UART_RS485Config:00000000 UART_RS485Config
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:923    .text.UART_RS485Config:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1004   .text.UART_RS485ReceiverCmd:00000000 UART_RS485ReceiverCmd
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1001   .text.UART_RS485ReceiverCmd:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1036   .text.UART_Send:00000000 UART_Send
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1033   .text.UART_Send:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1154   .text.UART_RS485Send:00000000 UART_RS485Send
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1151   .text.UART_RS485Send:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1215   .text.UART_RS485SendData:00000000 UART_RS485SendData
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1212   .text.UART_RS485SendData:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1237   .text.UART_RS485SendSlvAddr:00000000 UART_RS485SendSlvAddr
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1234   .text.UART_RS485SendSlvAddr:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1266   .text.UART_Receive:00000000 UART_Receive
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1263   .text.UART_Receive:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1355   .text.UART_SetupCbs:00000000 UART_SetupCbs
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1352   .text.UART_SetupCbs:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1374   .text.UART_SetupCbs:00000012 $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1382   .text.UART_SetupCbs:00000018 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1427   .text.UART_SetupCbs:00000044 $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1437   .text.UART0_StdIntHandler:00000000 UART0_StdIntHandler
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1434   .text.UART0_StdIntHandler:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1452   .text.UART0_StdIntHandler:0000000c $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1461   .text.UART1_StdIntHandler:00000000 UART1_StdIntHandler
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1458   .text.UART1_StdIntHandler:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1476   .text.UART1_StdIntHandler:0000000c $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1485   .text.UART2_StdIntHandler:00000000 UART2_StdIntHandler
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1482   .text.UART2_StdIntHandler:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1500   .text.UART2_StdIntHandler:0000000c $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1509   .text.UART3_StdIntHandler:00000000 UART3_StdIntHandler
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1506   .text.UART3_StdIntHandler:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1524   .text.UART3_StdIntHandler:0000000c $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1533   .text.UART_DeInit:00000000 UART_DeInit
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1530   .text.UART_DeInit:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1587   .text.UART_DeInit:0000003c $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1599   .text.uart_set_divisors:00000000 uart_set_divisors
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1596   .text.uart_set_divisors:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1812   .text.uart_set_divisors:0000011c $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1824   .text.UART_Init:00000000 UART_Init
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:1821   .text.UART_Init:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:2039   .text.UART_Init:00000120 $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:2059   .bss.uartCbsDat:00000000 uartCbsDat
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:2052   .bss.pfnModemCbs:00000000 pfnModemCbs
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:2063   .debug_frame:00000000 $d
C:\Users\KVIN~1\AppData\Local\Temp/ccUJcaaa.s:2531   .debug_loc:00000000 $d

UNDEFINED SYMBOLS
CLKPWR_ConfigPPWR
CLKPWR_GetPCLK
