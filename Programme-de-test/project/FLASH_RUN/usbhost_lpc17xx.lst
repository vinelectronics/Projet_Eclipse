   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"usbhost_lpc17xx.c"
  21              	.Ltext0:
  22              		.section	.text.Host_DelayUS,"ax",%progbits
  23              		.align	2
  24              		.global	Host_DelayUS
  25              		.thumb
  26              		.thumb_func
  28              	Host_DelayUS:
  29              	.LFB32:
  30              		.file 1 "Libraries/USBHostLite/usbhost_lpc17xx.c"
   1:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
   2:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
   3:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                                 NXP USB Host Stack
   4:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
   5:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                     (c) Copyright 2008, NXP SemiConductors
   6:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                     (c) Copyright 2008, OnChip  Technologies LLC
   7:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                                 All Rights Reserved
   8:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
   9:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                                  www.nxp.com
  10:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                               www.onchiptech.com
  11:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
  12:Libraries/USBHostLite/usbhost_lpc17xx.c **** * File           : usbhost_lpc17xx.c
  13:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Programmer(s)  : Ravikanth.P
  14:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Version        :
  15:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
  16:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
  17:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
  18:Libraries/USBHostLite/usbhost_lpc17xx.c ****  
  19:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
  20:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
  21:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                            INCLUDE HEADER FILES
  22:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
  23:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
  24:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  25:Libraries/USBHostLite/usbhost_lpc17xx.c **** #include  "usbhost_lpc17xx.h"
  26:Libraries/USBHostLite/usbhost_lpc17xx.c **** #include "LPC17xx.h"
  27:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  28:Libraries/USBHostLite/usbhost_lpc17xx.c **** #define HOST_BASE_ADDRESS 0x2007C000;
  29:Libraries/USBHostLite/usbhost_lpc17xx.c **** //#define HOST_BASE_ADDRESS 0x20080000
  30:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  31:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  32:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
  33:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
  34:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                              GLOBAL VARIABLES
  35:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
  36:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
  37:Libraries/USBHostLite/usbhost_lpc17xx.c **** int gUSBConnected;
  38:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  39:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  USB_INT32U   HOST_RhscIntr = 0;         /* Root Hub Status Change interrupt              
  40:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  USB_INT32U   HOST_WdhIntr  = 0;         /* Semaphore to wait until the TD is submitted   
  41:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  USB_INT08U   HOST_TDControlStatus = 0;
  42:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  HCED        *EDCtrl;                    /* Control endpoint descriptor structure         
  43:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  HCED        *EDBulkIn;                  /* BulkIn endpoint descriptor  structure         
  44:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  HCED        *EDBulkOut;                 /* BulkOut endpoint descriptor structure         
  45:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  HCTD        *TDHead;                    /* Head transfer descriptor structure            
  46:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  HCTD        *TDTail;                    /* Tail transfer descriptor structure            
  47:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  HCCA        *Hcca;                      /* Host Controller Communications Area structure 
  48:Libraries/USBHostLite/usbhost_lpc17xx.c ****           USB_INT16U  *TDBufNonVol;               /* Identical to TDBuffer just to reduce compiler 
  49:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  USB_INT08U  *TDBuffer;                  /* Current Buffer Pointer of transfer descriptor 
  50:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  USB_INT08U  *FATBuffer;                 /* Buffer used by FAT file system                
  51:Libraries/USBHostLite/usbhost_lpc17xx.c **** volatile  USB_INT08U  *UserBuffer;                /* Buffer used by application                    
  52:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  53:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
  54:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
  55:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         DELAY IN MILLI SECONDS
  56:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
  57:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function provides a delay in milli seconds
  58:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
  59:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : delay    The delay required
  60:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
  61:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : None
  62:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
  63:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
  64:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
  65:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  66:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  Host_DelayMS (USB_INT32U  delay)
  67:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
  68:Libraries/USBHostLite/usbhost_lpc17xx.c ****     volatile  USB_INT32U  i;
  69:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  70:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  71:Libraries/USBHostLite/usbhost_lpc17xx.c ****     for (i = 0; i < delay; i++) {
  72:Libraries/USBHostLite/usbhost_lpc17xx.c ****         Host_DelayUS(1000);
  73:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
  74:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
  75:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  76:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
  77:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
  78:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         DELAY IN MICRO SECONDS
  79:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
  80:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function provides a delay in micro seconds
  81:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
  82:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : delay    The delay required
  83:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
  84:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : None
  85:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
  86:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
  87:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
  88:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  89:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  Host_DelayUS (USB_INT32U  delay)
  90:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
  31              	end = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              		sub	sp, sp, #8
  36 0000 82B0     	.LCFI0:
  37              		.loc 1 94 0
  91:Libraries/USBHostLite/usbhost_lpc17xx.c ****     volatile  USB_INT32U  i;
  92:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  93:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  94:Libraries/USBHostLite/usbhost_lpc17xx.c ****     for (i = 0; i < (4 * delay); i++) {    /* This logic was tested. It gives app. 1 micro sec dela
  38              	3, #0
  39 0002 0023     		.loc 1 90 0
  40              		@ lr needed for prologue
  41              		.loc 1 94 0
  42              		str	r3, [sp, #4]
  43 0004 0193     	.LVL1:
  44              		lsls	r0, r0, #2
  45 0006 8000     	.LVL2:
  46              		b	.L2
  47 0008 02E0     	.L3:
  48              		ldr	r3, [sp, #4]
  49 000a 019B     		adds	r3, r3, #1
  50 000c 0133     		str	r3, [sp, #4]
  51 000e 0193     	.LVL3:
  52              	.L2:
  53              		ldr	r3, [sp, #4]
  54 0010 019B     		cmp	r3, r0
  55 0012 8342     		bcc	.L3
  56 0014 F9D3     		.loc 1 97 0
  95:Libraries/USBHostLite/usbhost_lpc17xx.c ****         ;
  96:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
  97:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
  57              		lr
  58 0016 02B0     	.LFE32:
  60              		.section	.text.Host_DelayMS,"ax",%progbits
  61              		.align	2
  62 001a C046     		.global	Host_DelayMS
  63              		.thumb
  64              		.thumb_func
  66              	Host_DelayMS:
  67              	.LFB31:
  68              		.loc 1 67 0
  69              		@ args = 0, pretend = 0, frame = 8
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              	.LVL4:
  72              		push	{r0, r1, r4, lr}
  73              	.LCFI1:
  74 0000 13B5     	.LVL5:
  75              		.loc 1 71 0
  76              		movs	r3, #0
  77              		.loc 1 67 0
  78 0002 0023     		mov	r4, r0
  79              	.LVL6:
  80 0004 0446     		b	.L11
  81              	.LVL7:
  82 0006 05E0     	.L8:
  83              		.loc 1 72 0
  84              		mov	r0, #1000
  85              		bl	Host_DelayUS
  86 0008 4FF47A70 		.loc 1 71 0
  87 000c FFF7FEFF 		ldr	r3, [sp, #4]
  88              		adds	r3, r3, #1
  89 0010 019B     	.LVL8:
  90 0012 0133     	.L11:
  91              		str	r3, [sp, #4]
  92              	.LVL9:
  93 0014 0193     		ldr	r3, [sp, #4]
  94              		cmp	r3, r4
  95 0016 019B     		bcc	.L8
  96 0018 A342     		.loc 1 74 0
  97 001a F5D3     		pop	{r2, r3, r4, pc}
  98              	.LFE31:
 100              		.section	.text.USB_IRQHandler,"ax",%progbits
 101              		.align	2
 102 001e C046     		.global	USB_IRQHandler
 103              		.thumb
 104              		.thumb_func
 106              	USB_IRQHandler:
 107              	.LFB34:
 108              		.loc 1 205 0
 109              		@ args = 0, pretend = 0, frame = 0
  98:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
  99:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 100:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 101:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         INITIALIZE THE HOST CONTROLLER
 102:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 103:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function initializes lpc17xx host controller
 104:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 105:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : None
 106:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 107:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : 
 108:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 109:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 110:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 111:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  Host_Init (void)
 112:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 113:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	USB_INT32U HostBaseAddr;
 114:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 115:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	LPC_SC->PCONP      |= (1UL<<31);
 116:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	LPC_USB->OTGClkCtrl = 0x0000001F;
 117:Libraries/USBHostLite/usbhost_lpc17xx.c ****     while ((LPC_USB->OTGClkSt & 0x0000001F) == 0) {	    /* Host clock is available */
 118:Libraries/USBHostLite/usbhost_lpc17xx.c ****         ;
 119:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 120:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	
 121:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->OTGStCtrl = 0x3;
 122:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 123:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	/* P1[18] = USB_UP_LED, 01 */
 124:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	/* P1[19] = /USB_PPWR, 	10 */
 125:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	/* P1[22] = USB_PWRD, 10 */
 126:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	/* P1[27] = /USB_OVRCR, 10 */
 127:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	LPC_PINCON->PINSEL3 &= ~((3<<4) | (3<<6) | (3<<12) | (3<<22));
 128:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	LPC_PINCON->PINSEL3 |=  ((1<<4)|(2<<6) | (2<<12) | (2<<22));   // 0x00802080
 129:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 130:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	/* P0[29] = USB_D+, 01 */
 131:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	/* P0[30] = USB_D-, 01 */
 132:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	LPC_PINCON->PINSEL1 &= ~((3<<26) | (3<<28));
 133:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	LPC_PINCON->PINSEL1 |=  ((1<<26)|(1<<28)); 	// 0x14000000
 134:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	    
 135:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	PRINT_Log("Initializing Host Stack\n");
 136:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 137:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	// For chip revision V01 and later
 138:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	/// HostBaseAddr = 0x20080000;
 139:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	HostBaseAddr = HOST_BASE_ADDRESS;
 140:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 141:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Hcca       = (volatile  HCCA       *)(HostBaseAddr+0x000);
 142:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDHead     = (volatile  HCTD       *)(HostBaseAddr+0x100);
 143:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDTail     = (volatile  HCTD       *)(HostBaseAddr+0x110);
 144:Libraries/USBHostLite/usbhost_lpc17xx.c ****     EDCtrl     = (volatile  HCED       *)(HostBaseAddr+0x120); 
 145:Libraries/USBHostLite/usbhost_lpc17xx.c ****     EDBulkIn   = (volatile  HCED       *)(HostBaseAddr+0x130);
 146:Libraries/USBHostLite/usbhost_lpc17xx.c ****     EDBulkOut  = (volatile  HCED       *)(HostBaseAddr+0x140);
 147:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDBuffer   = (volatile  USB_INT08U *)(HostBaseAddr+0x150);
 148:Libraries/USBHostLite/usbhost_lpc17xx.c ****     FATBuffer  = (volatile  USB_INT08U *)(HostBaseAddr+0x1D0);
 149:Libraries/USBHostLite/usbhost_lpc17xx.c ****     UserBuffer = (volatile  USB_INT08U *)(HostBaseAddr+0x1000);
 150:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 151:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                                               /* Initialize all the TDs, EDs and HC
 152:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_EDInit(EDCtrl);
 153:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_EDInit(EDBulkIn);
 154:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_EDInit(EDBulkOut);
 155:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_TDInit(TDHead);
 156:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_TDInit(TDTail);
 157:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_HCCAInit(Hcca);
 158:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 159:Libraries/USBHostLite/usbhost_lpc17xx.c ****     
 160:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_DelayMS(50);                                         /* Wait 50 ms before apply reset     
 161:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->HcControl       = 0;                                      /* HARDWARE RESET           
 162:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->HcControlHeadED = 0;                                      /* Initialize Control list h
 163:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->HcBulkHeadED    = 0;                                      /* Initialize Bulk list head
 164:Libraries/USBHostLite/usbhost_lpc17xx.c ****     
 165:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                                               /* SOFTWARE RESET                    
 166:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->HcCommandStatus = OR_CMD_STATUS_HCR;
 167:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->HcFmInterval    = DEFAULT_FMINTERVAL;              /* Write Fm Interval and Largest Da
 168:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 169:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                                               /* Put HC in operational state       
 170:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->HcControl  = (LPC_USB->HcControl & (~OR_CONTROL_HCFS)) | OR_CONTROL_HC_OPER;
 171:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->HcRhStatus = OR_RH_STATUS_LPSC;                           /* Set Global Power         
 172:Libraries/USBHostLite/usbhost_lpc17xx.c ****     
 173:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->HcHCCA = (USB_INT32U)Hcca;
 174:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->HcInterruptStatus |= LPC_USB->HcInterruptStatus;                   /* Clear Interrrupt
 175:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 176:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 177:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->HcInterruptEnable  = OR_INTR_ENABLE_MIE |
 178:Libraries/USBHostLite/usbhost_lpc17xx.c ****                          OR_INTR_ENABLE_WDH |
 179:Libraries/USBHostLite/usbhost_lpc17xx.c ****                          OR_INTR_ENABLE_RHSC;
 180:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 181:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 182:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 183:Libraries/USBHostLite/usbhost_lpc17xx.c ****     /* Enable the USB Interrupt */
 184:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	NVIC_EnableIRQ(USB_IRQn);               /* enable USB interrupt */
 185:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	NVIC_SetPriority (USB_IRQn, 0);			/* highest priority */
 186:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 187:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 188:Libraries/USBHostLite/usbhost_lpc17xx.c ****     PRINT_Log("Host Initialized\n");
 189:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 190:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 191:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 192:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 193:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         INTERRUPT SERVICE ROUTINE
 194:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 195:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function services the interrupt caused by host controller
 196:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 197:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : None
 198:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 199:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : None
 200:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 201:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 202:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 203:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 204:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  USB_IRQHandler (void)
 205:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 110              	209 0
 111              		ldr	r1, .L31
 112              		.loc 1 205 0
 206:Libraries/USBHostLite/usbhost_lpc17xx.c ****     USB_INT32U   int_status;
 207:Libraries/USBHostLite/usbhost_lpc17xx.c ****     USB_INT32U   ie_status;
 208:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 209:Libraries/USBHostLite/usbhost_lpc17xx.c ****     int_status    = LPC_USB->HcInterruptStatus;                          /* Read Interrupt Status  
 113              	sh	{r4, lr}
 114 0000 2149     	.LCFI2:
 115              		.loc 1 209 0
 116 0002 10B5     		ldr	r2, [r1, #12]
 117              	.LVL10:
 118              		.loc 1 210 0
 119 0004 CA68     		ldr	r3, [r1, #16]
 120              	.LVL11:
 210:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ie_status     = LPC_USB->HcInterruptEnable;                          /* Read Interrupt enable s
 121              	212 0
 122 0006 0B69     		ands	r4, r3, r2
 123              		beq	.L29
 211:Libraries/USBHostLite/usbhost_lpc17xx.c ****  
 212:Libraries/USBHostLite/usbhost_lpc17xx.c ****     if (!(int_status & ie_status)) {
 124              	oc 1 217 0
 125 0008 13EA0204 		tst	r4, #64
 126 000c 3BD0     		beq	.L15
 213:Libraries/USBHostLite/usbhost_lpc17xx.c ****         return;
 214:Libraries/USBHostLite/usbhost_lpc17xx.c ****     } else {
 215:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 216:Libraries/USBHostLite/usbhost_lpc17xx.c ****         int_status = int_status & ie_status;
 217:Libraries/USBHostLite/usbhost_lpc17xx.c ****         if (int_status & OR_INTR_STATUS_RHSC) {                 /* Root hub status change interrupt
 127              	oc 1 218 0
 128 000e 14F0400F 		ldr	r3, [r1, #84]
 129 0012 2AD0     	.LVL12:
 218:Libraries/USBHostLite/usbhost_lpc17xx.c ****             if (LPC_USB->HcRhPortStatus1 & OR_RH_PORT_CSC) {
 130              	t	r3, #65536
 131 0014 4B6D     		beq	.L17
 132              		.loc 1 219 0
 133 0016 13F4803F 		ldr	r3, [r1, #80]
 134 001a 1ED0     		tst	r3, #32768
 219:Libraries/USBHostLite/usbhost_lpc17xx.c **** 				if (LPC_USB->HcRhStatus & OR_RH_STATUS_DRWE) {
 135              	.L19
 136 001c 0B6D     		.loc 1 224 0
 137 001e 13F4004F 		ldr	r3, .L31+4
 138 0022 03D0     		movs	r2, #1
 220:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					/*
 221:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					 * When DRWE is on, Connect Status Change
 222:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					 * means a remote wakeup event.
 223:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					*/
 224:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					HOST_RhscIntr = 1;// JUST SOMETHING FOR A BREAKPOINT
 139              	13:
 140 0024 194B     		str	r2, [r3, #0]
 141 0026 0122     		b	.L21
 142              	.LVL14:
 143 0028 1A60     	.L19:
 144 002a 12E0     		.loc 1 231 0
 145              		ldr	r3, [r1, #84]
 146              		ldr	r0, .L31+8
 225:Libraries/USBHostLite/usbhost_lpc17xx.c **** 				}
 226:Libraries/USBHostLite/usbhost_lpc17xx.c **** 				else {
 227:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					/*
 228:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					 * When DRWE is off, Connect Status Change
 229:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					 * is NOT a remote wakeup event
 230:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					*/
 231:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					if (LPC_USB->HcRhPortStatus1 & OR_RH_PORT_CCS) {
 147              	, r3, #1
 148 002c 4B6D     	.LVL15:
 149 002e 1848     		beq	.L22
 150 0030 13F00102 		.loc 1 232 0
 151              		ldr	r2, [r0, #0]
 152 0034 07D0     		cbnz	r2, .L21
 232:Libraries/USBHostLite/usbhost_lpc17xx.c **** 						if (!gUSBConnected) {
 153              	1 233 0
 154 0036 0268     		ldr	r3, .L31+12
 155 0038 5AB9     		strb	r2, [r3, #0]
 233:Libraries/USBHostLite/usbhost_lpc17xx.c **** 							HOST_TDControlStatus = 0;
 156              	oc 1 234 0
 157 003a 164B     		ldr	r3, .L31+16
 158 003c 1A70     		str	r2, [r3, #0]
 234:Libraries/USBHostLite/usbhost_lpc17xx.c **** 							HOST_WdhIntr = 0;
 159              	oc 1 235 0
 160 003e 164B     		adds	r2, r2, #1
 161 0040 1A60     		b	.L30
 235:Libraries/USBHostLite/usbhost_lpc17xx.c **** 							HOST_RhscIntr = 1;
 162              	2:
 163 0042 0132     		.loc 1 241 0
 164 0044 02E0     		ldr	r3, [r0, #0]
 165              		cbz	r3, .L21
 236:Libraries/USBHostLite/usbhost_lpc17xx.c **** 							gUSBConnected = 1;
 237:Libraries/USBHostLite/usbhost_lpc17xx.c **** 						}
 238:Libraries/USBHostLite/usbhost_lpc17xx.c **** 						else
 239:Libraries/USBHostLite/usbhost_lpc17xx.c **** 							PRINT_Log("Spurious status change (connected)?\n");
 240:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					} else {
 241:Libraries/USBHostLite/usbhost_lpc17xx.c **** 						if (gUSBConnected) {
 166              	c 1 242 0
 167 0046 0368     		str	r2, [r1, #16]
 168 0048 1BB1     	.L30:
 242:Libraries/USBHostLite/usbhost_lpc17xx.c **** 							LPC_USB->HcInterruptEnable = 0; // why do we get multiple disc. rupts???
 169              	oc 1 243 0
 170 004a 0A61     		ldr	r3, .L31+4
 171              		.loc 1 244 0
 243:Libraries/USBHostLite/usbhost_lpc17xx.c **** 							HOST_RhscIntr = 0;
 172              	r	r2, [r0, #0]
 173 004c 0F4B     		.loc 1 243 0
 244:Libraries/USBHostLite/usbhost_lpc17xx.c **** 							gUSBConnected = 0;
 174              	tr	r2, [r3, #0]
 175 004e 0260     	.L21:
 176              		.loc 1 250 0
 177 0050 1A60     		ldr	r3, .L31
 178              		mov	r2, #65536
 245:Libraries/USBHostLite/usbhost_lpc17xx.c **** 						}
 246:Libraries/USBHostLite/usbhost_lpc17xx.c **** 						else
 247:Libraries/USBHostLite/usbhost_lpc17xx.c **** 							PRINT_Log("Spurious status change (disconnected)?\n");
 248:Libraries/USBHostLite/usbhost_lpc17xx.c **** 					}
 249:Libraries/USBHostLite/usbhost_lpc17xx.c ****                 }
 250:Libraries/USBHostLite/usbhost_lpc17xx.c **** 				LPC_USB->HcRhPortStatus1 = OR_RH_PORT_CSC;
 179              	r2, [r3, #84]
 180 0052 0D4B     	.LVL16:
 181 0054 4FF48032 	.L17:
 182 0058 5A65     		.loc 1 252 0
 183              		ldr	r2, .L31
 184              	.LVL17:
 251:Libraries/USBHostLite/usbhost_lpc17xx.c ****             }
 252:Libraries/USBHostLite/usbhost_lpc17xx.c ****             if (LPC_USB->HcRhPortStatus1 & OR_RH_PORT_PRSC) {
 185              	3, [r2, #84]
 186 005a 0B4A     		tst	r3, #1048576
 187              		.loc 1 253 0
 188 005c 536D     		itt	ne
 189 005e 13F4801F 		movne	r3, #1048576
 253:Libraries/USBHostLite/usbhost_lpc17xx.c ****             	LPC_USB->HcRhPortStatus1 = OR_RH_PORT_PRSC;
 190              	e	r3, [r2, #84]
 191 0062 1CBF     	.LVL18:
 192 0064 4FF48013 	.L15:
 193 0068 5365     		.loc 1 256 0
 194              		tst	r4, #2
 195              		beq	.L27
 254:Libraries/USBHostLite/usbhost_lpc17xx.c ****             }
 255:Libraries/USBHostLite/usbhost_lpc17xx.c ****         }
 256:Libraries/USBHostLite/usbhost_lpc17xx.c ****         if (int_status & OR_INTR_STATUS_WDH) {                  /* Writeback Done Head interrupt   
 196              	1 257 0
 197 006a 14F0020F 		ldr	r3, .L31+16
 198 006e 08D0     	.LVL19:
 257:Libraries/USBHostLite/usbhost_lpc17xx.c ****             HOST_WdhIntr = 1;
 199              	vs	r2, #1
 200 0070 094B     	.LVL20:
 201              		str	r2, [r3, #0]
 202 0072 0122     		.loc 1 258 0
 203              		ldr	r3, .L31+20
 204 0074 1A60     		ldr	r2, .L31+12
 258:Libraries/USBHostLite/usbhost_lpc17xx.c **** 			HOST_TDControlStatus = (TDHead->Control >> 28) & 0xf;
 205              	3, [r3, #0]
 206 0076 094B     		ldr	r3, [r3, #0]
 207 0078 064A     		lsrs	r3, r3, #28
 208 007a 1B68     		strb	r3, [r2, #0]
 209 007c 1B68     	.LVL21:
 210 007e 1B0F     	.L27:
 211 0080 1370     		.loc 1 260 0
 212              		ldr	r3, .L31
 213              	.LVL22:
 259:Libraries/USBHostLite/usbhost_lpc17xx.c ****         }            
 260:Libraries/USBHostLite/usbhost_lpc17xx.c ****         LPC_USB->HcInterruptStatus = int_status;                         /* Clear interrupt status 
 214              	[r3, #12]
 215 0082 014B     	.LVL23:
 216              	.L29:
 217 0084 DC60     		.loc 1 263 0
 218              		pop	{r4, pc}
 219              	.L32:
 261:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }           
 262:Libraries/USBHostLite/usbhost_lpc17xx.c ****     return;
 263:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 220              	n	2
 221 0086 10BD     	.L31:
 222              		.word	1342226432
 223              		.word	.LANCHOR0
 224              		.word	gUSBConnected
 225 0088 00C00050 		.word	.LANCHOR1
 226 008c 00000000 		.word	.LANCHOR2
 227 0090 00000000 		.word	TDHead
 228 0094 00000000 	.LFE34:
 230 009c 00000000 		.section	.text.Host_TDInit,"ax",%progbits
 231              		.align	2
 232              		.global	Host_TDInit
 233              		.thumb
 234              		.thumb_func
 236              	Host_TDInit:
 237              	.LFB40:
 238              		.loc 1 531 0
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 264:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 265:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 266:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 267:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                     PROCESS TRANSFER DESCRIPTOR
 268:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 269:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function processes the transfer descriptor
 270:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 271:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : ed            Endpoint descriptor that contains this transfer descriptor
 272:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              token         SETUP, IN, OUT
 273:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              buffer        Current Buffer Pointer of the transfer descriptor
 274:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              buffer_len    Length of the buffer
 275:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 276:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : OK       if TD submission is successful
 277:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              ERROR    if TD submission fails
 278:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 279:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 280:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 281:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 282:Libraries/USBHostLite/usbhost_lpc17xx.c **** USB_INT32S  Host_ProcessTD (volatile  HCED       *ed,
 283:Libraries/USBHostLite/usbhost_lpc17xx.c ****                             volatile  USB_INT32U  token,
 284:Libraries/USBHostLite/usbhost_lpc17xx.c ****                             volatile  USB_INT08U *buffer,
 285:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                       USB_INT32U  buffer_len)
 286:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 287:Libraries/USBHostLite/usbhost_lpc17xx.c ****     volatile  USB_INT32U   td_toggle;
 288:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 289:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 290:Libraries/USBHostLite/usbhost_lpc17xx.c ****     if (ed == EDCtrl) {
 291:Libraries/USBHostLite/usbhost_lpc17xx.c ****         if (token == TD_SETUP) {
 292:Libraries/USBHostLite/usbhost_lpc17xx.c ****             td_toggle = TD_TOGGLE_0;
 293:Libraries/USBHostLite/usbhost_lpc17xx.c ****         } else {
 294:Libraries/USBHostLite/usbhost_lpc17xx.c ****             td_toggle = TD_TOGGLE_1;
 295:Libraries/USBHostLite/usbhost_lpc17xx.c ****         }
 296:Libraries/USBHostLite/usbhost_lpc17xx.c ****     } else {
 297:Libraries/USBHostLite/usbhost_lpc17xx.c ****         td_toggle = 0;
 298:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 299:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDHead->Control = (TD_ROUNDING    |
 300:Libraries/USBHostLite/usbhost_lpc17xx.c ****                       token           |
 301:Libraries/USBHostLite/usbhost_lpc17xx.c ****                       TD_DELAY_INT(0) |                           
 302:Libraries/USBHostLite/usbhost_lpc17xx.c ****                       td_toggle       |
 303:Libraries/USBHostLite/usbhost_lpc17xx.c ****                       TD_CC);
 304:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDTail->Control = 0;
 305:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDHead->CurrBufPtr   = (USB_INT32U) buffer;
 306:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDTail->CurrBufPtr   = 0;
 307:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDHead->Next         = (USB_INT32U) TDTail;
 308:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDTail->Next         = 0;
 309:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDHead->BufEnd       = (USB_INT32U)(buffer + (buffer_len - 1));
 310:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDTail->BufEnd       = 0;
 311:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 312:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ed->HeadTd  = (USB_INT32U)TDHead | ((ed->HeadTd) & 0x00000002);
 313:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ed->TailTd  = (USB_INT32U)TDTail;
 314:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ed->Next    = 0;
 315:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 316:Libraries/USBHostLite/usbhost_lpc17xx.c ****     if (ed == EDCtrl) {
 317:Libraries/USBHostLite/usbhost_lpc17xx.c ****         LPC_USB->HcControlHeadED = (USB_INT32U)ed;
 318:Libraries/USBHostLite/usbhost_lpc17xx.c ****         LPC_USB->HcCommandStatus = LPC_USB->HcCommandStatus | OR_CMD_STATUS_CLF;
 319:Libraries/USBHostLite/usbhost_lpc17xx.c ****         LPC_USB->HcControl       = LPC_USB->HcControl       | OR_CONTROL_CLE;
 320:Libraries/USBHostLite/usbhost_lpc17xx.c ****     } else {
 321:Libraries/USBHostLite/usbhost_lpc17xx.c ****     	LPC_USB->HcBulkHeadED    = (USB_INT32U)ed;
 322:Libraries/USBHostLite/usbhost_lpc17xx.c ****     	LPC_USB->HcCommandStatus = LPC_USB->HcCommandStatus | OR_CMD_STATUS_BLF;
 323:Libraries/USBHostLite/usbhost_lpc17xx.c ****     	LPC_USB->HcControl       = LPC_USB->HcControl       | OR_CONTROL_BLE;
 324:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }    
 325:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 326:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_WDHWait();
 327:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 328:Libraries/USBHostLite/usbhost_lpc17xx.c **** //    if (!(TDHead->Control & 0xF0000000)) {
 329:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	if (!HOST_TDControlStatus) {
 330:Libraries/USBHostLite/usbhost_lpc17xx.c ****         return (OK);
 331:Libraries/USBHostLite/usbhost_lpc17xx.c ****     } else {      
 332:Libraries/USBHostLite/usbhost_lpc17xx.c ****         return (ERR_TD_FAIL);
 333:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 334:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 335:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 336:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 337:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 338:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                       ENUMERATE THE DEVICE
 339:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 340:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to enumerate the device connected
 341:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 342:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : None
 343:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 344:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : None
 345:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 346:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 347:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 348:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 349:Libraries/USBHostLite/usbhost_lpc17xx.c **** USB_INT32S  Host_EnumDev (void)
 350:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 351:Libraries/USBHostLite/usbhost_lpc17xx.c ****     USB_INT32S  rc;
 352:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 353:Libraries/USBHostLite/usbhost_lpc17xx.c ****     PRINT_Log("Connect a Mass Storage device\n");
 354:Libraries/USBHostLite/usbhost_lpc17xx.c ****     while (!HOST_RhscIntr);
 355:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_DelayMS(100);                             /* USB 2.0 spec says atleast 50ms delay beore po
 356:Libraries/USBHostLite/usbhost_lpc17xx.c ****     LPC_USB->HcRhPortStatus1 = OR_RH_PORT_PRS; // Initiate port reset
 357:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	while (LPC_USB->HcRhPortStatus1 & OR_RH_PORT_PRS)
 358:Libraries/USBHostLite/usbhost_lpc17xx.c **** 		; // Wait for port reset to complete...
 359:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	LPC_USB->HcRhPortStatus1 = OR_RH_PORT_PRSC; // ...and clear port reset signal
 360:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_DelayMS(200);                                                 /* Wait for 100 MS after por
 361:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 362:Libraries/USBHostLite/usbhost_lpc17xx.c ****     EDCtrl->Control = 8 << 16;                                         /* Put max pkt size = 8     
 363:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                                                        /* Read first 8 bytes of dev
 364:Libraries/USBHostLite/usbhost_lpc17xx.c ****     rc = HOST_GET_DESCRIPTOR(USB_DESCRIPTOR_TYPE_DEVICE, 0, TDBuffer, 8);
 365:Libraries/USBHostLite/usbhost_lpc17xx.c ****     if (rc != OK) {
 366:Libraries/USBHostLite/usbhost_lpc17xx.c ****         PRINT_Err(rc);
 367:Libraries/USBHostLite/usbhost_lpc17xx.c ****         return (rc);
 368:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 369:Libraries/USBHostLite/usbhost_lpc17xx.c ****     EDCtrl->Control = TDBuffer[7] << 16;                               /* Get max pkt size of endpo
 370:Libraries/USBHostLite/usbhost_lpc17xx.c ****     rc = HOST_SET_ADDRESS(1);                                          /* Set the device address to
 371:Libraries/USBHostLite/usbhost_lpc17xx.c ****     if (rc != OK) {
 372:Libraries/USBHostLite/usbhost_lpc17xx.c ****         PRINT_Err(rc);
 373:Libraries/USBHostLite/usbhost_lpc17xx.c ****         return (rc);
 374:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 375:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_DelayMS(2);
 376:Libraries/USBHostLite/usbhost_lpc17xx.c ****     EDCtrl->Control = (EDCtrl->Control) | 1;                          /* Modify control pipe with a
 377:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                                                       /* Get the configuration desc
 378:Libraries/USBHostLite/usbhost_lpc17xx.c ****     rc = HOST_GET_DESCRIPTOR(USB_DESCRIPTOR_TYPE_CONFIGURATION, 0, TDBuffer, 9);
 379:Libraries/USBHostLite/usbhost_lpc17xx.c ****     if (rc != OK) {
 380:Libraries/USBHostLite/usbhost_lpc17xx.c ****         PRINT_Err(rc);
 381:Libraries/USBHostLite/usbhost_lpc17xx.c ****         return (rc);
 382:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 383:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                                                        /* Get the first configurati
 384:Libraries/USBHostLite/usbhost_lpc17xx.c ****     rc = HOST_GET_DESCRIPTOR(USB_DESCRIPTOR_TYPE_CONFIGURATION, 0, TDBuffer, ReadLE16U(&TDBuffer[2]
 385:Libraries/USBHostLite/usbhost_lpc17xx.c ****     if (rc != OK) {
 386:Libraries/USBHostLite/usbhost_lpc17xx.c ****         PRINT_Err(rc);
 387:Libraries/USBHostLite/usbhost_lpc17xx.c ****         return (rc);
 388:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 389:Libraries/USBHostLite/usbhost_lpc17xx.c ****     rc = MS_ParseConfiguration();                                      /* Parse the configuration  
 390:Libraries/USBHostLite/usbhost_lpc17xx.c ****     if (rc != OK) {
 391:Libraries/USBHostLite/usbhost_lpc17xx.c ****         PRINT_Err(rc);
 392:Libraries/USBHostLite/usbhost_lpc17xx.c ****         return (rc);
 393:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 394:Libraries/USBHostLite/usbhost_lpc17xx.c ****     rc = USBH_SET_CONFIGURATION(1);                                    /* Select device configurati
 395:Libraries/USBHostLite/usbhost_lpc17xx.c ****     if (rc != OK) {
 396:Libraries/USBHostLite/usbhost_lpc17xx.c ****         PRINT_Err(rc);
 397:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 398:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_DelayMS(100);                                               /* Some devices may require th
 399:Libraries/USBHostLite/usbhost_lpc17xx.c ****     return (rc);
 400:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 401:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 402:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 403:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 404:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                        RECEIVE THE CONTROL INFORMATION
 405:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 406:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to receive the control information
 407:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 408:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : bm_request_type
 409:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              b_request
 410:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              w_value
 411:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              w_index
 412:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              w_length
 413:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              buffer
 414:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 415:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : OK       if Success
 416:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              ERROR    if Failed
 417:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 418:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 419:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 420:Libraries/USBHostLite/usbhost_lpc17xx.c ****    
 421:Libraries/USBHostLite/usbhost_lpc17xx.c **** USB_INT32S  Host_CtrlRecv (         USB_INT08U   bm_request_type,
 422:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                     USB_INT08U   b_request,
 423:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                     USB_INT16U   w_value,
 424:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                     USB_INT16U   w_index,
 425:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                     USB_INT16U   w_length,
 426:Libraries/USBHostLite/usbhost_lpc17xx.c ****                           volatile  USB_INT08U  *buffer)
 427:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 428:Libraries/USBHostLite/usbhost_lpc17xx.c ****     USB_INT32S  rc;
 429:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 430:Libraries/USBHostLite/usbhost_lpc17xx.c ****     (void)buffer;
 431:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 432:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_FillSetup(bm_request_type, b_request, w_value, w_index, w_length);
 433:Libraries/USBHostLite/usbhost_lpc17xx.c ****     rc = Host_ProcessTD(EDCtrl, TD_SETUP, TDBuffer, 8);
 434:Libraries/USBHostLite/usbhost_lpc17xx.c ****     if (rc == OK) {
 435:Libraries/USBHostLite/usbhost_lpc17xx.c ****         if (w_length) {
 436:Libraries/USBHostLite/usbhost_lpc17xx.c ****             rc = Host_ProcessTD(EDCtrl, TD_IN, TDBuffer, w_length);
 437:Libraries/USBHostLite/usbhost_lpc17xx.c ****         }
 438:Libraries/USBHostLite/usbhost_lpc17xx.c ****         if (rc == OK) {
 439:Libraries/USBHostLite/usbhost_lpc17xx.c ****             rc = Host_ProcessTD(EDCtrl, TD_OUT, NULL, 0);
 440:Libraries/USBHostLite/usbhost_lpc17xx.c ****         }
 441:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 442:Libraries/USBHostLite/usbhost_lpc17xx.c ****     return (rc);
 443:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 444:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 445:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 446:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 447:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         SEND THE CONTROL INFORMATION
 448:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 449:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to send the control information
 450:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 451:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : None
 452:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 453:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : OK		              if Success
 454:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              ERR_INVALID_BOOTSIG    if Failed
 455:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 456:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 457:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 458:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 459:Libraries/USBHostLite/usbhost_lpc17xx.c **** USB_INT32S  Host_CtrlSend (          USB_INT08U   bm_request_type,
 460:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                      USB_INT08U   b_request,
 461:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                      USB_INT16U   w_value,
 462:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                      USB_INT16U   w_index,
 463:Libraries/USBHostLite/usbhost_lpc17xx.c ****                                      USB_INT16U   w_length,
 464:Libraries/USBHostLite/usbhost_lpc17xx.c ****                            volatile  USB_INT08U  *buffer)
 465:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 466:Libraries/USBHostLite/usbhost_lpc17xx.c ****     USB_INT32S  rc;
 467:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 468:Libraries/USBHostLite/usbhost_lpc17xx.c ****     (void)buffer;
 469:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 470:Libraries/USBHostLite/usbhost_lpc17xx.c ****     Host_FillSetup(bm_request_type, b_request, w_value, w_index, w_length);
 471:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 472:Libraries/USBHostLite/usbhost_lpc17xx.c ****     rc = Host_ProcessTD(EDCtrl, TD_SETUP, TDBuffer, 8);
 473:Libraries/USBHostLite/usbhost_lpc17xx.c ****     if (rc == OK) {
 474:Libraries/USBHostLite/usbhost_lpc17xx.c ****         if (w_length) {
 475:Libraries/USBHostLite/usbhost_lpc17xx.c ****             rc = Host_ProcessTD(EDCtrl, TD_OUT, TDBuffer, w_length);
 476:Libraries/USBHostLite/usbhost_lpc17xx.c ****         }
 477:Libraries/USBHostLite/usbhost_lpc17xx.c ****         if (rc == OK) {
 478:Libraries/USBHostLite/usbhost_lpc17xx.c ****             rc = Host_ProcessTD(EDCtrl, TD_IN, NULL, 0);
 479:Libraries/USBHostLite/usbhost_lpc17xx.c ****         }
 480:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 481:Libraries/USBHostLite/usbhost_lpc17xx.c ****     return (rc);
 482:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 483:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 484:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 485:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 486:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                          FILL SETUP PACKET
 487:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 488:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to fill the setup packet
 489:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 490:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : None
 491:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 492:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : OK		              if Success
 493:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              ERR_INVALID_BOOTSIG    if Failed
 494:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 495:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 496:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 497:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 498:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  Host_FillSetup (USB_INT08U   bm_request_type,
 499:Libraries/USBHostLite/usbhost_lpc17xx.c ****                       USB_INT08U   b_request,
 500:Libraries/USBHostLite/usbhost_lpc17xx.c ****                       USB_INT16U   w_value,
 501:Libraries/USBHostLite/usbhost_lpc17xx.c ****                       USB_INT16U   w_index,
 502:Libraries/USBHostLite/usbhost_lpc17xx.c ****                       USB_INT16U   w_length)
 503:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 504:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	int i;
 505:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	for (i=0;i<w_length;i++)
 506:Libraries/USBHostLite/usbhost_lpc17xx.c **** 		TDBuffer[i] = 0;
 507:Libraries/USBHostLite/usbhost_lpc17xx.c **** 	
 508:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDBuffer[0] = bm_request_type;
 509:Libraries/USBHostLite/usbhost_lpc17xx.c ****     TDBuffer[1] = b_request;
 510:Libraries/USBHostLite/usbhost_lpc17xx.c ****     WriteLE16U(&TDBuffer[2], w_value);
 511:Libraries/USBHostLite/usbhost_lpc17xx.c ****     WriteLE16U(&TDBuffer[4], w_index);
 512:Libraries/USBHostLite/usbhost_lpc17xx.c ****     WriteLE16U(&TDBuffer[6], w_length);
 513:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 514:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 515:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 516:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 517:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 518:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 519:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         INITIALIZE THE TRANSFER DESCRIPTOR
 520:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 521:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function initializes transfer descriptor
 522:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 523:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : Pointer to TD structure
 524:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 525:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : None
 526:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 527:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 528:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 529:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 530:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  Host_TDInit (volatile  HCTD *td)
 531:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 241              	 eliminated.
 242              	.LVL24:
 243              		.loc 1 533 0
 244              		movs	r3, #0
 245              		str	r3, [r0, #0]
 532:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 533:Libraries/USBHostLite/usbhost_lpc17xx.c ****     td->Control    = 0;
 246              	 1 531 0
 247 0000 0023     		@ lr needed for prologue
 248 0002 0360     		.loc 1 534 0
 249              		str	r3, [r0, #4]
 250              		.loc 1 535 0
 534:Libraries/USBHostLite/usbhost_lpc17xx.c ****     td->CurrBufPtr = 0;
 251              	r3, [r0, #8]
 252 0004 4360     		.loc 1 536 0
 535:Libraries/USBHostLite/usbhost_lpc17xx.c ****     td->Next       = 0;
 253              	tr	r3, [r0, #12]
 254 0006 8360     		.loc 1 537 0
 536:Libraries/USBHostLite/usbhost_lpc17xx.c ****     td->BufEnd     = 0;
 255              	x	lr
 256 0008 C360     	.LFE40:
 537:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 257              	size	Host_TDInit, .-Host_TDInit
 258 000a 7047     		.section	.text.Host_EDInit,"ax",%progbits
 259              		.align	2
 260              		.global	Host_EDInit
 261              		.thumb
 262              		.thumb_func
 264              	Host_EDInit:
 265              	.LFB41:
 266              		.loc 1 553 0
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 538:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 539:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 540:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 541:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         INITIALIZE THE ENDPOINT DESCRIPTOR
 542:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 543:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function initializes endpoint descriptor
 544:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 545:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : Pointer to ED strcuture
 546:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 547:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : None
 548:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 549:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 550:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 551:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 552:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  Host_EDInit (volatile  HCED *ed)
 553:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 269              	ster save eliminated.
 270              	.LVL25:
 271              		.loc 1 555 0
 272              		movs	r3, #0
 273              		str	r3, [r0, #0]
 554:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 555:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ed->Control = 0;
 274              	 1 553 0
 275 0000 0023     		@ lr needed for prologue
 276 0002 0360     		.loc 1 556 0
 277              		str	r3, [r0, #4]
 278              		.loc 1 557 0
 556:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ed->TailTd  = 0;
 279              	r3, [r0, #8]
 280 0004 4360     		.loc 1 558 0
 557:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ed->HeadTd  = 0;
 281              	tr	r3, [r0, #12]
 282 0006 8360     		.loc 1 559 0
 558:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ed->Next    = 0;
 283              	x	lr
 284 0008 C360     	.LFE41:
 559:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 285              	size	Host_EDInit, .-Host_EDInit
 286 000a 7047     		.section	.text.Host_HCCAInit,"ax",%progbits
 287              		.align	2
 288              		.global	Host_HCCAInit
 289              		.thumb
 290              		.thumb_func
 292              	Host_HCCAInit:
 293              	.LFB42:
 294              		.loc 1 575 0
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 560:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 561:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 562:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 563:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                 INITIALIZE HOST CONTROLLER COMMUNICATIONS AREA
 564:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 565:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function initializes host controller communications area
 566:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 567:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : Pointer to HCCA
 568:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 569:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : 
 570:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 571:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 572:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 573:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 574:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  Host_HCCAInit (volatile  HCCA  *hcca)
 575:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 297              	ster save eliminated.
 298              	.LVL26:
 299              		@ lr needed for prologue
 300              		.loc 1 575 0
 301              		movs	r2, #0
 302              	.LVL27:
 303              	.L38:
 304 0000 0022     		.loc 1 581 0
 305              		movs	r3, #0
 306              		str	r3, [r0, r2, lsl #2]
 576:Libraries/USBHostLite/usbhost_lpc17xx.c ****     USB_INT32U  i;
 577:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 578:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 579:Libraries/USBHostLite/usbhost_lpc17xx.c ****     for (i = 0; i < 32; i++) {
 580:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 581:Libraries/USBHostLite/usbhost_lpc17xx.c ****         hcca->IntTable[i] = 0;
 307              	9 0
 308 0002 0023     		adds	r2, r2, #1
 309 0004 40F82230 		cmp	r2, #32
 310              		.loc 1 582 0
 311 0008 0132     		str	r3, [r0, #128]
 312 000a 202A     		.loc 1 583 0
 582:Libraries/USBHostLite/usbhost_lpc17xx.c ****         hcca->FrameNumber = 0;
 313              	3, [r0, #132]
 314 000c C0F88030 		.loc 1 579 0
 583:Libraries/USBHostLite/usbhost_lpc17xx.c ****         hcca->DoneHead    = 0;
 315              	ne	.L38
 316 0010 C0F88430 		.loc 1 586 0
 317              		bx	lr
 318 0014 F5D1     	.LFE42:
 584:Libraries/USBHostLite/usbhost_lpc17xx.c ****     }
 585:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 586:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 319              	ze	Host_HCCAInit, .-Host_HCCAInit
 320 0016 7047     		.section	.text.Host_Init,"ax",%progbits
 321              		.align	2
 322              		.global	Host_Init
 323              		.thumb
 324              		.thumb_func
 326              	Host_Init:
 327              	.LFB33:
 328              		.loc 1 112 0
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		.loc 1 115 0
 332              		ldr	r2, .L45
 333              		.loc 1 112 0
 334              		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 335 0000 404A     	.LCFI3:
 336              		.loc 1 115 0
 337 0002 2DE9F047 		ldr	r3, [r2, #196]
 338              		orr	r3, r3, #-2147483648
 339              		str	r3, [r2, #196]
 340 0006 D2F8C430 		.loc 1 116 0
 341 000a 43F00043 		ldr	r3, .L45+4
 342 000e C2F8C430 		movs	r2, #31
 343              		str	r2, [r3, #4084]
 344 0012 3D4B     	.L42:
 345 0014 1F22     		.loc 1 117 0
 346 0016 C3F8F42F 		ldr	r7, .L45+4
 347              		ldr	r3, [r7, #4088]
 348              		tst	r3, #31
 349 001a 3B4F     		beq	.L42
 350 001c D7F8F83F 		.loc 1 127 0
 351 0020 13F01F0F 		ldr	r2, .L45+8
 352 0024 F9D0     		.loc 1 121 0
 353              		movs	r3, #3
 354 0026 394A     		str	r3, [r7, #272]
 355              		.loc 1 127 0
 356 0028 0323     		ldr	r1, [r2, #12]
 357 002a C7F81031 		ldr	r3, .L45+12
 358              		.loc 1 141 0
 359 002e D168     		ldr	r6, .L45+16
 360 0030 374B     		.loc 1 127 0
 361              		and	r3, r1, r3
 362 0032 384E     		str	r3, [r2, #12]
 363              		.loc 1 128 0
 364 0034 01EA0303 		ldr	r1, [r2, #12]
 365 0038 D360     		ldr	r3, .L45+20
 366              		.loc 1 142 0
 367 003a D168     		ldr	r9, .L45+76
 368 003c 364B     		.loc 1 128 0
 369              		orr	r3, r1, r3
 370 003e DFF81091 		str	r3, [r2, #12]
 371              		.loc 1 132 0
 372 0042 41EA0303 		ldr	r3, [r2, #4]
 373 0046 D360     		.loc 1 143 0
 374              		ldr	r8, .L45+80
 375 0048 5368     		.loc 1 132 0
 376              		bic	r3, r3, #1006632960
 377 004a DFF80881 		str	r3, [r2, #4]
 378              		.loc 1 133 0
 379 004e 23F07053 		ldr	r3, [r2, #4]
 380 0052 5360     		.loc 1 144 0
 381              		ldr	r0, .L45+24
 382 0054 5368     		.loc 1 133 0
 383              		orr	r3, r3, #335544320
 384 0056 3148     		str	r3, [r2, #4]
 385              		.loc 1 141 0
 386 0058 43F0A053 		ldr	r3, .L45+28
 387 005c 5360     		.loc 1 145 0
 388              		ldr	r5, .L45+32
 389 005e 304B     		.loc 1 141 0
 390              		str	r3, [r6, #0]
 391 0060 304D     		.loc 1 142 0
 392              		add	r3, r3, #256
 393 0062 3360     		str	r3, [r9, #0]
 394              		.loc 1 143 0
 395 0064 03F58073 		adds	r3, r3, #16
 396 0068 C9F80030 		str	r3, [r8, #0]
 397              		.loc 1 144 0
 398 006c 1033     		ldr	r3, .L45+36
 399 006e C8F80030 		.loc 1 146 0
 400              		ldr	r4, .L45+40
 401 0072 2D4B     		.loc 1 144 0
 402              		str	r0, [r3, #0]
 403 0074 2D4C     		.loc 1 145 0
 404              		ldr	r3, .L45+44
 405 0076 1860     		.loc 1 147 0
 406              		ldr	r2, .L45+48
 407 0078 2D4B     		.loc 1 145 0
 408              		str	r3, [r5, #0]
 409 007a 2E4A     		.loc 1 146 0
 410              		adds	r3, r3, #16
 411 007c 2B60     		str	r3, [r4, #0]
 412              		.loc 1 147 0
 413 007e 1033     		ldr	r3, .L45+52
 414 0080 2360     		str	r2, [r3, #0]
 415              		.loc 1 148 0
 416 0082 2D4B     		ldr	r3, .L45+56
 417 0084 1A60     		adds	r2, r2, #128
 418              		str	r2, [r3, #0]
 419 0086 2D4B     		.loc 1 149 0
 420 0088 8032     		ldr	r3, .L45+60
 421 008a 1A60     		add	r2, r2, #3632
 422              		str	r2, [r3, #0]
 423 008c 2C4B     		.loc 1 152 0
 424 008e 02F56362 		bl	Host_EDInit
 425 0092 1A60     		.loc 1 153 0
 426              		ldr	r0, [r5, #0]
 427 0094 FFF7FEFF 		bl	Host_EDInit
 428              		.loc 1 154 0
 429 0098 2868     		ldr	r0, [r4, #0]
 430 009a FFF7FEFF 		bl	Host_EDInit
 431              		.loc 1 155 0
 432 009e 2068     		ldr	r0, [r9, #0]
 433 00a0 FFF7FEFF 		bl	Host_TDInit
 434              		.loc 1 156 0
 435 00a4 D9F80000 		ldr	r0, [r8, #0]
 436 00a8 FFF7FEFF 		bl	Host_TDInit
 437              		.loc 1 157 0
 438 00ac D8F80000 		ldr	r0, [r6, #0]
 439 00b0 FFF7FEFF 		bl	Host_HCCAInit
 440              		.loc 1 160 0
 441 00b4 3068     		movs	r0, #50
 442 00b6 FFF7FEFF 		bl	Host_DelayMS
 443              		.loc 1 161 0
 444 00ba 3220     		movs	r1, #0
 445 00bc FFF7FEFF 		.loc 1 166 0
 446              		movs	r3, #1
 447 00c0 0021     		.loc 1 161 0
 448              		str	r1, [r7, #4]
 449 00c2 0123     		.loc 1 162 0
 450              		str	r1, [r7, #32]
 451 00c4 7960     		.loc 1 163 0
 452              		str	r1, [r7, #40]
 453 00c6 3962     		.loc 1 166 0
 454              		str	r3, [r7, #8]
 455 00c8 B962     		.loc 1 167 0
 456              		ldr	r3, .L45+64
 457 00ca BB60     		str	r3, [r7, #52]
 458              		.loc 1 170 0
 459 00cc 1D4B     		ldr	r3, [r7, #4]
 460 00ce 7B63     		bic	r3, r3, #192
 461              		orr	r3, r3, #128
 462 00d0 7B68     		str	r3, [r7, #4]
 463 00d2 23F0C003 		.loc 1 171 0
 464 00d6 43F08003 		mov	r3, #65536
 465 00da 7B60     		str	r3, [r7, #80]
 466              		.loc 1 173 0
 467 00dc 4FF48033 		ldr	r3, [r6, #0]
 468 00e0 3B65     		str	r3, [r7, #24]
 469              		.loc 1 174 0
 470 00e2 3368     		ldr	r2, [r7, #12]
 471 00e4 BB61     		ldr	r3, [r7, #12]
 472              		orrs	r3, r3, r2
 473 00e6 FA68     		str	r3, [r7, #12]
 474 00e8 FB68     		.loc 1 177 0
 475 00ea 1343     		ldr	r3, .L45+68
 476 00ec FB60     	.LBB6:
 477              	.LBB7:
 478 00ee 164B     		.file 2 "./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h"
 479              		.loc 2 1504 0
 480              		ldr	r2, .L45+72
 481              	.LBE7:
   1:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
   7:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
  10:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
  15:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
  22:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  24:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  27:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
  29:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  34:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  38:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  42:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  46:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  50:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  54:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * .
  58:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
  60:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
  61:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  62:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  71:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  72:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
  78:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
  79:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  80:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
  83:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  84:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  88:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  90:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  92:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
  95:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  96:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
  97:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 100:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 101:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 102:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 103:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 104:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 105:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 107:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 109:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 110:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #else
 113:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 115:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 118:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 119:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 120:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  @{
 125:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** */
 126:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 127:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 128:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 131:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 132:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 134:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];
 136:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];
 138:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];
 140:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];
 142:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];
 144:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];
 146:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;
 148:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 150:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 151:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 154:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 155:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 157:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } SCB_Type;
 177:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 178:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 182:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 185:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 188:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 191:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 195:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 198:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 201:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 204:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 207:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 210:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 213:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 216:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 219:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 222:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 226:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 229:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 233:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 236:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 239:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 242:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 245:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 248:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 251:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 255:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 258:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 261:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 265:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 268:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 271:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 274:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 277:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 280:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 284:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 287:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 290:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 293:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 296:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 299:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 302:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 305:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 308:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 311:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 314:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 317:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 320:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 323:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 327:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 330:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 333:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 337:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 340:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 343:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 347:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 350:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 353:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 356:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 360:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 361:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 364:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 365:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 367:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 373:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 377:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 380:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 383:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 386:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 390:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 394:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 398:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 401:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 405:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 406:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 409:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 410:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 412:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __O  union
 413:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   {
 414:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];
 419:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];
 421:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];
 423:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];
 425:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];
 429:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];
 432:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } ITM_Type;
 445:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 446:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 450:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 454:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 457:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 460:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 463:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 466:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 469:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 472:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 475:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 479:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 483:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 487:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 491:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 494:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 498:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 499:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 502:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 503:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 505:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #else
 510:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 512:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 514:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 518:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 522:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 525:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 529:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 530:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 534:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 535:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 537:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } MPU_Type;
 549:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 550:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 554:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 557:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 560:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 564:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 567:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 570:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 574:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 578:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 581:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 584:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 588:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 591:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 594:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 597:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 600:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 603:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 606:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 609:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 612:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 614:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 615:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 616:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   @{
 619:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 620:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 622:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 628:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 632:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 635:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 638:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 641:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 644:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 647:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 650:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 653:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 656:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 659:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 662:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 665:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 669:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 672:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 676:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 679:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 682:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 685:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 688:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 691:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 694:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 697:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 700:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 703:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 706:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 709:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 713:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 714:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 722:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 729:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 733:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 734:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 736:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 737:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 741:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 745:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 749:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 753:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 757:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
 758:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 759:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 760:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 762:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 765:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 768:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 784:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 785:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 790:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 791:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 792:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 794:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 796:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 798:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 800:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 801:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 803:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 805:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 808:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 810:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 811:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 813:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 815:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 818:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 820:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 821:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 823:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 825:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 828:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 830:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 831:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 833:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 836:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 838:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 840:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 841:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 843:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 846:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 848:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 850:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 851:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 853:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 854:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 856:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 858:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 860:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 861:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 863:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 865:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 867:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 869:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 870:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 872:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 874:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 876:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 878:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 879:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 881:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 883:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 885:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 887:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 888:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 890:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 892:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 894:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 896:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 897:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 899:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 901:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 903:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 905:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 906:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 908:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 910:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 912:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 914:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 915:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 917:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 919:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 921:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 923:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 924:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 926:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 928:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 930:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 932:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 934:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 935:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 937:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 939:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 941:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 942:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 944:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 946:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 948:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 950:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
 953:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 954:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 955:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 957:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 959:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 961:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 963:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
 966:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 967:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 968:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 970:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 972:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 974:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 976:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
 979:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 980:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 981:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 983:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 985:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
 987:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
 989:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
 992:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
 993:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
 994:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 996:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
 998:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1000:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1002:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1005:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1006:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1007:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1009:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1011:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1013:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1015:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1018:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1019:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1020:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1022:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1024:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1026:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1028:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1031:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1032:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1033:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1035:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1037:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1039:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1041:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1044:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1045:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1047:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1048:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1049:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1052:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1055:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1058:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1064:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1076:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1077:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1078:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1080:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1082:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1084:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1086:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1087:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1089:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1091:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1094:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1096:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1097:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1099:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1101:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1104:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1106:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1107:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1109:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1111:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1114:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1116:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1117:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1119:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1122:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1124:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1126:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1127:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1129:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1132:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1134:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1136:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1137:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1139:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1142:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1144:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1146:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1147:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1149:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1152:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1154:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1156:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1157:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1159:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1162:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1164:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1166:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1167:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1169:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1173:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1175:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1177:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1178:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1180:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1184:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1186:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1188:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1189:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1191:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1195:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1197:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1199:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1200:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1201:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1204:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1207:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1210:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1219:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1220:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1221:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1223:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1225:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1227:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1229:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1230:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1232:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1234:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1237:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1239:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1240:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1242:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1244:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1247:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1249:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1250:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1252:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1254:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1257:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1259:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1260:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1262:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1264:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1266:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1268:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1269:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1271:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1273:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1275:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1277:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1278:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1280:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1282:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1284:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1286:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1287:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1289:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1291:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1293:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1295:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1296:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1298:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1300:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1302:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1304:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1305:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1307:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1309:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1311:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1313:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1314:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** *
1316:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1318:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1320:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1322:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1323:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1325:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1327:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1329:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1331:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1332:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1334:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1337:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1339:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1341:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1342:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1344:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1347:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1349:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1351:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1352:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1354:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1357:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1359:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1361:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1362:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1364:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1367:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1369:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1371:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1372:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1374:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1377:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1379:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1381:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1382:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1384:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1387:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1389:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1391:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1392:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1394:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1397:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1399:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1401:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1402:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1404:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1408:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1410:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1412:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1413:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1415:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1419:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1421:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1423:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1424:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1426:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1430:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1432:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1434:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1435:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1438:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*
1439:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1443:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1444:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** #endif
1445:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1446:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1447:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** */
1453:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1455:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1457:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1458:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1460:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1462:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1468:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1470:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1473:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1480:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1481:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1482:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1484:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field
1485:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1486:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1489:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1491:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1493:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1494:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1495:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1497:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1499:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1502:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1504:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 482              	2, #792]
 483 00f0 164A     	.LBE11:
 484              	.LBE10:
 485              		.loc 1 189 0
 486              		pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 487 00f2 3B61     	.L46:
 488              		.align	2
 489              	.L45:
 490              		.word	1074774016
 491 00f4 4FF08073 		.word	1342226432
 492 00f8 1360     		.word	1073922048
 493              		.word	-12595441
 494              		.word	Hcca
 495              		.word	8396944
 496              		.word	537379104
1505:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1506:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1507:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1508:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1510:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1512:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1515:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1517:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1519:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1520:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1521:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1523:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1526:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending,
1527:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * otherwise it returns 0
1528:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1529:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1530:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1531:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1533:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1534:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1535:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1537:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1539:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1542:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1544:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1546:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1547:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1548:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1550:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1552:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Clear the pending bit for the specified interrupt.
1553:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1555:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1557:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1559:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1560:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1561:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1563:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1566:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active,
1567:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * otherwise it returns 0.
1568:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1569:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1571:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** }
1573:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** 
1574:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** /**
1575:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1577:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * @param  priority  The priority to set
1579:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1580:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt
1581:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * number can be positive to specify an external (device specific)
1582:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  *
1584:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****  */
1586:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1587:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h **** {
1588:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   if(IRQn < 0) {
1589:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1590:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****   else {
1591:./Libraries/NXP/Core/CM3/CoreSupport/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 497              	6
 498 00fa 82F81813 		.word	EDBulkIn
 499              		.word	EDCtrl
 500              		.word	EDBulkOut
 501              		.word	537379120
 502 00fe BDE8F087 		.word	537379152
 503              		.word	TDBuffer
 504 0102 C046     		.word	FATBuffer
 505              		.word	UserBuffer
 506 0104 00C00F40 		.word	662187743
 507 0108 00C00050 		.word	-2147483582
 508 010c 00C00240 		.word	-536813312
 509 0110 0FCF3FFF 		.word	TDHead
 510 0114 00000000 		.word	TDTail
 511 0118 90208000 	.LFE33:
 513 0120 00C00720 		.section	.text.Host_WDHWait,"ax",%progbits
 514 0124 00000000 		.align	2
 515 0128 00000000 		.global	Host_WDHWait
 516 012c 00000000 		.thumb
 517 0130 30C10720 		.thumb_func
 519 0138 00000000 	Host_WDHWait:
 520 013c 00000000 	.LFB43:
 521 0140 00000000 		.loc 1 602 0
 522 0144 DF2E7827 		@ args = 0, pretend = 0, frame = 0
 523 0148 42000080 		@ frame_needed = 0, uses_anonymous_args = 0
 524 014c 00E100E0 		@ link register save eliminated.
 525 0150 00000000 		@ lr needed for prologue
 526 0154 00000000 	.L49:
 527              		.loc 1 603 0
 528              		ldr	r2, .L52
 529              		ldr	r3, [r2, #0]
 530              		cmp	r3, #0
 531              		beq	.L49
 532              		.loc 1 606 0
 533              		movs	r3, #0
 534              		str	r3, [r2, #0]
 535              		.loc 1 607 0
 536              		bx	lr
 587:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 588:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 589:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 590:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         WAIT FOR WDH INTERRUPT
 591:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 592:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is infinite loop which breaks when ever a WDH interrupt rises
 593:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 594:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : None
 595:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 596:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : None
 597:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 598:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 599:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 600:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 601:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  Host_WDHWait (void)
 602:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 537              	LFE43:
 539              		.section	.text.Host_ProcessTD,"ax",%progbits
 540              		.align	2
 541              		.global	Host_ProcessTD
 542              		.thumb
 603:Libraries/USBHostLite/usbhost_lpc17xx.c ****   while (!HOST_WdhIntr) {
 543              	b_func
 545 0002 1368     	Host_ProcessTD:
 546 0004 002B     	.LFB35:
 547 0006 FBD0     		.loc 1 286 0
 604:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ;
 605:Libraries/USBHostLite/usbhost_lpc17xx.c ****   }
 606:Libraries/USBHostLite/usbhost_lpc17xx.c ****   HOST_WdhIntr = 0;
 548              	gs = 0, pretend = 0, frame = 16
 549 0008 0023     		@ frame_needed = 0, uses_anonymous_args = 0
 550 000a 1360     	.LVL28:
 607:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 551              	sh	{r0, r1, r2, r3, r4, r5, r6, lr}
 552 000c 7047     	.LCFI4:
 553              	.LVL29:
 554 000e C046     		.loc 1 286 0
 555              		mov	lr, r3
 556 0010 00000000 	.LVL30:
 557              		.loc 1 290 0
 558              		ldr	r3, .L69
 559              	.LVL31:
 560              		.loc 1 286 0
 561              		mov	r4, r0
 562              	.LVL32:
 563              		.loc 1 290 0
 564              		ldr	r6, [r3, #0]
 565              		.loc 1 286 0
 566              		str	r1, [sp, #4]
 567              	.LVL33:
 568              		.loc 1 290 0
 569              		cmp	r0, r6
 570              		.loc 1 286 0
 571 0000 7FB5     		mov	r5, r2
 572              	.LVL34:
 573              		.loc 1 290 0
 574              		bne	.L55
 575 0002 9E46     	.LVL35:
 576              		.loc 1 291 0
 577              		ldr	r3, [sp, #4]
 578 0004 274B     		cbnz	r3, .L57
 579              		.loc 1 292 0
 580              		add	r3, r3, #33554432
 581 0006 0446     		b	.L67
 582              	.L57:
 583              		.loc 1 294 0
 584 0008 1E68     		mov	r3, #50331648
 585              		b	.L67
 586 000a 0191     	.L55:
 587              		.loc 1 297 0
 588              		movs	r3, #0
 589 000c B042     	.L67:
 590              		str	r3, [sp, #12]
 591 000e 1546     	.LVL36:
 592              		.loc 1 299 0
 593              		ldr	r3, .L69+4
 594 0010 07D1     		.loc 1 304 0
 595              		movs	r0, #0
 596              	.LVL37:
 597 0012 019B     		.loc 1 299 0
 598 0014 13B9     		ldr	r1, [r3, #0]
 599              		ldr	r3, [sp, #4]
 600 0016 03F10073 		ldr	r2, [sp, #12]
 601 001a 03E0     		orrs	r3, r3, r2
 602              		orr	r3, r3, #-268435456
 603              		orr	r3, r3, #262144
 604 001c 4FF04073 		str	r3, [r1, #0]
 605 0020 00E0     		.loc 1 304 0
 606              		ldr	r3, .L69+8
 607              		ldr	r2, [r3, #0]
 608 0022 0023     		.loc 1 309 0
 609              		subs	r3, r5, #1
 610 0024 0393     		add	r3, r3, lr
 611              		.loc 1 304 0
 612              		str	r0, [r2, #0]
 613 0026 204B     		.loc 1 305 0
 614              		str	r5, [r1, #4]
 615 0028 0020     		.loc 1 306 0
 616              		str	r0, [r2, #4]
 617              		.loc 1 307 0
 618 002a 1968     		str	r2, [r1, #8]
 619 002c 019B     		.loc 1 308 0
 620 002e 039A     		str	r0, [r2, #8]
 621 0030 1343     		.loc 1 309 0
 622 0032 43F07043 		str	r3, [r1, #12]
 623 0036 43F48023 		.loc 1 310 0
 624 003a 0B60     		str	r0, [r2, #12]
 625              		.loc 1 312 0
 626 003c 1B4B     		ldr	r3, [r4, #8]
 627 003e 1A68     		and	r3, r3, #2
 628              		orrs	r1, r1, r3
 629 0040 6B1E     		.loc 1 316 0
 630 0042 7344     		cmp	r4, r6
 631              		.loc 1 312 0
 632 0044 1060     		str	r1, [r4, #8]
 633              		.loc 1 313 0
 634 0046 4D60     		str	r2, [r4, #4]
 635              		.loc 1 314 0
 636 0048 5060     		str	r0, [r4, #12]
 637              		.loc 1 316 0
 638 004a 8A60     		bne	.L60
 639              		.loc 1 317 0
 640 004c 9060     		ldr	r3, .L69+12
 641              		str	r4, [r3, #32]
 642 004e CB60     		.loc 1 318 0
 643              		ldr	r2, [r3, #8]
 644 0050 D060     		orr	r2, r2, #2
 645              		str	r2, [r3, #8]
 646 0052 A368     		.loc 1 319 0
 647 0054 03F00203 		ldr	r2, [r3, #4]
 648 0058 1943     		orr	r2, r2, #16
 649              		b	.L68
 650 005a B442     	.L60:
 651              		.loc 1 321 0
 652 005c A160     		ldr	r3, .L69+12
 653              		str	r4, [r3, #40]
 654 005e 6260     		.loc 1 322 0
 655              		ldr	r2, [r3, #8]
 656 0060 E060     		orr	r2, r2, #4
 657              		str	r2, [r3, #8]
 658 0062 09D1     		.loc 1 323 0
 659              		ldr	r2, [r3, #4]
 660 0064 124B     		orr	r2, r2, #32
 661 0066 1C62     	.L68:
 662              		str	r2, [r3, #4]
 663 0068 9A68     		.loc 1 326 0
 664 006a 42F00202 		bl	Host_WDHWait
 665 006e 9A60     	.LVL38:
 666              		.loc 1 329 0
 667 0070 5A68     		ldr	r3, .L69+16
 668 0072 42F01002 		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 669 0076 08E0     		.loc 1 334 0
 670              		cmp	r0, #0
 671              		ite	ne
 672 0078 0D4B     		movne	r0, #-1
 673 007a 9C62     		moveq	r0, #0
 674              		add	sp, sp, #16
 675 007c 9A68     		pop	{r4, r5, r6, pc}
 676 007e 42F00402 	.L70:
 677 0082 9A60     		.align	2
 678              	.L69:
 679 0084 5A68     		.word	EDCtrl
 680 0086 42F02002 		.word	TDHead
 681              		.word	TDTail
 682 008a 5A60     		.word	1342226432
 683              		.word	.LANCHOR1
 684 008c FFF7FEFF 	.LFE35:
 686              		.section	.text.ReadLE32U,"ax",%progbits
 687 0090 084B     		.align	2
 688 0092 1878     		.global	ReadLE32U
 689              		.thumb
 690 0094 0028     		.thumb_func
 692 0098 4FF0FF30 	ReadLE32U:
 693 009c 0020     	.LFB44:
 694 009e 04B0     		.loc 1 624 0
 695 00a0 70BD     		@ args = 0, pretend = 0, frame = 8
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697 00a2 C046     		@ link register save eliminated.
 698              	.LVL39:
 699 00a4 00000000 		.loc 1 627 0
 700 00a8 00000000 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 701 00ac 00000000 		.loc 1 624 0
 702 00b0 00C00050 		sub	sp, sp, #8
 703 00b4 00000000 	.LCFI5:
 704              		.loc 1 627 0
 705              		strb	r3, [sp, #4]
 706              		.loc 1 628 0
 707              		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 708              		.loc 1 624 0
 709              		@ lr needed for prologue
 710              		.loc 1 628 0
 711              		strb	r3, [sp, #5]
 712              		.loc 1 629 0
 713              		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 608:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 609:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 610:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 611:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         READ LE 32U
 612:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 613:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to read an unsigned integer from a charecter buffer in the pla
 614:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              containing little endian processor
 615:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 616:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : pmem    Pointer to the charecter buffer
 617:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 618:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : val     Unsigned integer
 619:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 620:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 621:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 622:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 623:Libraries/USBHostLite/usbhost_lpc17xx.c **** USB_INT32U  ReadLE32U (volatile  USB_INT08U  *pmem)
 624:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 714              	size	ReadLE32U, .-ReadLE32U
 715              		.section	.text.WriteLE32U,"ax",%progbits
 716              		.align	2
 717              		.global	WriteLE32U
 718              		.thumb
 625:Libraries/USBHostLite/usbhost_lpc17xx.c ****     USB_INT32U   val;
 626:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 627:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[0] = pmem[0];
 719              	mb_func
 721              	WriteLE32U:
 722 0002 82B0     	.LFB45:
 723              		.loc 1 652 0
 724              		@ args = 0, pretend = 0, frame = 8
 725 0004 8DF80430 		@ frame_needed = 0, uses_anonymous_args = 0
 628:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[1] = pmem[1];
 726              	 register save eliminated.
 727 0008 4378     	.LVL41:
 728              		sub	sp, sp, #8
 729              	.LCFI6:
 730              		str	r1, [sp, #4]
 731 000a 8DF80530 		.loc 1 653 0
 629:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[2] = pmem[2];
 732              	r3, [sp, #4]	@ zero_extendqisi2
 733 000e 8378     		.loc 1 652 0
 734 0010 8DF80630 		@ lr needed for prologue
 630:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[3] = pmem[3];
 735              	oc 1 653 0
 736 0014 C378     		strb	r3, [r0, #0]
 737 0016 8DF80730 		.loc 1 654 0
 631:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 632:Libraries/USBHostLite/usbhost_lpc17xx.c ****     return (val);
 633:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 738              	rb	r3, [sp, #5]	@ zero_extendqisi2
 739 001a 0198     		strb	r3, [r0, #1]
 740              		.loc 1 655 0
 741 001c 02B0     		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 742 001e 7047     		strb	r3, [r0, #2]
 743              		.loc 1 656 0
 744              		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 745              		strb	r3, [r0, #3]
 746              		.loc 1 657 0
 747              		add	sp, sp, #8
 748              		bx	lr
 749              	.LFE45:
 751              		.section	.text.ReadLE16U,"ax",%progbits
 752              		.align	2
 634:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 635:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 636:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 637:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                        WRITE LE 32U
 638:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 639:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to write an unsigned integer into a charecter buffer in the pl
 640:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              containing little endian processor.
 641:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 642:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : pmem    Pointer to the charecter buffer
 643:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              val     Integer value to be placed in the charecter buffer
 644:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 645:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : None
 646:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 647:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 648:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 649:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 650:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  WriteLE32U (volatile  USB_INT08U  *pmem,
 651:Libraries/USBHostLite/usbhost_lpc17xx.c ****                             USB_INT32U   val)
 652:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 753              	16U
 754              		.thumb
 755              		.thumb_func
 757              	ReadLE16U:
 758 0000 82B0     	.LFB46:
 759              		.loc 1 674 0
 760 0002 0191     		@ args = 0, pretend = 0, frame = 8
 653:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[0] = ((USB_INT08U *)&val)[0];
 761              	_needed = 0, uses_anonymous_args = 0
 762 0004 9DF80430 		@ link register save eliminated.
 763              	.LVL42:
 764              		.loc 1 677 0
 765              		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 766 0008 0370     		.loc 1 674 0
 654:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[1] = ((USB_INT08U *)&val)[1];
 767              	p, sp, #8
 768 000a 9DF80530 	.LCFI7:
 769 000e 4370     		.loc 1 677 0
 655:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[2] = ((USB_INT08U *)&val)[2];
 770              	rb	r3, [sp, #6]
 771 0010 9DF80630 		.loc 1 678 0
 772 0014 8370     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 656:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[3] = ((USB_INT08U *)&val)[3];
 773              	oc 1 674 0
 774 0016 9DF80730 		@ lr needed for prologue
 775 001a C370     		.loc 1 678 0
 657:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 776              	rb	r3, [sp, #7]
 777 001c 02B0     		.loc 1 682 0
 778 001e 7047     		ldrh	r0, [sp, #6]
 779              	.LVL43:
 780              		add	sp, sp, #8
 781              		bx	lr
 782              	.LFE46:
 784              		.section	.text.WriteLE16U,"ax",%progbits
 785              		.align	2
 786              		.global	WriteLE16U
 787              		.thumb
 788              		.thumb_func
 658:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 659:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 660:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 661:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                          READ LE 16U
 662:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 663:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to read an unsigned short integer from a charecter buffer in t
 664:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              containing little endian processor
 665:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 666:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : pmem    Pointer to the charecter buffer
 667:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 668:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : val     Unsigned short integer
 669:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 670:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 671:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 672:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 673:Libraries/USBHostLite/usbhost_lpc17xx.c **** USB_INT16U  ReadLE16U (volatile  USB_INT08U  *pmem)
 674:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 789              	E16U, %function
 790              	WriteLE16U:
 791              	.LFB47:
 792              		.loc 1 701 0
 793              		@ args = 0, pretend = 0, frame = 8
 675:Libraries/USBHostLite/usbhost_lpc17xx.c ****     USB_INT16U   val;
 676:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 677:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[0] = pmem[0];
 794              	ame_needed = 0, uses_anonymous_args = 0
 795 0000 0378     		@ link register save eliminated.
 796              	.LVL44:
 797 0002 82B0     		sub	sp, sp, #8
 798              	.LCFI8:
 799              		strh	r1, [sp, #6]	@ movhi
 800 0004 8DF80630 		.loc 1 702 0
 678:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[1] = pmem[1];
 801              	3, [sp, #6]	@ zero_extendqisi2
 802 0008 4378     		.loc 1 701 0
 803              		@ lr needed for prologue
 804              		.loc 1 702 0
 805              		strb	r3, [r0, #0]
 806 000a 8DF80730 		.loc 1 703 0
 679:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 680:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 681:Libraries/USBHostLite/usbhost_lpc17xx.c ****     return (val);
 682:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 807              	r3, [sp, #7]	@ zero_extendqisi2
 808 000e BDF80600 		strb	r3, [r0, #1]
 809              		.loc 1 704 0
 810 0012 02B0     		add	sp, sp, #8
 811 0014 7047     		bx	lr
 812              	.LFE47:
 814 0016 C046     		.section	.text.Host_FillSetup,"ax",%progbits
 815              		.align	2
 816              		.global	Host_FillSetup
 817              		.thumb
 818              		.thumb_func
 820              	Host_FillSetup:
 821              	.LFB39:
 683:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 684:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 685:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 686:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         WRITE LE 16U
 687:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 688:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to write an unsigned short integer into a charecter buffer in 
 689:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              platform containing little endian processor
 690:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 691:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : pmem    Pointer to the charecter buffer
 692:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              val     Value to be placed in the charecter buffer
 693:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 694:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : None
 695:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 696:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 697:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 698:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 699:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  WriteLE16U (volatile  USB_INT08U  *pmem,
 700:Libraries/USBHostLite/usbhost_lpc17xx.c ****                             USB_INT16U   val)
 701:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 822              	@ args = 4, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              	.LVL45:
 825              		push	{r4, r5, r6, lr}
 826              	.LCFI9:
 827 0000 82B0     		.loc 1 503 0
 828              		mov	ip, r2
 829 0002 ADF80610 		mov	r6, r3
 702:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[0] = ((USB_INT08U *)&val)[0];
 830              	, [sp, #16]
 831 0006 9DF80630 	.LVL46:
 832              		mov	lr, #0
 833              	.LVL47:
 834              		.loc 1 505 0
 835 000a 0370     		b	.L80
 703:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[1] = ((USB_INT08U *)&val)[1];
 836              	:
 837 000c 9DF80730 	.L81:
 838 0010 4370     		.loc 1 506 0
 704:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 839              	r	r2, [r4, #0]
 840 0012 02B0     		movs	r3, #0
 841 0014 7047     		strb	r3, [lr, r2]
 842              		.loc 1 505 0
 843              		add	lr, lr, #1
 844 0016 C046     	.LVL49:
 845              	.L80:
 846              		cmp	lr, r5
 847              		ldr	r4, .L84
 848              		bne	.L81
 849              		.loc 1 508 0
 850              		ldr	r3, [r4, #0]
 851              		strb	r0, [r3, #0]
 852              		.loc 1 509 0
 853              		ldr	r3, [r4, #0]
 854              		strb	r1, [r3, #1]
 855              		.loc 1 510 0
 856 0000 70B5     		ldr	r0, [r4, #0]
 857              	.LVL50:
 858              		mov	r1, ip
 859 0002 9446     	.LVL51:
 860 0004 1E46     		adds	r0, r0, #2
 861 0006 BDF81050 		bl	WriteLE16U
 862              	.LVL52:
 863 000a 4FF0000E 		.loc 1 511 0
 864              		ldr	r0, [r4, #0]
 865              		mov	r1, r6
 866 000e 05E0     		adds	r0, r0, #4
 867              		bl	WriteLE16U
 868              		.loc 1 512 0
 869              		ldr	r0, [r4, #0]
 870 0010 2268     		mov	r1, r5
 871 0012 0023     		adds	r0, r0, #6
 872 0014 0EF80230 		bl	WriteLE16U
 873              		.loc 1 513 0
 874 0018 0EF1010E 		pop	{r4, r5, r6, pc}
 875              	.L85:
 876              		.align	2
 877 001c AE45     	.L84:
 878 001e 0B4C     		.word	TDBuffer
 879 0020 F6D1     	.LFE39:
 881 0022 2368     		.section	.text.Host_CtrlSend,"ax",%progbits
 882 0024 1870     		.align	2
 883              		.global	Host_CtrlSend
 884 0026 2368     		.thumb
 885 0028 5970     		.thumb_func
 887 002a 2068     	Host_CtrlSend:
 888              	.LFB38:
 889 002c 6146     		.loc 1 465 0
 890              		@ args = 8, pretend = 0, frame = 0
 891 002e 0230     		@ frame_needed = 0, uses_anonymous_args = 0
 892 0030 FFF7FEFF 	.LVL53:
 893              		push	{r0, r1, r4, r5, r6, lr}
 894              	.LCFI10:
 895 0034 2068     	.LVL54:
 896 0036 3146     		.loc 1 472 0
 897 0038 0430     		ldr	r5, .L92
 898 003a FFF7FEFF 		.loc 1 465 0
 899              		ldrh	r4, [sp, #24]
 900 003e 2068     	.LVL55:
 901 0040 2946     		.loc 1 472 0
 902 0042 0630     		ldr	r6, .L92+4
 903 0044 FFF7FEFF 		.loc 1 470 0
 904              		str	r4, [sp, #0]
 905 0048 70BD     		bl	Host_FillSetup
 906              	.LVL56:
 907 004a C046     		.loc 1 472 0
 908              		movs	r3, #8
 909 004c 00000000 		ldr	r0, [r5, #0]
 910              		movs	r1, #0
 911              		ldr	r2, [r6, #0]
 912              		bl	Host_ProcessTD
 913              		.loc 1 473 0
 914              		mov	r3, r0
 915              	.LVL57:
 916              		cbnz	r0, .L87
 917              		.loc 1 474 0
 918              		cbz	r4, .L89
 919              		.loc 1 475 0
 920              		mov	r3, r4
 921              	.LVL58:
 922              		ldr	r0, [r5, #0]
 923              		mov	r1, #524288
 924 0000 73B5     		ldr	r2, [r6, #0]
 925              		bl	Host_ProcessTD
 926              		.loc 1 477 0
 927              		mov	r3, r0
 928 0002 114D     	.LVL59:
 929              		cbnz	r0, .L87
 930 0004 BDF81840 	.L89:
 931              		.loc 1 478 0
 932              		movs	r2, #0
 933 0008 104E     		mov	r3, r2
 934              	.LVL60:
 935 000a 0094     		ldr	r0, [r5, #0]
 936 000c FFF7FEFF 		mov	r1, #1048576
 937              		bl	Host_ProcessTD
 938              		mov	r3, r0
 939 0010 0823     	.LVL61:
 940 0012 2868     	.L87:
 941 0014 0021     		.loc 1 482 0
 942 0016 3268     		mov	r0, r3
 943 0018 FFF7FEFF 		pop	{r2, r3, r4, r5, r6, pc}
 944              	.L93:
 945 001c 0346     		.align	2
 946              	.L92:
 947 001e 88B9     		.word	EDCtrl
 948              		.word	TDBuffer
 949 0020 44B1     	.LFE38:
 951 0022 2346     		.section	.text.Host_CtrlRecv,"ax",%progbits
 952              		.align	2
 953 0024 2868     		.global	Host_CtrlRecv
 954 0026 4FF40021 		.thumb
 955 002a 3268     		.thumb_func
 957              	Host_CtrlRecv:
 958 0030 0346     	.LFB37:
 959              		.loc 1 427 0
 960 0032 38B9     		@ args = 8, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962              	.LVL62:
 963 0034 0022     		push	{r0, r1, r4, r5, r6, lr}
 964 0036 1346     	.LCFI11:
 965              	.LVL63:
 966 0038 2868     		.loc 1 433 0
 967 003a 4FF48011 		ldr	r5, .L100
 968 003e FFF7FEFF 		.loc 1 427 0
 969 0042 0346     		ldrh	r4, [sp, #24]
 970              	.LVL64:
 971              		.loc 1 433 0
 972              		ldr	r6, .L100+4
 973 0044 1846     		.loc 1 432 0
 974 0046 7CBD     		str	r4, [sp, #0]
 975              		bl	Host_FillSetup
 976              	.LVL65:
 977              		.loc 1 433 0
 978 0048 00000000 		movs	r3, #8
 979 004c 00000000 		ldr	r0, [r5, #0]
 980              		movs	r1, #0
 981              		ldr	r2, [r6, #0]
 982              		bl	Host_ProcessTD
 983              		.loc 1 434 0
 984              		mov	r3, r0
 985              	.LVL66:
 986              		cbnz	r0, .L95
 987              		.loc 1 435 0
 988              		cbz	r4, .L97
 989              		.loc 1 436 0
 990              		mov	r3, r4
 991              	.LVL67:
 992              		ldr	r0, [r5, #0]
 993              		mov	r1, #1048576
 994 0000 73B5     		ldr	r2, [r6, #0]
 995              		bl	Host_ProcessTD
 996              		.loc 1 438 0
 997              		mov	r3, r0
 998 0002 114D     	.LVL68:
 999              		cbnz	r0, .L95
 1000 0004 BDF81840 	.L97:
 1001              		.loc 1 439 0
 1002              		movs	r2, #0
 1003 0008 104E     		mov	r3, r2
 1004              	.LVL69:
 1005 000a 0094     		ldr	r0, [r5, #0]
 1006 000c FFF7FEFF 		mov	r1, #524288
 1007              		bl	Host_ProcessTD
 1008              		mov	r3, r0
 1009 0010 0823     	.LVL70:
 1010 0012 2868     	.L95:
 1011 0014 0021     		.loc 1 443 0
 1012 0016 3268     		mov	r0, r3
 1013 0018 FFF7FEFF 		pop	{r2, r3, r4, r5, r6, pc}
 1014              	.L101:
 1015 001c 0346     		.align	2
 1016              	.L100:
 1017 001e 88B9     		.word	EDCtrl
 1018              		.word	TDBuffer
 1019 0020 44B1     	.LFE37:
 1021 0022 2346     		.section	.text.ReadBE32U,"ax",%progbits
 1022              		.align	2
 1023 0024 2868     		.global	ReadBE32U
 1024 0026 4FF48011 		.thumb
 1025 002a 3268     		.thumb_func
 1027              	ReadBE32U:
 1028 0030 0346     	.LFB48:
 1029              		.loc 1 721 0
 1030 0032 38B9     		@ args = 0, pretend = 0, frame = 8
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              		@ link register save eliminated.
 1033 0034 0022     	.LVL71:
 1034 0036 1346     		.loc 1 724 0
 1035              		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1036 0038 2868     		.loc 1 721 0
 1037 003a 4FF40021 		sub	sp, sp, #8
 1038 003e FFF7FEFF 	.LCFI12:
 1039 0042 0346     		.loc 1 724 0
 1040              		strb	r3, [sp, #4]
 1041              		.loc 1 725 0
 1042              		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1043 0044 1846     		.loc 1 721 0
 1044 0046 7CBD     		@ lr needed for prologue
 1045              		.loc 1 725 0
 1046              		strb	r3, [sp, #5]
 1047              		.loc 1 726 0
 1048 0048 00000000 		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1049 004c 00000000 		strb	r3, [sp, #6]
 1050              		.loc 1 727 0
 1051              		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 1052              		strb	r3, [sp, #7]
 1053              		.loc 1 730 0
 1054              		ldr	r0, [sp, #4]
 1055              	.LVL72:
 1056              		add	sp, sp, #8
 1057              		bx	lr
 1058              	.LFE48:
 705:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 706:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 707:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 708:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         READ BE 32U
 709:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 710:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to read an unsigned integer from a charecter buffer in the pla
 711:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              containing big endian processor
 712:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 713:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : pmem    Pointer to the charecter buffer
 714:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 715:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : val     Unsigned integer
 716:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 717:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 718:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 719:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 720:Libraries/USBHostLite/usbhost_lpc17xx.c **** USB_INT32U  ReadBE32U (volatile  USB_INT08U  *pmem)
 721:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 1060              	nymous_args = 0
 1061              		@ link register save eliminated.
 1062              	.LVL73:
 1063              		sub	sp, sp, #8
 1064              	.LCFI13:
 722:Libraries/USBHostLite/usbhost_lpc17xx.c ****     USB_INT32U   val;
 723:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 724:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[0] = pmem[3];
 1065              	r1, [sp, #4]
 1066 0000 C378     		.loc 1 750 0
 1067              		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1068 0002 82B0     		.loc 1 749 0
 1069              		@ lr needed for prologue
 1070              		.loc 1 750 0
 1071 0004 8DF80430 		strb	r3, [r0, #0]
 725:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[1] = pmem[2];
 1072              	 751 0
 1073 0008 8378     		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 1074              		strb	r3, [r0, #1]
 1075              		.loc 1 752 0
 1076              		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1077 000a 8DF80530 		strb	r3, [r0, #2]
 726:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[2] = pmem[1];
 1078              	1 753 0
 1079 000e 4378     		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1080 0010 8DF80630 		strb	r3, [r0, #3]
 727:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[3] = pmem[0];
 1081              	oc 1 755 0
 1082 0014 0378     		add	sp, sp, #8
 1083 0016 8DF80730 		bx	lr
 728:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 729:Libraries/USBHostLite/usbhost_lpc17xx.c ****     return (val);
 730:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 1084              	E49:
 1086              		.section	.text.ReadBE16U,"ax",%progbits
 1087 001c 02B0     		.align	2
 1088 001e 7047     		.global	ReadBE16U
 1089              		.thumb
 1090              		.thumb_func
 1092              	ReadBE16U:
 1093              	.LFB50:
 1094              		.loc 1 772 0
 1095              		@ args = 0, pretend = 0, frame = 8
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097              		@ link register save eliminated.
 1098              	.LVL74:
 731:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 732:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 733:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 734:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         WRITE BE 32U
 735:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 736:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to write an unsigned integer into a charecter buffer in the pl
 737:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              containing big endian processor
 738:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 739:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : pmem    Pointer to the charecter buffer
 740:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              val     Value to be placed in the charecter buffer
 741:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 742:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : None
 743:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 744:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 745:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 746:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 747:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  WriteBE32U (volatile  USB_INT08U  *pmem,
 748:Libraries/USBHostLite/usbhost_lpc17xx.c ****                             USB_INT32U   val)
 749:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 1099              	ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1100              		.loc 1 772 0
 1101              		sub	sp, sp, #8
 1102              	.LCFI14:
 1103              		.loc 1 776 0
 1104 0000 82B0     		strb	r3, [sp, #6]
 1105              		.loc 1 777 0
 1106 0002 0191     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 750:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[0] = ((USB_INT08U *)&val)[3];
 1107              	772 0
 1108 0004 9DF80730 		@ lr needed for prologue
 1109              		.loc 1 777 0
 1110              		strb	r3, [sp, #7]
 1111              		.loc 1 780 0
 1112 0008 0370     		ldrh	r0, [sp, #6]
 751:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[1] = ((USB_INT08U *)&val)[2];
 1113              	:
 1114 000a 9DF80630 		add	sp, sp, #8
 1115 000e 4370     		bx	lr
 752:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[2] = ((USB_INT08U *)&val)[1];
 1116              	E50:
 1118 0014 8370     		.section	.text.WriteBE16U,"ax",%progbits
 753:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[3] = ((USB_INT08U *)&val)[0];
 1119              	lign	2
 1120 0016 9DF80430 		.global	WriteBE16U
 1121 001a C370     		.thumb
 754:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 755:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 1122              	humb_func
 1124 001e 7047     	WriteBE16U:
 1125              	.LFB51:
 1126              		.loc 1 799 0
 1127              		@ args = 0, pretend = 0, frame = 8
 1128              		@ frame_needed = 0, uses_anonymous_args = 0
 1129              		@ link register save eliminated.
 1130              	.LVL76:
 1131              		sub	sp, sp, #8
 1132              	.LCFI15:
 1133              		strh	r1, [sp, #6]	@ movhi
 1134              		.loc 1 800 0
 756:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 757:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 758:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 759:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         READ BE 16U
 760:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 761:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to read an unsigned short integer from a charecter buffer in t
 762:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              containing big endian processor
 763:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 764:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : pmem    Pointer to the charecter buffer
 765:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 766:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : val     Unsigned short integer
 767:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 768:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 769:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 770:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 771:Libraries/USBHostLite/usbhost_lpc17xx.c **** USB_INT16U  ReadBE16U (volatile  USB_INT08U  *pmem)
 772:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 1135              	, #7]	@ zero_extendqisi2
 1136              		.loc 1 799 0
 1137              		@ lr needed for prologue
 1138              		.loc 1 800 0
 1139              		strb	r3, [r0, #0]
 773:Libraries/USBHostLite/usbhost_lpc17xx.c ****     USB_INT16U  val;
 774:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 775:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 776:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[0] = pmem[1];
 1140              	 1 801 0
 1141 0000 4378     		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 1142              		strb	r3, [r0, #1]
 1143 0002 82B0     		.loc 1 802 0
 1144              		add	sp, sp, #8
 1145              		bx	lr
 1146 0004 8DF80630 	.LFE51:
 777:Libraries/USBHostLite/usbhost_lpc17xx.c ****     ((USB_INT08U *)&val)[1] = pmem[0];
 1147              	WriteBE16U, .-WriteBE16U
 1148 0008 0378     		.section	.text.Host_EnumDev,"ax",%progbits
 1149              		.align	2
 1150              		.global	Host_EnumDev
 1151              		.thumb
 1152 000a 8DF80730 		.thumb_func
 778:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 779:Libraries/USBHostLite/usbhost_lpc17xx.c ****     return (val);
 780:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 1153              		Host_EnumDev, %function
 1154 000e BDF80600 	Host_EnumDev:
 1155              	.LFB36:
 1156 0012 02B0     		.loc 1 350 0
 1157 0014 7047     		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              		push	{r0, r1, r4, r5, r6, lr}
 1160 0016 C046     	.LCFI16:
 1161              	.L112:
 1162              		.loc 1 354 0
 1163              		ldr	r3, .L123
 1164              		ldr	r3, [r3, #0]
 1165              		cmp	r3, #0
 1166              		beq	.L112
 1167              		.loc 1 355 0
 781:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 782:Libraries/USBHostLite/usbhost_lpc17xx.c **** /*
 783:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 784:Libraries/USBHostLite/usbhost_lpc17xx.c **** *                                         WRITE BE 16U
 785:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 786:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Description: This function is used to write an unsigned short integer into the charecter buffer i
 787:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              platform containing big endian processor
 788:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 789:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Arguments  : pmem    Pointer to the charecter buffer
 790:Libraries/USBHostLite/usbhost_lpc17xx.c **** *              val     Value to be placed in the charecter buffer
 791:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 792:Libraries/USBHostLite/usbhost_lpc17xx.c **** * Returns    : None
 793:Libraries/USBHostLite/usbhost_lpc17xx.c **** *
 794:Libraries/USBHostLite/usbhost_lpc17xx.c **** ***************************************************************************************************
 795:Libraries/USBHostLite/usbhost_lpc17xx.c **** */
 796:Libraries/USBHostLite/usbhost_lpc17xx.c **** 
 797:Libraries/USBHostLite/usbhost_lpc17xx.c **** void  WriteBE16U (volatile  USB_INT08U  *pmem,
 798:Libraries/USBHostLite/usbhost_lpc17xx.c ****                             USB_INT16U   val)
 799:Libraries/USBHostLite/usbhost_lpc17xx.c **** {
 1168              		bl	Host_DelayMS
 1169              		.loc 1 356 0
 1170              		ldr	r3, .L123+4
 1171              		movs	r2, #16
 1172              		str	r2, [r3, #84]
 1173 0000 82B0     	.L114:
 1174              		.loc 1 357 0
 1175 0002 ADF80610 		ldr	r2, .L123+4
 800:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[0] = ((USB_INT08U *)&val)[1];
 1176              	 [r2, #84]
 1177 0006 9DF80730 		ands	r4, r3, #16
 1178              		bne	.L114
 1179              		.loc 1 359 0
 1180              		mov	r3, #1048576
 1181 000a 0370     		.loc 1 362 0
 801:Libraries/USBHostLite/usbhost_lpc17xx.c ****     pmem[1] = ((USB_INT08U *)&val)[0];
 1182              	6, .L123+8
 1183 000c 9DF80630 		.loc 1 359 0
 1184 0010 4370     		str	r3, [r2, #84]
 802:Libraries/USBHostLite/usbhost_lpc17xx.c **** }
 1185              	oc 1 360 0
 1186 0012 02B0     		movs	r0, #200
 1187 0014 7047     		bl	Host_DelayMS
 1188              		.loc 1 364 0
 1189              		ldr	r5, .L123+12
 1190 0016 C046     		.loc 1 362 0
 1191              		ldr	r2, [r6, #0]
 1192              		mov	r3, #524288
 1193              		str	r3, [r2, #0]
 1194              		.loc 1 364 0
 1195              		ldr	r2, [r5, #0]
 1196              		movs	r3, #8
 1197              		str	r3, [sp, #0]
 1198              		str	r2, [sp, #4]
 1199              		mov	r3, r4
 1200              		movs	r0, #128
 1201 0000 73B5     		movs	r1, #6
 1202              		mov	r2, #256
 1203              		bl	Host_CtrlRecv
 1204              		.loc 1 365 0
 1205 0002 374B     		mov	r4, r0
 1206 0004 1B68     	.LVL77:
 1207 0006 002B     		cmp	r0, #0
 1208 0008 FBD0     		bne	.L116
 1209              		.loc 1 369 0
 1210 000a 6420     		ldr	r3, [r5, #0]
 1211 000c FFF7FEFF 		ldr	r2, [r6, #0]
 1212              		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1213 0010 344B     		.loc 1 370 0
 1214 0012 1022     		movs	r1, #5
 1215 0014 5A65     		.loc 1 369 0
 1216              		lsls	r3, r3, #16
 1217              		str	r3, [r2, #0]
 1218 0016 334A     		.loc 1 370 0
 1219 0018 536D     		movs	r2, #1
 1220 001a 13F01004 		mov	r3, r0
 1221 001e FAD1     		str	r0, [sp, #0]
 1222              		str	r0, [sp, #4]
 1223 0020 4FF48013 		bl	Host_CtrlSend
 1224              		.loc 1 371 0
 1225 0024 304E     		mov	r4, r0
 1226              		cmp	r0, #0
 1227 0026 5365     		bne	.L116
 1228              		.loc 1 375 0
 1229 0028 C820     		adds	r0, r0, #2
 1230 002a FFF7FEFF 		bl	Host_DelayMS
 1231              		.loc 1 376 0
 1232 002e 2F4D     		ldr	r3, [r6, #0]
 1233              		.loc 1 378 0
 1234 0030 3268     		movs	r0, #128
 1235 0032 4FF40023 		.loc 1 376 0
 1236 0036 1360     		ldr	r2, [r3, #0]
 1237              		.loc 1 378 0
 1238 0038 2A68     		movs	r6, #9
 1239 003a 0823     		.loc 1 376 0
 1240 003c 0093     		orr	r2, r2, #1
 1241 003e 0192     		str	r2, [r3, #0]
 1242 0040 2346     		.loc 1 378 0
 1243 0042 8020     		ldr	r3, [r5, #0]
 1244 0044 0621     		movs	r1, #6
 1245 0046 4FF48072 		str	r3, [sp, #4]
 1246 004a FFF7FEFF 		mov	r2, #512
 1247              		mov	r3, r4
 1248 004e 0446     		str	r6, [sp, #0]
 1249              		bl	Host_CtrlRecv
 1250 0050 0028     		.loc 1 379 0
 1251 0052 42D1     		mov	r4, r0
 1252              		cbnz	r0, .L116
 1253 0054 2B68     		.loc 1 384 0
 1254 0056 3268     		ldr	r0, [r5, #0]
 1255 0058 DB79     		adds	r0, r0, #2
 1256              		bl	ReadLE16U
 1257 005a 0521     		ldr	r3, [r5, #0]
 1258              		str	r0, [sp, #0]
 1259 005c 1B04     		str	r3, [sp, #4]
 1260 005e 1360     		movs	r0, #128
 1261              		mov	r3, r4
 1262 0060 0122     		movs	r1, #6
 1263 0062 0346     		mov	r2, #512
 1264 0064 0090     		bl	Host_CtrlRecv
 1265 0066 0190     		.loc 1 385 0
 1266 0068 FFF7FEFF 		mov	r4, r0
 1267              		cbnz	r0, .L116
 1268 006c 0446     		.loc 1 389 0
 1269 006e 0028     		bl	MS_ParseConfiguration
 1270 0070 33D1     		.loc 1 390 0
 1271              		mov	r4, r0
 1272 0072 0230     		cbnz	r0, .L116
 1273 0074 FFF7FEFF 		.loc 1 394 0
 1274              		mov	r1, r6
 1275 0078 3368     		movs	r2, #1
 1276              		mov	r3, r0
 1277 007a 8020     		str	r0, [sp, #0]
 1278              		str	r0, [sp, #4]
 1279 007c 1A68     		bl	Host_CtrlSend
 1280              		mov	r4, r0
 1281 007e 0926     		.loc 1 398 0
 1282              		movs	r0, #100
 1283 0080 42F00102 		bl	Host_DelayMS
 1284 0084 1A60     	.L116:
 1285              		.loc 1 400 0
 1286 0086 2B68     		mov	r0, r4
 1287 0088 0621     		pop	{r2, r3, r4, r5, r6, pc}
 1288 008a 0193     	.L124:
 1289 008c 4FF40072 		.align	2
 1290 0090 2346     	.L123:
 1291 0092 0096     		.word	.LANCHOR0
 1292 0094 FFF7FEFF 		.word	1342226432
 1293              		.word	EDCtrl
 1294 0098 0446     		.word	TDBuffer
 1295 009a F0B9     	.LFE36:
 1297 009c 2868     		.global	HOST_RhscIntr
 1298 009e 0230     		.global	HOST_WdhIntr
 1299 00a0 FFF7FEFF 		.global	HOST_TDControlStatus
 1300 00a4 2B68     		.comm	EDBulkIn,4,4
 1301 00a6 0090     		.comm	EDBulkOut,4,4
 1302 00a8 0193     		.comm	TDHead,4,4
 1303 00aa 8020     		.comm	TDTail,4,4
 1304 00ac 2346     		.comm	TDBuffer,4,4
 1305 00ae 0621     		.comm	FATBuffer,4,4
 1306 00b0 4FF40072 		.comm	UserBuffer,4,4
 1307 00b4 FFF7FEFF 		.comm	gUSBConnected,4,4
 1308              		.comm	EDCtrl,4,4
 1309 00b8 0446     		.comm	Hcca,4,4
 1310 00ba 70B9     		.comm	TDBufNonVol,4,4
 1311              		.section	.bss.HOST_TDControlStatus,"aw",%nobits
 1312 00bc FFF7FEFF 		.set	.LANCHOR1,. + 0
 1315 00c2 50B9     	HOST_TDControlStatus:
 1316              		.space	1
 1317 00c4 3146     		.section	.bss.HOST_RhscIntr,"aw",%nobits
 1318 00c6 0122     		.align	2
 1319 00c8 0346     		.set	.LANCHOR0,. + 0
 1322 00ce FFF7FEFF 	HOST_RhscIntr:
 1323 00d2 0446     		.space	4
 1324              		.section	.bss.HOST_WdhIntr,"aw",%nobits
 1325 00d4 6420     		.align	2
 1326 00d6 FFF7FEFF 		.set	.LANCHOR2,. + 0
 1329 00da 2046     	HOST_WdhIntr:
 1330 00dc 7CBD     		.space	4
 1331              		.section	.debug_frame,"",%progbits
 1332 00de C046     	.Lframe0:
 1333              		.4byte	.LECIE0-.LSCIE0
 1334 00e0 00000000 	.LSCIE0:
 1335 00e4 00C00050 		.4byte	0xffffffff
 1336 00e8 00000000 		.byte	0x1
 1337 00ec 00000000 		.ascii	"\000"
 1338              		.uleb128 0x1
 1339              		.sleb128 -4
 1340              		.byte	0xe
 1341              		.byte	0xc
 1342              		.uleb128 0xd
 1343              		.uleb128 0x0
 1344              		.align	2
 1345              	.LECIE0:
 1346              	.LSFDE0:
 1347              		.4byte	.LEFDE0-.LASFDE0
 1348              	.LASFDE0:
 1349              		.4byte	.Lframe0
 1350              		.4byte	.LFB32
 1351              		.4byte	.LFE32-.LFB32
 1352              		.byte	0x4
 1353              		.4byte	.LCFI0-.LFB32
 1354              		.byte	0xe
 1355              		.uleb128 0x8
 1356              		.align	2
 1357              	.LEFDE0:
 1358              	.LSFDE2:
 1359 0000 00       		.4byte	.LEFDE2-.LASFDE2
 1360              	.LASFDE2:
 1361              		.4byte	.Lframe0
 1362              		.4byte	.LFB31
 1363              		.4byte	.LFE31-.LFB31
 1364              		.byte	0x4
 1365              		.4byte	.LCFI1-.LFB31
 1366 0000 00000000 		.byte	0xe
 1367              		.uleb128 0x10
 1368              		.byte	0x8e
 1369              		.uleb128 0x1
 1370              		.byte	0x84
 1371              		.uleb128 0x2
 1372              		.byte	0x81
 1373 0000 00000000 		.uleb128 0x3
 1714              		.4byte	.LVL7
DEFINED SYMBOLS
                            *ABS*:00000000 usbhost_lpc17xx.c
                            .text:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:28     .text.Host_DelayUS:00000000 Host_DelayUS
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:25     .text.Host_DelayUS:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:68     .text.Host_DelayMS:00000000 Host_DelayMS
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:65     .text.Host_DelayMS:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:108    .text.USB_IRQHandler:00000000 USB_IRQHandler
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:105    .text.USB_IRQHandler:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:225    .text.USB_IRQHandler:00000088 $d
                            *COM*:00000004 gUSBConnected
                            *COM*:00000004 TDHead
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:239    .text.Host_TDInit:00000000 Host_TDInit
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:236    .text.Host_TDInit:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:267    .text.Host_EDInit:00000000 Host_EDInit
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:264    .text.Host_EDInit:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:295    .text.Host_HCCAInit:00000000 Host_HCCAInit
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:292    .text.Host_HCCAInit:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:329    .text.Host_Init:00000000 Host_Init
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:326    .text.Host_Init:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:506    .text.Host_Init:00000104 $d
                            *COM*:00000004 Hcca
                            *COM*:00000004 EDBulkIn
                            *COM*:00000004 EDCtrl
                            *COM*:00000004 EDBulkOut
                            *COM*:00000004 TDBuffer
                            *COM*:00000004 FATBuffer
                            *COM*:00000004 UserBuffer
                            *COM*:00000004 TDTail
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:535    .text.Host_WDHWait:00000000 Host_WDHWait
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:532    .text.Host_WDHWait:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:556    .text.Host_WDHWait:00000010 $d
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:565    .text.Host_ProcessTD:00000000 Host_ProcessTD
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:562    .text.Host_ProcessTD:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:699    .text.Host_ProcessTD:000000a4 $d
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:712    .text.ReadLE32U:00000000 ReadLE32U
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:709    .text.ReadLE32U:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:751    .text.WriteLE32U:00000000 WriteLE32U
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:748    .text.WriteLE32U:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:787    .text.ReadLE16U:00000000 ReadLE16U
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:784    .text.ReadLE16U:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:820    .text.WriteLE16U:00000000 WriteLE16U
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:817    .text.WriteLE16U:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:850    .text.Host_FillSetup:00000000 Host_FillSetup
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:847    .text.Host_FillSetup:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:909    .text.Host_FillSetup:0000004c $d
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:918    .text.Host_CtrlSend:00000000 Host_CtrlSend
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:915    .text.Host_CtrlSend:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:978    .text.Host_CtrlSend:00000048 $d
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:988    .text.Host_CtrlRecv:00000000 Host_CtrlRecv
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:985    .text.Host_CtrlRecv:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1048   .text.Host_CtrlRecv:00000048 $d
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1058   .text.ReadBE32U:00000000 ReadBE32U
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1055   .text.ReadBE32U:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1097   .text.WriteBE32U:00000000 WriteBE32U
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1094   .text.WriteBE32U:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1133   .text.ReadBE16U:00000000 ReadBE16U
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1130   .text.ReadBE16U:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1166   .text.WriteBE16U:00000000 WriteBE16U
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1163   .text.WriteBE16U:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1196   .text.Host_EnumDev:00000000 Host_EnumDev
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1193   .text.Host_EnumDev:00000000 $t
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1334   .text.Host_EnumDev:000000e0 $d
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1365   .bss.HOST_RhscIntr:00000000 HOST_RhscIntr
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1372   .bss.HOST_WdhIntr:00000000 HOST_WdhIntr
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1358   .bss.HOST_TDControlStatus:00000000 HOST_TDControlStatus
                            *COM*:00000004 TDBufNonVol
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1376   .debug_frame:00000000 $d
C:\Users\KVIN~1\AppData\Local\Temp/cck1baaa.s:1718   .debug_loc:00000000 $d

UNDEFINED SYMBOLS
MS_ParseConfiguration
